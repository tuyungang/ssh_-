!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AB	tinyssh/tinyssh/sshcrypto_cipher_aesctr.c	21;"	d	file:
AB	tinyssh/tinyssh/sshcrypto_cipher_chachapoly.c	19;"	d	file:
B	tinyssh/crypto/ge25519.base.py	/^B = [Bx % q,By % q]$/;"	v
B	tinyssh/crypto/gep256.base.py	/^B = (basepx, basepy)$/;"	v
BB	tinyssh/tinyssh/sshcrypto_cipher_aesctr.c	20;"	d	file:
BB	tinyssh/tinyssh/sshcrypto_cipher_chachapoly.c	18;"	d	file:
BLOCKING_H	tinyssh/tinyssh/blocking.h	2;"	d
BYTE_H	tinyssh/tinyssh/byte.h	2;"	d
Bi	tinyssh/crypto/ge25519.base.py	/^    Bi = edwards(Bi,Bi)$/;"	v
Bi	tinyssh/crypto/ge25519.base.py	/^Bi = B$/;"	v
Bij	tinyssh/crypto/ge25519.base.py	/^    Bij = edwards(Bij,Bi)$/;"	v
Bij	tinyssh/crypto/ge25519.base.py	/^  Bij = Bi$/;"	v
Bx	tinyssh/crypto/ge25519.base.py	/^Bx = xrecover(By)$/;"	v
By	tinyssh/crypto/ge25519.base.py	/^By = 4 * inv(5)$/;"	v
CHANNEL_BUFSIZE	tinyssh/tinyssh/channel.h	9;"	d
CHANNEL_SUBSYSTEM_MAX	tinyssh/tinyssh/channel.h	92;"	d
Ch	tinyssh/crypto/sha256.c	/^static crypto_uint32 Ch(crypto_uint32 x,crypto_uint32 y,crypto_uint32 z) { return (x & y) ^ (~x & z); }$/;"	f	file:	signature:(crypto_uint32 x,crypto_uint32 y,crypto_uint32 z)
Ch	tinyssh/crypto/sha512.c	/^static crypto_uint64 Ch(crypto_uint64 x, crypto_uint64 y, crypto_uint64 z) { return (x & y) ^ (~x & z); }$/;"	f	file:	signature:(crypto_uint64 x, crypto_uint64 y, crypto_uint64 z)
D	tinyssh/crypto/ge25519.c	/^static fe D = { $/;"	v	file:
D2	tinyssh/crypto/ge25519.c	/^static fe D2 = { $/;"	v	file:
DH_PubKey_Crypto	ssh_crypto.h	/^        DH_PubKey_Crypto();$/;"	p	class:DH_PubKey_Crypto	access:public	signature:()
DH_PubKey_Crypto	ssh_crypto.h	/^class DH_PubKey_Crypto$/;"	c
DH_PubKey_Crypto::DH_PubKey_Crypto	ssh_crypto.h	/^        DH_PubKey_Crypto();$/;"	p	class:DH_PubKey_Crypto	access:public	signature:()
DH_PubKey_Crypto::~DH_PubKey_Crypto	ssh_crypto.h	/^        ~DH_PubKey_Crypto();$/;"	p	class:DH_PubKey_Crypto	access:public	signature:()
E2BIG	e.h	27;"	d
E2BIG	tinyssh/tinyssh/e.h	27;"	d
EACCES	e.h	48;"	d
EACCES	tinyssh/tinyssh/e.h	48;"	d
EADDRINUSE	e.h	300;"	d
EADDRINUSE	tinyssh/tinyssh/e.h	300;"	d
EADDRNOTAVAIL	e.h	303;"	d
EADDRNOTAVAIL	tinyssh/tinyssh/e.h	303;"	d
EADV	e.h	210;"	d
EADV	tinyssh/tinyssh/e.h	210;"	d
EAFNOSUPPORT	e.h	297;"	d
EAFNOSUPPORT	tinyssh/tinyssh/e.h	297;"	d
EAGAIN	e.h	39;"	d
EAGAIN	tinyssh/tinyssh/e.h	39;"	d
EALREADY	e.h	348;"	d
EALREADY	tinyssh/tinyssh/e.h	348;"	d
EAUTH	e.h	426;"	d
EAUTH	tinyssh/tinyssh/e.h	426;"	d
EBADE	e.h	165;"	d
EBADE	tinyssh/tinyssh/e.h	165;"	d
EBADF	e.h	33;"	d
EBADF	tinyssh/tinyssh/e.h	33;"	d
EBADFD	e.h	237;"	d
EBADFD	tinyssh/tinyssh/e.h	237;"	d
EBADMSG	e.h	228;"	d
EBADMSG	tinyssh/tinyssh/e.h	228;"	d
EBADR	e.h	168;"	d
EBADR	tinyssh/tinyssh/e.h	168;"	d
EBADRPC	e.h	408;"	d
EBADRPC	tinyssh/tinyssh/e.h	408;"	d
EBADRQC	e.h	177;"	d
EBADRQC	tinyssh/tinyssh/e.h	177;"	d
EBADSLT	e.h	180;"	d
EBADSLT	tinyssh/tinyssh/e.h	180;"	d
EBFONT	e.h	183;"	d
EBFONT	tinyssh/tinyssh/e.h	183;"	d
EBUSY	e.h	57;"	d
EBUSY	tinyssh/tinyssh/e.h	57;"	d
ECANCELED	e.h	381;"	d
ECANCELED	tinyssh/tinyssh/e.h	381;"	d
ECHILD	e.h	36;"	d
ECHILD	tinyssh/tinyssh/e.h	36;"	d
ECHRNG	e.h	141;"	d
ECHRNG	tinyssh/tinyssh/e.h	141;"	d
ECOMM	e.h	216;"	d
ECOMM	tinyssh/tinyssh/e.h	216;"	d
ECONNABORTED	e.h	315;"	d
ECONNABORTED	tinyssh/tinyssh/e.h	315;"	d
ECONNREFUSED	e.h	339;"	d
ECONNREFUSED	tinyssh/tinyssh/e.h	339;"	d
ECONNRESET	e.h	318;"	d
ECONNRESET	tinyssh/tinyssh/e.h	318;"	d
EDEADLK	e.h	114;"	d
EDEADLK	tinyssh/tinyssh/e.h	114;"	d
EDEADLOCK	e.h	117;"	d
EDEADLOCK	tinyssh/tinyssh/e.h	117;"	d
EDESTADDRREQ	e.h	273;"	d
EDESTADDRREQ	tinyssh/tinyssh/e.h	273;"	d
EDOM	e.h	108;"	d
EDOM	tinyssh/tinyssh/e.h	108;"	d
EDOTDOT	e.h	225;"	d
EDOTDOT	tinyssh/tinyssh/e.h	225;"	d
EDQUOT	e.h	372;"	d
EDQUOT	tinyssh/tinyssh/e.h	372;"	d
EEXIST	e.h	60;"	d
EEXIST	tinyssh/tinyssh/e.h	60;"	d
EFAULT	e.h	51;"	d
EFAULT	tinyssh/tinyssh/e.h	51;"	d
EFBIG	e.h	90;"	d
EFBIG	tinyssh/tinyssh/e.h	90;"	d
EFTYPE	e.h	423;"	d
EFTYPE	tinyssh/tinyssh/e.h	423;"	d
EHOSTDOWN	e.h	342;"	d
EHOSTDOWN	tinyssh/tinyssh/e.h	342;"	d
EHOSTUNREACH	e.h	345;"	d
EHOSTUNREACH	tinyssh/tinyssh/e.h	345;"	d
EIDRM	e.h	138;"	d
EIDRM	tinyssh/tinyssh/e.h	138;"	d
EILSEQ	e.h	258;"	d
EILSEQ	tinyssh/tinyssh/e.h	258;"	d
EINPROGRESS	e.h	351;"	d
EINPROGRESS	tinyssh/tinyssh/e.h	351;"	d
EINTR	e.h	18;"	d
EINTR	tinyssh/tinyssh/e.h	18;"	d
EINVAL	e.h	75;"	d
EINVAL	tinyssh/tinyssh/e.h	75;"	d
EIO	e.h	21;"	d
EIO	tinyssh/tinyssh/e.h	21;"	d
EISCONN	e.h	324;"	d
EISCONN	tinyssh/tinyssh/e.h	324;"	d
EISDIR	e.h	72;"	d
EISDIR	tinyssh/tinyssh/e.h	72;"	d
EISNAM	e.h	366;"	d
EISNAM	tinyssh/tinyssh/e.h	366;"	d
EKEYEXPIRED	e.h	387;"	d
EKEYEXPIRED	tinyssh/tinyssh/e.h	387;"	d
EKEYREJECTED	e.h	393;"	d
EKEYREJECTED	tinyssh/tinyssh/e.h	393;"	d
EKEYREVOKED	e.h	390;"	d
EKEYREVOKED	tinyssh/tinyssh/e.h	390;"	d
EL2HLT	e.h	162;"	d
EL2HLT	tinyssh/tinyssh/e.h	162;"	d
EL2NSYNC	e.h	144;"	d
EL2NSYNC	tinyssh/tinyssh/e.h	144;"	d
EL3HLT	e.h	147;"	d
EL3HLT	tinyssh/tinyssh/e.h	147;"	d
EL3RST	e.h	150;"	d
EL3RST	tinyssh/tinyssh/e.h	150;"	d
ELIBACC	e.h	243;"	d
ELIBACC	tinyssh/tinyssh/e.h	243;"	d
ELIBBAD	e.h	246;"	d
ELIBBAD	tinyssh/tinyssh/e.h	246;"	d
ELIBEXEC	e.h	255;"	d
ELIBEXEC	tinyssh/tinyssh/e.h	255;"	d
ELIBMAX	e.h	252;"	d
ELIBMAX	tinyssh/tinyssh/e.h	252;"	d
ELIBSCN	e.h	249;"	d
ELIBSCN	tinyssh/tinyssh/e.h	249;"	d
ELNRNG	e.h	153;"	d
ELNRNG	tinyssh/tinyssh/e.h	153;"	d
ELOOP	e.h	132;"	d
ELOOP	tinyssh/tinyssh/e.h	132;"	d
EMEDIUMTYPE	e.h	378;"	d
EMEDIUMTYPE	tinyssh/tinyssh/e.h	378;"	d
EMFILE	e.h	81;"	d
EMFILE	tinyssh/tinyssh/e.h	81;"	d
EMLINK	e.h	102;"	d
EMLINK	tinyssh/tinyssh/e.h	102;"	d
EMSGSIZE	e.h	276;"	d
EMSGSIZE	tinyssh/tinyssh/e.h	276;"	d
EMULTIHOP	e.h	222;"	d
EMULTIHOP	tinyssh/tinyssh/e.h	222;"	d
ENAMETOOLONG	e.h	120;"	d
ENAMETOOLONG	tinyssh/tinyssh/e.h	120;"	d
ENAVAIL	e.h	363;"	d
ENAVAIL	tinyssh/tinyssh/e.h	363;"	d
ENEEDAUTH	e.h	429;"	d
ENEEDAUTH	tinyssh/tinyssh/e.h	429;"	d
ENETDOWN	e.h	306;"	d
ENETDOWN	tinyssh/tinyssh/e.h	306;"	d
ENETRESET	e.h	312;"	d
ENETRESET	tinyssh/tinyssh/e.h	312;"	d
ENETUNREACH	e.h	309;"	d
ENETUNREACH	tinyssh/tinyssh/e.h	309;"	d
ENFILE	e.h	78;"	d
ENFILE	tinyssh/tinyssh/e.h	78;"	d
ENOANO	e.h	174;"	d
ENOANO	tinyssh/tinyssh/e.h	174;"	d
ENOATTR	e.h	432;"	d
ENOATTR	tinyssh/tinyssh/e.h	432;"	d
ENOBUFS	e.h	321;"	d
ENOBUFS	tinyssh/tinyssh/e.h	321;"	d
ENOCSI	e.h	159;"	d
ENOCSI	tinyssh/tinyssh/e.h	159;"	d
ENODATA	e.h	189;"	d
ENODATA	tinyssh/tinyssh/e.h	189;"	d
ENODEV	e.h	66;"	d
ENODEV	tinyssh/tinyssh/e.h	66;"	d
ENOENT	e.h	12;"	d
ENOENT	tinyssh/tinyssh/e.h	12;"	d
ENOEXEC	e.h	30;"	d
ENOEXEC	tinyssh/tinyssh/e.h	30;"	d
ENOKEY	e.h	384;"	d
ENOKEY	tinyssh/tinyssh/e.h	384;"	d
ENOLCK	e.h	123;"	d
ENOLCK	tinyssh/tinyssh/e.h	123;"	d
ENOLINK	e.h	207;"	d
ENOLINK	tinyssh/tinyssh/e.h	207;"	d
ENOMEDIUM	e.h	375;"	d
ENOMEDIUM	tinyssh/tinyssh/e.h	375;"	d
ENOMEM	e.h	45;"	d
ENOMEM	tinyssh/tinyssh/e.h	45;"	d
ENOMSG	e.h	135;"	d
ENOMSG	tinyssh/tinyssh/e.h	135;"	d
ENONET	e.h	198;"	d
ENONET	tinyssh/tinyssh/e.h	198;"	d
ENOPKG	e.h	201;"	d
ENOPKG	tinyssh/tinyssh/e.h	201;"	d
ENOPROTOOPT	e.h	282;"	d
ENOPROTOOPT	tinyssh/tinyssh/e.h	282;"	d
ENOSPC	e.h	93;"	d
ENOSPC	tinyssh/tinyssh/e.h	93;"	d
ENOSR	e.h	195;"	d
ENOSR	tinyssh/tinyssh/e.h	195;"	d
ENOSTR	e.h	186;"	d
ENOSTR	tinyssh/tinyssh/e.h	186;"	d
ENOSYS	e.h	126;"	d
ENOSYS	tinyssh/tinyssh/e.h	126;"	d
ENOTBLK	e.h	54;"	d
ENOTBLK	tinyssh/tinyssh/e.h	54;"	d
ENOTCAPABLE	e.h	435;"	d
ENOTCAPABLE	tinyssh/tinyssh/e.h	435;"	d
ENOTCONN	e.h	327;"	d
ENOTCONN	tinyssh/tinyssh/e.h	327;"	d
ENOTDIR	e.h	69;"	d
ENOTDIR	tinyssh/tinyssh/e.h	69;"	d
ENOTEMPTY	e.h	129;"	d
ENOTEMPTY	tinyssh/tinyssh/e.h	129;"	d
ENOTNAM	e.h	360;"	d
ENOTNAM	tinyssh/tinyssh/e.h	360;"	d
ENOTRECOVERABLE	e.h	399;"	d
ENOTRECOVERABLE	tinyssh/tinyssh/e.h	399;"	d
ENOTSOCK	e.h	270;"	d
ENOTSOCK	tinyssh/tinyssh/e.h	270;"	d
ENOTTY	e.h	84;"	d
ENOTTY	tinyssh/tinyssh/e.h	84;"	d
ENOTUNIQ	e.h	234;"	d
ENOTUNIQ	tinyssh/tinyssh/e.h	234;"	d
ENUM_EXEC_STEP	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	t	class:ProcessGenerator	typeref:enum:ProcessGenerator::__anon1	access:public
ENXIO	e.h	24;"	d
ENXIO	tinyssh/tinyssh/e.h	24;"	d
EOPNOTSUPP	e.h	291;"	d
EOPNOTSUPP	tinyssh/tinyssh/e.h	291;"	d
EOVERFLOW	e.h	231;"	d
EOVERFLOW	tinyssh/tinyssh/e.h	231;"	d
EOWNERDEAD	e.h	396;"	d
EOWNERDEAD	tinyssh/tinyssh/e.h	396;"	d
EPERM	e.h	9;"	d
EPERM	tinyssh/tinyssh/e.h	9;"	d
EPFNOSUPPORT	e.h	294;"	d
EPFNOSUPPORT	tinyssh/tinyssh/e.h	294;"	d
EPIPE	e.h	105;"	d
EPIPE	tinyssh/tinyssh/e.h	105;"	d
EPROCLIM	e.h	405;"	d
EPROCLIM	tinyssh/tinyssh/e.h	405;"	d
EPROCUNAVAIL	e.h	420;"	d
EPROCUNAVAIL	tinyssh/tinyssh/e.h	420;"	d
EPROGMISMATCH	e.h	417;"	d
EPROGMISMATCH	tinyssh/tinyssh/e.h	417;"	d
EPROGUNAVAIL	e.h	414;"	d
EPROGUNAVAIL	tinyssh/tinyssh/e.h	414;"	d
EPROTO	e.h	219;"	d
EPROTO	tinyssh/tinyssh/e.h	219;"	d
EPROTONOSUPPORT	e.h	285;"	d
EPROTONOSUPPORT	tinyssh/tinyssh/e.h	285;"	d
EPROTOTYPE	e.h	279;"	d
EPROTOTYPE	tinyssh/tinyssh/e.h	279;"	d
ERANGE	e.h	111;"	d
ERANGE	tinyssh/tinyssh/e.h	111;"	d
EREMCHG	e.h	240;"	d
EREMCHG	tinyssh/tinyssh/e.h	240;"	d
EREMOTE	e.h	204;"	d
EREMOTE	tinyssh/tinyssh/e.h	204;"	d
EREMOTEIO	e.h	369;"	d
EREMOTEIO	tinyssh/tinyssh/e.h	369;"	d
ERESTART	e.h	261;"	d
ERESTART	tinyssh/tinyssh/e.h	261;"	d
ERFKILL	e.h	402;"	d
ERFKILL	tinyssh/tinyssh/e.h	402;"	d
EROFS	e.h	99;"	d
EROFS	tinyssh/tinyssh/e.h	99;"	d
ERPCMISMATCH	e.h	411;"	d
ERPCMISMATCH	tinyssh/tinyssh/e.h	411;"	d
ESHUTDOWN	e.h	330;"	d
ESHUTDOWN	tinyssh/tinyssh/e.h	330;"	d
ESOCKTNOSUPPORT	e.h	288;"	d
ESOCKTNOSUPPORT	tinyssh/tinyssh/e.h	288;"	d
ESPIPE	e.h	96;"	d
ESPIPE	tinyssh/tinyssh/e.h	96;"	d
ESRCH	e.h	15;"	d
ESRCH	tinyssh/tinyssh/e.h	15;"	d
ESRMNT	e.h	213;"	d
ESRMNT	tinyssh/tinyssh/e.h	213;"	d
ESTALE	e.h	354;"	d
ESTALE	tinyssh/tinyssh/e.h	354;"	d
ESTRPIPE	e.h	264;"	d
ESTRPIPE	tinyssh/tinyssh/e.h	264;"	d
ETIME	e.h	192;"	d
ETIME	tinyssh/tinyssh/e.h	192;"	d
ETIMEDOUT	e.h	336;"	d
ETIMEDOUT	tinyssh/tinyssh/e.h	336;"	d
ETOOMANYREFS	e.h	333;"	d
ETOOMANYREFS	tinyssh/tinyssh/e.h	333;"	d
ETXTBSY	e.h	87;"	d
ETXTBSY	tinyssh/tinyssh/e.h	87;"	d
EUCLEAN	e.h	357;"	d
EUCLEAN	tinyssh/tinyssh/e.h	357;"	d
EUNATCH	e.h	156;"	d
EUNATCH	tinyssh/tinyssh/e.h	156;"	d
EUSERS	e.h	267;"	d
EUSERS	tinyssh/tinyssh/e.h	267;"	d
EWOULDBLOCK	e.h	42;"	d
EWOULDBLOCK	tinyssh/tinyssh/e.h	42;"	d
EXDEV	e.h	63;"	d
EXDEV	tinyssh/tinyssh/e.h	63;"	d
EXFULL	e.h	171;"	d
EXFULL	tinyssh/tinyssh/e.h	171;"	d
E_H	e.h	2;"	d
E_H	tinyssh/tinyssh/e.h	2;"	d
FOR	tinyssh/crypto/sc25519.c	11;"	d	file:
GLOBAL_BSIZE	tinyssh/tinyssh/global.h	4;"	d
Generate_hostkey	packet.cpp	/^int Generate_hostkey(const string &publickey_path, RSA *rsa)$/;"	f	signature:(const string &publickey_path, RSA *rsa)
H_SessionID_Crypto	ssh_crypto.h	/^        H_SessionID_Crypto();$/;"	p	class:H_SessionID_Crypto	access:public	signature:()
H_SessionID_Crypto	ssh_crypto.h	/^class H_SessionID_Crypto$/;"	c
H_SessionID_Crypto::H_SessionID_Crypto	ssh_crypto.h	/^        H_SessionID_Crypto();$/;"	p	class:H_SessionID_Crypto	access:public	signature:()
H_SessionID_Crypto::~H_SessionID_Crypto	ssh_crypto.h	/^        ~H_SessionID_Crypto();$/;"	p	class:H_SessionID_Crypto	access:public	signature:()
I	tinyssh/crypto/ge25519.base.py	/^I = expmod(2,(q-1)\/4,q)$/;"	v
IPTOSTR_LEN	tinyssh/tinyssh/iptostr.h	4;"	d
InBasisChange	tinyssh/crypto/aessbox.h	19;"	d
Inv_GF16	tinyssh/crypto/aessbox.h	135;"	d
Inv_GF256	tinyssh/crypto/aessbox.h	152;"	d
K	tinyssh/crypto/sha256.c	/^static const crypto_uint32 K[64] = {$/;"	v	file:
K	tinyssh/crypto/sha512.c	/^static const crypto_uint64 K[80] = {$/;"	v	file:
L	tinyssh/crypto/sc25519.c	/^static const crypto_uint64 L[32] = {0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10};$/;"	v	file:
LOAD_H	tinyssh/tinyssh/load.h	2;"	d
LOGIN_NAME_MAX	tinyssh/tinyssh/limit.h	10;"	d
LoadPublicKeyfile	process.cpp	/^int ProcessGenerator::LoadPublicKeyfile()$/;"	f	class:ProcessGenerator	signature:()
M	tinyssh/crypto/fe.c	86;"	d	file:
M2	tinyssh/crypto/fe.c	129;"	d	file:
MAX_BUFFER_SIZE	process.h	/^        static const int MAX_BUFFER_SIZE = 4096;$/;"	m	class:ProcessGenerator	access:public
MAX_EVENT_NUMBER	process.h	21;"	d
MAX_PROCESS_NUM	process.h	/^        static const int MAX_PROCESS_NUM = 200;$/;"	m	class:ProcessGenerator	access:public
Maj	tinyssh/crypto/sha256.c	/^static crypto_uint32 Maj(crypto_uint32 x,crypto_uint32 y,crypto_uint32 z) { return (x & y) ^ (x & z) ^ (y & z); }$/;"	f	file:	signature:(crypto_uint32 x,crypto_uint32 y,crypto_uint32 z)
Maj	tinyssh/crypto/sha512.c	/^static crypto_uint64 Maj(crypto_uint64 x, crypto_uint64 y, crypto_uint64 z) { return (x & y) ^ (x & z) ^ (y & z); }$/;"	f	file:	signature:(crypto_uint64 x, crypto_uint64 y, crypto_uint64 z)
Mul_GF16	tinyssh/crypto/aessbox.h	88;"	d
Mul_GF16_2	tinyssh/crypto/aessbox.h	104;"	d
Mul_GF4	tinyssh/crypto/aessbox.h	51;"	d
Mul_GF4_2	tinyssh/crypto/aessbox.h	71;"	d
Mul_GF4_N	tinyssh/crypto/aessbox.h	61;"	d
NAME_MAX	tinyssh/tinyssh/limit.h	14;"	d
NEWENV_LEN	tinyssh/tinyssh/newenv.c	19;"	d	file:
NEWENV_SPACE	tinyssh/tinyssh/newenv.c	20;"	d	file:
NUMTOSTR_LEN	tinyssh/tinyssh/numtostr.h	4;"	d
OPEN_H	tinyssh/tinyssh/open.h	2;"	d
OutBasisChange	tinyssh/crypto/aessbox.h	36;"	d
PACKET_FULLLIMIT	packet.h	12;"	d
PACKET_FULLLIMIT	tinyssh/packet.h	19;"	d
PACKET_FULLLIMIT	tinyssh/tinyssh/packet.h	19;"	d
PACKET_LIMIT	packet.h	11;"	d
PACKET_LIMIT	tinyssh/packet.h	18;"	d
PACKET_LIMIT	tinyssh/tinyssh/packet.h	18;"	d
PACKET_RECVLIMIT	packet.h	14;"	d
PACKET_RECVLIMIT	tinyssh/packet.h	21;"	d
PACKET_RECVLIMIT	tinyssh/tinyssh/packet.h	21;"	d
PACKET_UNAUTHENTICATED_MESSAGES	packet.h	10;"	d
PACKET_UNAUTHENTICATED_MESSAGES	tinyssh/packet.h	17;"	d
PACKET_UNAUTHENTICATED_MESSAGES	tinyssh/tinyssh/packet.h	17;"	d
PACKET_ZEROBYTES	packet.h	15;"	d
PACKET_ZEROBYTES	tinyssh/packet.h	22;"	d
PACKET_ZEROBYTES	tinyssh/tinyssh/packet.h	22;"	d
PORTTOSTR_LEN	tinyssh/tinyssh/porttostr.h	4;"	d
Packet	packet.cpp	/^Packet::Packet() $/;"	f	class:Packet	signature:()
Packet	packet.h	/^        Packet();$/;"	p	class:Packet	access:public	signature:()
Packet	packet.h	/^class Packet$/;"	c
Packet::Packet	packet.cpp	/^Packet::Packet() $/;"	f	class:Packet	signature:()
Packet::Packet	packet.h	/^        Packet();$/;"	p	class:Packet	access:public	signature:()
Packet::Packet_version_send_to_downstream	packet.cpp	/^int Packet::Packet_version_send_to_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::clientpk	packet.h	/^        unsigned char clientpk[sshcrypto_dh_PUBLICKEYMAX];$/;"	m	class:Packet	access:private
Packet::getln	packet.h	/^        int getln(int sockfd, void *xv, long long xmax);$/;"	p	class:Packet	access:public	signature:(int sockfd, void *xv, long long xmax)
Packet::hash	packet.h	/^        unsigned char hash[sshcrypto_hash_MAX];$/;"	m	class:Packet	access:private
Packet::key	packet.h	/^        unsigned char key[sshcrypto_cipher_KEYMAX];$/;"	m	class:Packet	access:private
Packet::m_hashbuf	packet.h	/^        struct buf m_hashbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_hashbufspace	packet.h	/^        unsigned char m_hashbufspace[65536];$/;"	m	class:Packet	access:private
Packet::m_keyrecv	packet.h	/^        struct buf m_keyrecv;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_keyrecvspace	packet.h	/^        unsigned char m_keyrecvspace[65536];$/;"	m	class:Packet	access:private
Packet::m_keysend	packet.h	/^        struct buf m_keysend;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_keysendspace	packet.h	/^        unsigned char m_keysendspace[1024];$/;"	m	class:Packet	access:private
Packet::m_packet_length	packet.h	/^        crypto_uint32 m_packet_length;$/;"	m	class:Packet	access:private
Packet::m_receivepacketid	packet.h	/^        crypto_uint32 m_receivepacketid;$/;"	m	class:Packet	access:private
Packet::m_recvbuf	packet.h	/^        struct buf m_recvbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_sendbuf	packet.h	/^        struct buf m_sendbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_sendpacketid	packet.h	/^        crypto_uint32 m_sendpacketid;$/;"	m	class:Packet	access:private
Packet::m_versionreceive	packet.h	/^        struct buf m_versionreceive;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_versionreceivespace	packet.h	/^        unsigned char m_versionreceivespace[256];$/;"	m	class:Packet	access:private
Packet::m_versionsend	packet.h	/^        struct buf m_versionsend;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
Packet::m_versionsendspace	packet.h	/^        unsigned char m_versionsendspace[256];$/;"	m	class:Packet	access:private
Packet::packet_channel_open	packet.cpp	/^int Packet::packet_channel_open()$/;"	f	class:Packet	signature:()
Packet::packet_channel_open	packet.h	/^        int packet_channel_open();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_init	packet.cpp	/^void Packet::packet_init()$/;"	f	class:Packet	signature:()
Packet::packet_init	packet.h	/^        void packet_init();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_kex_receive	packet.h	/^        int packet_kex_receive();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_kex_send	packet.h	/^        int packet_kex_send();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_kexdh_receive	packet.h	/^        int packet_kexdh_receive();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_kexdh_send	packet.h	/^        int packet_kexdh_send();$/;"	p	class:Packet	access:public	signature:()
Packet::packet_key_receive_from_downstream	packet.cpp	/^int Packet::packet_key_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_key_receive_from_upstream	packet.cpp	/^int Packet::packet_key_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_key_send	packet.cpp	/^int Packet::packet_key_send()$/;"	f	class:Packet	signature:()
Packet::packet_keydh_receive_from_downstream	packet.cpp	/^int Packet::packet_keydh_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_keydh_receive_from_upstream	packet.cpp	/^int Packet::packet_keydh_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_version_receive	packet.h	/^        int packet_version_receive(int sockfd);$/;"	p	class:Packet	access:public	signature:(int sockfd)
Packet::packet_version_receive_from_downstream	packet.cpp	/^int Packet::packet_version_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_version_receive_from_upstream	packet.cpp	/^int Packet::packet_version_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet::packet_version_send	packet.cpp	/^int Packet::packet_version_send()$/;"	f	class:Packet	signature:()
Packet::packet_version_send	packet.h	/^        int packet_version_send();$/;"	p	class:Packet	access:public	signature:()
Packet::recvbufspace	packet.h	/^        unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	class:Packet	access:private
Packet::sendbufspace	packet.h	/^        unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	class:Packet	access:private
Packet::serverpk	packet.h	/^        unsigned char serverpk[sshcrypto_dh_PUBLICKEYMAX];$/;"	m	class:Packet	access:private
Packet::serversk	packet.h	/^        unsigned char serversk[sshcrypto_dh_SECRETKEYMAX];$/;"	m	class:Packet	access:private
Packet::sharedsecret	packet.h	/^        unsigned char sharedsecret[sshcrypto_dh_MAX];$/;"	m	class:Packet	access:private
Packet::sm	packet.h	/^        unsigned char sm[sshcrypto_sign_MAX];$/;"	m	class:Packet	access:private
Packet::writeall	packet.cpp	/^int Packet::writeall(int fd,const void *xv,long long xlen)$/;"	f	class:Packet	signature:(int fd,const void *xv,long long xlen)
Packet::~Packet	packet.cpp	/^Packet::~Packet()$/;"	f	class:Packet	signature:()
Packet::~Packet	packet.h	/^        ~Packet();$/;"	p	class:Packet	access:public	signature:()
Packet_key_send_to_downstream	packet.cpp	/^int Packet_key_send_to_downstream(int fd)$/;"	f	signature:(int fd)
Packet_key_send_to_upstream	packet.cpp	/^int Packet_key_send_to_upstream(int fd)$/;"	f	signature:(int fd)
Packet_version_send_to_downstream	packet.cpp	/^int Packet::Packet_version_send_to_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
Packet_version_send_to_upstream	packet.cpp	/^int Packet_version_send_to_upstream(int fd)$/;"	f	signature:(int fd)
Process	process.h	/^        Process() : m_pid(-1) {}$/;"	f	class:Process	access:public	signature:()
Process	process.h	/^class Process$/;"	c
Process::Process	process.h	/^        Process() : m_pid(-1) {}$/;"	f	class:Process	access:public	signature:()
Process::m_pid	process.h	/^        pid_t m_pid;$/;"	m	class:Process	access:public
Process::m_pipefd	process.h	/^        int m_pipefd[2];$/;"	m	class:Process	access:public
Process::m_pos	process.h	/^        int m_pos;$/;"	m	class:Process	access:public
Process::m_sessionID	process.h	/^        int m_sessionID;$/;"	m	class:Process	access:public
Process::m_used	process.h	/^        int m_used;$/;"	m	class:Process	access:public
Process::~Process	process.h	/^        ~Process();$/;"	p	class:Process	access:public	signature:()
ProcessGenerator	process.cpp	/^ProcessGenerator::ProcessGenerator(int fd) $/;"	f	class:ProcessGenerator	signature:(int fd)
ProcessGenerator	process.h	/^        ProcessGenerator(int fd);$/;"	p	class:ProcessGenerator	access:public	signature:(int fd)
ProcessGenerator	process.h	/^class ProcessGenerator$/;"	c
ProcessGenerator::ENUM_EXEC_STEP	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	t	class:ProcessGenerator	typeref:enum:ProcessGenerator::__anon1	access:public
ProcessGenerator::LoadPublicKeyfile	process.cpp	/^int ProcessGenerator::LoadPublicKeyfile()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::MAX_BUFFER_SIZE	process.h	/^        static const int MAX_BUFFER_SIZE = 4096;$/;"	m	class:ProcessGenerator	access:public
ProcessGenerator::MAX_PROCESS_NUM	process.h	/^        static const int MAX_PROCESS_NUM = 200;$/;"	m	class:ProcessGenerator	access:public
ProcessGenerator::ProcessGenerator	process.cpp	/^ProcessGenerator::ProcessGenerator(int fd) $/;"	f	class:ProcessGenerator	signature:(int fd)
ProcessGenerator::ProcessGenerator	process.h	/^        ProcessGenerator(int fd);$/;"	p	class:ProcessGenerator	access:public	signature:(int fd)
ProcessGenerator::Readall	process.cpp	/^int ProcessGenerator::Readall()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::STEP_CHANNEL	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::STEP_KEX	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::STEP_KEXDH	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::STEP_NONE	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::STEP_READY	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::STEP_VERSION	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ProcessGenerator::m_buffer_downstream	process.h	/^        char m_buffer_downstream[MAX_BUFFER_SIZE];$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_buffer_upstream	process.h	/^        char m_buffer_upstream[MAX_BUFFER_SIZE];$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_channelready	process.h	/^        ENUM_EXEC_STEP m_channelready;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_downstream_flag	process.h	/^        bool m_downstream_flag;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_epollfd	process.h	/^        int m_epollfd;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_idx	process.h	/^        int m_idx;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_kexdhready	process.h	/^        ENUM_EXEC_STEP m_kexdhready;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_kexready	process.h	/^        ENUM_EXEC_STEP m_kexready;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_process	process.h	/^        Process *m_process;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_read_downstream_idx	process.h	/^        int m_read_downstream_idx;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_read_downstream_len	process.h	/^        int m_read_downstream_len;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_read_upstream_idx	process.h	/^        int m_read_upstream_idx;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_read_upstream_len	process.h	/^        int m_read_upstream_len;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_sessionready	process.h	/^        ENUM_EXEC_STEP m_sessionready;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_sockfd_downstream	process.h	/^        int m_sockfd_downstream;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_sockfd_upstream	process.h	/^        int m_sockfd_upstream;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_stop	process.h	/^        bool m_stop;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_upstream_flag	process.h	/^        bool m_upstream_flag;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::m_versionready	process.h	/^        ENUM_EXEC_STEP m_versionready;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::packet	process.h	/^        Packet packet;$/;"	m	class:ProcessGenerator	access:private
ProcessGenerator::process_init	process.cpp	/^void ProcessGenerator::process_init()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::process_init	process.h	/^        void process_init();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::proxy_connect_peer	process.cpp	/^void ProcessGenerator::proxy_connect_peer()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::proxy_connect_peer	process.h	/^        void proxy_connect_peer();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::run_process	process.cpp	/^void ProcessGenerator::run_process()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::run_process	process.h	/^        void run_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::run_session_process	process.cpp	/^void ProcessGenerator::run_session_process()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::run_session_process	process.h	/^        void run_session_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::setup_sig_pipe	process.cpp	/^void ProcessGenerator::setup_sig_pipe()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::setup_sig_pipe	process.h	/^        void setup_sig_pipe();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::sshcrypto_ciphers	process.h	/^        struct sshcrypto_cipher sshcrypto_ciphers[2];$/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_cipher	access:private
ProcessGenerator::sshcrypto_kexs	process.h	/^        struct sshcrypto_kex sshcrypto_kexs[2];$/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_kex	access:private
ProcessGenerator::sshcrypto_keys	process.h	/^        struct sshcrypto_key sshcrypto_keys[2]; $/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_key	access:private
ProcessGenerator::start_spawn_process	process.cpp	/^void ProcessGenerator::start_spawn_process()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::start_spawn_process	process.h	/^        void start_spawn_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
ProcessGenerator::~ProcessGenerator	process.cpp	/^ProcessGenerator::~ProcessGenerator()$/;"	f	class:ProcessGenerator	signature:()
ProcessGenerator::~ProcessGenerator	process.h	/^        ~ProcessGenerator();$/;"	p	class:ProcessGenerator	access:public	signature:()
QUARTERROUND	tinyssh/crypto/crypto_stream_chacha20.c	33;"	d	file:
R	tinyssh/crypto/sha256.c	/^static crypto_uint32 R(crypto_uint32 x, int c) { return (x >> c) | ((x & 0xffffffff) << (32 - c)); }$/;"	f	file:	signature:(crypto_uint32 x, int c)
R	tinyssh/crypto/sha512.c	/^static crypto_uint64 R(crypto_uint64 x,int c) { return (x >> c) | ((x & 0xffffffffffffffffULL) << (64 - c)); }$/;"	f	file:	signature:(crypto_uint64 x,int c)
ROTATE	tinyssh/crypto/crypto_stream_chacha20.c	31;"	d	file:
RSA_fromBase64	packet.cpp	/^EVP_PKEY* RSA_fromBase64(const char* modulus_b64, const char* exp_b64) $/;"	f	signature:(const char* modulus_b64, const char* exp_b64)
Readall	process.cpp	/^int ProcessGenerator::Readall()$/;"	f	class:ProcessGenerator	signature:()
SAVESYNC_H	tinyssh/tinyssh/savesync.h	2;"	d
SQ	tinyssh/crypto/fe.c	132;"	d	file:
SSH_DISCONNECT_AUTH_CANCELLED_BY_USER	tinyssh/tinyssh/ssh.h	66;"	d
SSH_DISCONNECT_BY_APPLICATION	tinyssh/tinyssh/ssh.h	64;"	d
SSH_DISCONNECT_COMPRESSION_ERROR	tinyssh/tinyssh/ssh.h	59;"	d
SSH_DISCONNECT_CONNECTION_LOST	tinyssh/tinyssh/ssh.h	63;"	d
SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE	tinyssh/tinyssh/ssh.h	62;"	d
SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT	tinyssh/tinyssh/ssh.h	54;"	d
SSH_DISCONNECT_ILLEGAL_USER_NAME	tinyssh/tinyssh/ssh.h	68;"	d
SSH_DISCONNECT_KEY_EXCHANGE_FAILED	tinyssh/tinyssh/ssh.h	56;"	d
SSH_DISCONNECT_MAC_ERROR	tinyssh/tinyssh/ssh.h	58;"	d
SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE	tinyssh/tinyssh/ssh.h	67;"	d
SSH_DISCONNECT_PROTOCOL_ERROR	tinyssh/tinyssh/ssh.h	55;"	d
SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED	tinyssh/tinyssh/ssh.h	61;"	d
SSH_DISCONNECT_RESERVED	tinyssh/tinyssh/ssh.h	57;"	d
SSH_DISCONNECT_SERVICE_NOT_AVAILABLE	tinyssh/tinyssh/ssh.h	60;"	d
SSH_DISCONNECT_TOO_MANY_CONNECTIONS	tinyssh/tinyssh/ssh.h	65;"	d
SSH_MSG_CHANNEL_CLOSE	tinyssh/tinyssh/ssh.h	42;"	d
SSH_MSG_CHANNEL_DATA	tinyssh/tinyssh/ssh.h	39;"	d
SSH_MSG_CHANNEL_EOF	tinyssh/tinyssh/ssh.h	41;"	d
SSH_MSG_CHANNEL_EXTENDED_DATA	tinyssh/tinyssh/ssh.h	40;"	d
SSH_MSG_CHANNEL_FAILURE	tinyssh/tinyssh/ssh.h	45;"	d
SSH_MSG_CHANNEL_OPEN	tinyssh/tinyssh/ssh.h	35;"	d
SSH_MSG_CHANNEL_OPEN_CONFIRMATION	tinyssh/tinyssh/ssh.h	36;"	d
SSH_MSG_CHANNEL_OPEN_FAILURE	tinyssh/tinyssh/ssh.h	37;"	d
SSH_MSG_CHANNEL_REQUEST	tinyssh/tinyssh/ssh.h	43;"	d
SSH_MSG_CHANNEL_SUCCESS	tinyssh/tinyssh/ssh.h	44;"	d
SSH_MSG_CHANNEL_WINDOW_ADJUST	tinyssh/tinyssh/ssh.h	38;"	d
SSH_MSG_DEBUG	tinyssh/tinyssh/ssh.h	10;"	d
SSH_MSG_DISCONNECT	tinyssh/tinyssh/ssh.h	7;"	d
SSH_MSG_GLOBAL_REQUEST	tinyssh/tinyssh/ssh.h	32;"	d
SSH_MSG_IGNORE	tinyssh/tinyssh/ssh.h	8;"	d
SSH_MSG_KEXDH_INIT	tinyssh/tinyssh/ssh.h	15;"	d
SSH_MSG_KEXDH_REPLY	tinyssh/tinyssh/ssh.h	16;"	d
SSH_MSG_KEXINIT	tinyssh/tinyssh/ssh.h	13;"	d
SSH_MSG_KEXRSA_DONE	tinyssh/tinyssh/ssh.h	23;"	d
SSH_MSG_KEXRSA_PUBKEY	tinyssh/tinyssh/ssh.h	21;"	d
SSH_MSG_KEXRSA_SECRET	tinyssh/tinyssh/ssh.h	22;"	d
SSH_MSG_KEX_DH_GEX_GROUP	tinyssh/tinyssh/ssh.h	18;"	d
SSH_MSG_KEX_DH_GEX_INIT	tinyssh/tinyssh/ssh.h	19;"	d
SSH_MSG_KEX_DH_GEX_REPLY	tinyssh/tinyssh/ssh.h	20;"	d
SSH_MSG_KEX_DH_GEX_REQUEST	tinyssh/tinyssh/ssh.h	17;"	d
SSH_MSG_NEWKEYS	tinyssh/tinyssh/ssh.h	14;"	d
SSH_MSG_REQUEST_FAILURE	tinyssh/tinyssh/ssh.h	34;"	d
SSH_MSG_REQUEST_SUCCESS	tinyssh/tinyssh/ssh.h	33;"	d
SSH_MSG_SERVICE_ACCEPT	tinyssh/tinyssh/ssh.h	12;"	d
SSH_MSG_SERVICE_REQUEST	tinyssh/tinyssh/ssh.h	11;"	d
SSH_MSG_UNIMPLEMENTED	tinyssh/tinyssh/ssh.h	9;"	d
SSH_MSG_USERAUTH_BANNER	tinyssh/tinyssh/ssh.h	27;"	d
SSH_MSG_USERAUTH_FAILURE	tinyssh/tinyssh/ssh.h	25;"	d
SSH_MSG_USERAUTH_GSSAPI_ERROR	tinyssh/tinyssh/ssh.h	49;"	d
SSH_MSG_USERAUTH_GSSAPI_ERRTOK	tinyssh/tinyssh/ssh.h	50;"	d
SSH_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE	tinyssh/tinyssh/ssh.h	48;"	d
SSH_MSG_USERAUTH_GSSAPI_MIC	tinyssh/tinyssh/ssh.h	51;"	d
SSH_MSG_USERAUTH_GSSAPI_RESPONSE	tinyssh/tinyssh/ssh.h	46;"	d
SSH_MSG_USERAUTH_GSSAPI_TOKEN	tinyssh/tinyssh/ssh.h	47;"	d
SSH_MSG_USERAUTH_INFO_REQUEST	tinyssh/tinyssh/ssh.h	30;"	d
SSH_MSG_USERAUTH_INFO_RESPONSE	tinyssh/tinyssh/ssh.h	31;"	d
SSH_MSG_USERAUTH_PASSWD_CHANGEREQ	tinyssh/tinyssh/ssh.h	29;"	d
SSH_MSG_USERAUTH_PK_OK	tinyssh/tinyssh/ssh.h	28;"	d
SSH_MSG_USERAUTH_REQUEST	tinyssh/tinyssh/ssh.h	24;"	d
SSH_MSG_USERAUTH_SUCCESS	tinyssh/tinyssh/ssh.h	26;"	d
SSH_OPEN_ADMINISTRATIVELY_PROHIBITED	tinyssh/tinyssh/ssh.h	70;"	d
SSH_OPEN_CONNECT_FAILED	tinyssh/tinyssh/ssh.h	71;"	d
SSH_OPEN_RESOURCE_SHORTAGE	tinyssh/tinyssh/ssh.h	73;"	d
SSH_OPEN_UNKNOWN_CHANNEL_TYPE	tinyssh/tinyssh/ssh.h	72;"	d
STEP_CHANNEL	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
STEP_KEX	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
STEP_KEXDH	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
STEP_NONE	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
STEP_READY	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
STEP_VERSION	process.h	/^        typedef enum { STEP_NONE = 0, STEP_VERSION, STEP_KEX, STEP_KEXDH, STEP_CHANNEL, STEP_READY} ENUM_EXEC_STEP;$/;"	e	enum:ProcessGenerator::__anon1
ShareSecret_Crypto	ssh_crypto.h	/^        ShareSecret_Crypto();$/;"	p	class:ShareSecret_Crypto	access:public	signature:()
ShareSecret_Crypto	ssh_crypto.h	/^class ShareSecret_Crypto$/;"	c
ShareSecret_Crypto::ShareSecret_Crypto	ssh_crypto.h	/^        ShareSecret_Crypto();$/;"	p	class:ShareSecret_Crypto	access:public	signature:()
ShareSecret_Crypto::~ShareSecret_Crypto	ssh_crypto.h	/^        ~ShareSecret_Crypto();$/;"	p	class:ShareSecret_Crypto	access:public	signature:()
Sigma0	tinyssh/crypto/sha256.c	/^static crypto_uint32 Sigma0(crypto_uint32 x) { return R(x, 2) ^ R(x,13) ^ R(x,22); }$/;"	f	file:	signature:(crypto_uint32 x)
Sigma0	tinyssh/crypto/sha512.c	/^static crypto_uint64 Sigma0(crypto_uint64 x) { return R(x, 28) ^ R(x, 34) ^ R(x, 39); }$/;"	f	file:	signature:(crypto_uint64 x)
Sigma1	tinyssh/crypto/sha256.c	/^static crypto_uint32 Sigma1(crypto_uint32 x) { return R(x, 6) ^ R(x,11) ^ R(x,25); }$/;"	f	file:	signature:(crypto_uint32 x)
Sigma1	tinyssh/crypto/sha512.c	/^static crypto_uint64 Sigma1(crypto_uint64 x) { return R(x, 14) ^ R(x, 18) ^ R(x, 41); }$/;"	f	file:	signature:(crypto_uint64 x)
TTY_NAME_MAX	tinyssh/tinyssh/limit.h	18;"	d
USAGE	tinyssh/tinyssh/tinysshd-makekey.c	19;"	d	file:
USAGE	tinyssh/tinyssh/tinysshd-printkey.c	22;"	d	file:
USAGE	tinyssh/tinyssh/tinysshd.c	29;"	d	file:
WRITEALL_H	tinyssh/tinyssh/writeall.h	2;"	d
X	e.cpp	3;"	d	file:
X	tinyssh/tinyssh/e.c	4;"	d	file:
X	tinyssh/tinyssh/ssh.c	4;"	d	file:
ZB	tinyssh/tinyssh/sshcrypto_cipher_aesctr.c	78;"	d	file:
ZB	tinyssh/tinyssh/sshcrypto_cipher_chachapoly.c	20;"	d	file:
_AESSBOX_H_____	tinyssh/crypto/aessbox.h	11;"	d
_AES_H_____	tinyssh/crypto/aes.h	2;"	d
_BUF_H____	tinyssh/buf.h	8;"	d
_BUF_H____	tinyssh/tinyssh/buf.h	8;"	d
_BUG_H____	tinyssh/tinyssh/bug.h	2;"	d
_CHANNEL_H____	tinyssh/tinyssh/channel.h	2;"	d
_CLEANUP_H____	tinyssh/crypto/cleanup.h	2;"	d
_COE_H____	tinyssh/tinyssh/coe.h	2;"	d
_CONNECTIONINFO_H____	tinyssh/tinyssh/connectioninfo.h	2;"	d
_DIE_H____	tinyssh/tinyssh/die.h	2;"	d
_DROPUIDGID_H____	tinyssh/tinyssh/dropuidgid.h	2;"	d
_ENV_H____	tinyssh/tinyssh/env.h	2;"	d
_FE25519_H____	tinyssh/crypto/fe25519.h	2;"	d
_FEP256_H____	tinyssh/crypto/fep256.h	2;"	d
_FE_H____	tinyssh/crypto/fe.h	2;"	d
_GE25519_H____	tinyssh/crypto/ge25519.h	2;"	d
_GEP256_H____	tinyssh/crypto/gep256.h	2;"	d
_GETLN_H____	tinyssh/tinyssh/getln.h	2;"	d
_GLOBAL_H____	tinyssh/tinyssh/global.h	2;"	d
_IPTOSTR_H____	tinyssh/tinyssh/iptostr.h	2;"	d
_LIMIT_H____	tinyssh/tinyssh/limit.h	2;"	d
_LOGINSHELL_H____	tinyssh/tinyssh/loginshell.h	2;"	d
_LOGSYS_H____	tinyssh/tinyssh/logsys.h	4;"	d
_LOG_H____	tinyssh/tinyssh/log.h	2;"	d
_NEWENV_H____	tinyssh/tinyssh/newenv.h	2;"	d
_NUMTOSTR_H____	tinyssh/tinyssh/numtostr.h	2;"	d
_PACKETPARSER_H____	tinyssh/tinyssh/packetparser.h	2;"	d
_PACKET_H__	packet.h	2;"	d
_PACKET_H____	tinyssh/packet.h	8;"	d
_PACKET_H____	tinyssh/tinyssh/packet.h	8;"	d
_PORTTOSTR_H____	tinyssh/tinyssh/porttostr.h	2;"	d
_PURGE_H____	tinyssh/tinyssh/purge.h	2;"	d
_RANDOMBYTES_H____	tinyssh/crypto/randombytes.h	2;"	d
_RANDOMMOD_H____	tinyssh/tinyssh/randommod.h	2;"	d
_READALL_H____	tinyssh/tinyssh/readall.h	2;"	d
_SC25519_H____	tinyssh/crypto/sc25519.h	2;"	d
_SCP256_H____	tinyssh/crypto/scp256.h	2;"	d
_SHA256_H_____	tinyssh/crypto/sha256.h	2;"	d
_SHA512_H____	tinyssh/crypto/sha512.h	2;"	d
_SPAWN_PROCESS_	process.h	2;"	d
_SSHCRYPTO_H____	tinyssh/tinyssh/sshcrypto.h	2;"	d
_SSH_CRYPTO_	ssh_crypto.h	2;"	d
_SSH_H____	tinyssh/tinyssh/ssh.h	2;"	d
_STRINGPARSER_H____	tinyssh/tinyssh/stringparser.h	2;"	d
_STR_H____	tinyssh/tinyssh/str.h	2;"	d
_SUBPROCESS_H____	tinyssh/tinyssh/subprocess.h	2;"	d
_TRYMLOCK_H____	tinyssh/tinyssh/trymlock.h	2;"	d
_UINT32_PACK_BIG____	tinyssh/crypto/uint32_pack_big.h	2;"	d
_UINT32_PACK_H____	tinyssh/crypto/uint32_pack.h	2;"	d
_UINT32_UNPACK_BIG____	tinyssh/crypto/uint32_unpack_big.h	2;"	d
_UINT32_UNPACK_H____	tinyssh/crypto/uint32_unpack.h	2;"	d
_UINT64_PACK_BIG____	tinyssh/crypto/uint64_pack_big.h	2;"	d
_UINT64_UNPACK_BIG____	tinyssh/crypto/uint64_unpack_big.h	2;"	d
_VERIFY_H____	tinyssh/crypto/verify.h	2;"	d
_add	tinyssh/crypto/scp256.c	/^static void _add(fe out, fe a, const fe b) {$/;"	f	file:	signature:(fe out, fe a, const fe b)
_from64bytes	tinyssh/crypto/scp256.c	/^static void _from64bytes(fe out, const unsigned char *in) {$/;"	f	file:	signature:(fe out, const unsigned char *in)
_frombytes	tinyssh/crypto/scp256.c	/^static void _frombytes(fe out, const unsigned char *in) {$/;"	f	file:	signature:(fe out, const unsigned char *in)
_inv	tinyssh/crypto/scp256.c	/^static void _inv(fe out, const fe in) {$/;"	f	file:	signature:(fe out, const fe in)
_login_tty	tinyssh/tinyssh/channel_forkpty.c	/^static int _login_tty(int fd) {$/;"	f	file:	signature:(int fd)
_mul	tinyssh/crypto/scp256.c	/^static void _mul(fe o, const fe a, const fe b) {$/;"	f	file:	signature:(fe o, const fe a, const fe b)
_openpty	tinyssh/tinyssh/channel_forkpty.c	/^static int _openpty(int *amaster, int *aslave) {$/;"	f	file:	signature:(int *amaster, int *aslave)
_parsempintblob	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^static int _parsempintblob(unsigned char *buf, const unsigned char *x, long long xlen) {$/;"	f	file:	signature:(unsigned char *buf, const unsigned char *x, long long xlen)
_putmpint	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^static void _putmpint(struct buf *b, const unsigned char *x, long long len) {$/;"	f	file:	signature:(struct buf *b, const unsigned char *x, long long len)
_reducebig	tinyssh/crypto/scp256.c	/^static void _reducebig(fe r, fel x) {$/;"	f	file:	signature:(fe r, fel x)
_sq	tinyssh/crypto/scp256.c	/^static void _sq(fe o, const fe a) {$/;"	f	file:	signature:(fe o, const fe a)
_tobytes	tinyssh/crypto/scp256.c	/^static void _tobytes(unsigned char *out, fe in) {$/;"	f	file:	signature:(unsigned char *out, fe in)
a	tinyssh/tinyssh/channel.h	/^    int a;$/;"	m	struct:channel	access:public
add	tinyssh/crypto/gep256.base.py	/^def add(P, Q):$/;"	f	access:public
addfd	process.cpp	/^void addfd( int epollfd, int fd, bool one_shot )$/;"	f	signature:( int epollfd, int fd, bool one_shot )
addfd	process.h	/^void addfd( int epollfd, int fd, bool one_shot );$/;"	p	signature:( int epollfd, int fd, bool one_shot )
addsig	process.cpp	/^void addsig( int sig, void( handler )(int), bool restart )$/;"	f	signature:( int sig, void( handler )(int), bool restart )
addsig	process.h	/^void addsig( int sig, void( handler )(int), bool restart = true );$/;"	p	signature:( int sig, void( handler )(int), bool restart = true )
aes_core	tinyssh/crypto/aes.c	/^void aes_core(unsigned char *out, const unsigned char *in, const unsigned char *k, long long rounds) {$/;"	f	signature:(unsigned char *out, const unsigned char *in, const unsigned char *k, long long rounds)
aes_core	tinyssh/crypto/aes.h	/^extern void aes_core(unsigned char *, const unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, const unsigned char *, long long)
aes_expandkey128	tinyssh/crypto/aes.c	/^int aes_expandkey128(unsigned char *o, const unsigned char *k) {$/;"	f	signature:(unsigned char *o, const unsigned char *k)
aes_expandkey128	tinyssh/crypto/aes.h	/^extern int aes_expandkey128(unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *)
aes_expandkey256	tinyssh/crypto/aes.c	/^int aes_expandkey256(unsigned char *o, const unsigned char *k) {$/;"	f	signature:(unsigned char *o, const unsigned char *k)
aes_expandkey256	tinyssh/crypto/aes.h	/^extern int aes_expandkey256(unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *)
aes_stream_xor	tinyssh/crypto/aes.h	/^extern int aes_stream_xor(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *, long long)
aesctr256_xor	tinyssh/tinyssh/sshcrypto.h	/^extern int aesctr256_xor(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *)
aesctr256_xor	tinyssh/tinyssh/sshcrypto_cipher_aesctr256.c	/^int aesctr256_xor(unsigned char *c, const unsigned char *m, unsigned long long l, const unsigned char *nn, const unsigned char *k) {$/;"	f	signature:(unsigned char *c, const unsigned char *m, unsigned long long l, const unsigned char *nn, const unsigned char *k)
aesctr_packet_get	tinyssh/tinyssh/sshcrypto.h	/^extern int aesctr_packet_get(struct buf *);$/;"	p	signature:(struct buf *)
aesctr_packet_get	tinyssh/tinyssh/sshcrypto_cipher_aesctr.c	/^int aesctr_packet_get(struct buf *b) {$/;"	f	signature:(struct buf *b)
aesctr_packet_put	tinyssh/tinyssh/sshcrypto.h	/^extern void aesctr_packet_put(struct buf *);$/;"	p	signature:(struct buf *)
aesctr_packet_put	tinyssh/tinyssh/sshcrypto_cipher_aesctr.c	/^void aesctr_packet_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
aessbox	tinyssh/crypto/aessbox.h	13;"	d
alloc	packet.h	/^    long long alloc;$/;"	m	struct:buf	access:public
alloc	tinyssh/buf.h	/^    long long alloc;$/;"	m	struct:buf	access:public
alloc	tinyssh/tinyssh/buf.h	/^    long long alloc;$/;"	m	struct:buf	access:public
and2	tinyssh/crypto/aes.c	/^static void and2(crypto_uint32 *r,  const crypto_uint32 *x) { *r &= *x; }$/;"	f	file:	signature:(crypto_uint32 *r, const crypto_uint32 *x)
auth	process.h	/^    int (*auth)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
auth	tinyssh/tinyssh/sshcrypto.h	/^    int (*auth)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
auth_bytes	process.h	/^    long long auth_bytes;$/;"	m	struct:sshcrypto_cipher	access:public
auth_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long auth_bytes;$/;"	m	struct:sshcrypto_cipher	access:public
b	tinyssh/crypto/ge25519.base.py	/^b = 256$/;"	v
b	tinyssh/crypto/gep256.base.py	/^b = []$/;"	v
b	tinyssh/tinyssh/channel.h	/^    int b;$/;"	m	struct:channel	access:public
b1	tinyssh/tinyssh/tinysshd-printkey.c	/^static struct buf b1 = { global_bspace1, 0, sizeof global_bspace1 }; \/* reusing global buffer *\/$/;"	v	typeref:struct:buf	file:
b1	tinyssh/tinyssh/tinysshd.c	/^static struct buf b1 = {global_bspace1, 0, sizeof global_bspace1};$/;"	v	typeref:struct:buf	file:
b2	tinyssh/tinyssh/tinysshd-printkey.c	/^static struct buf b2 = { global_bspace2, 0, sizeof global_bspace2 }; \/* reusing global buffer *\/$/;"	v	typeref:struct:buf	file:
b2	tinyssh/tinyssh/tinysshd.c	/^static struct buf b2 = {global_bspace2, 0, sizeof global_bspace2};$/;"	v	typeref:struct:buf	file:
b64chars	tinyssh/buf.c	/^static const unsigned char b64chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v	file:
b64chars	tinyssh/tinyssh/buf.c	/^static const unsigned char b64chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v	file:
base	tinyssh/crypto/ge25519.c	/^static ge25519_precomp base[32][8] = {$/;"	v	file:
base	tinyssh/crypto/gep256.c	/^static gep256_precomp base[33][8] = {$/;"	v	file:
base64_decode	packet.cpp	/^unsigned char *base64_decode(const char* base64data, int* len) $/;"	f	signature:(const char* base64data, int* len)
basepoint	tinyssh/crypto/crypto_scalarmult_curve25519.c	/^static const unsigned char basepoint[32] = {9};$/;"	v	file:
basepx	tinyssh/crypto/gep256.base.py	/^basepx = 0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296$/;"	v
basepy	tinyssh/crypto/gep256.base.py	/^basepy = 0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5$/;"	v
bignum_base64_decode	packet.cpp	/^BIGNUM* bignum_base64_decode(const char* base64bignum) $/;"	f	signature:(const char* base64bignum)
blocking_disable	tinyssh/tinyssh/blocking.c	/^void blocking_disable(int fd)$/;"	f	signature:(int fd)
blocking_disable	tinyssh/tinyssh/blocking.h	/^extern void blocking_disable(int);$/;"	p	signature:(int)
blocking_enable	tinyssh/tinyssh/blocking.c	/^void blocking_enable(int fd)$/;"	f	signature:(int fd)
blocking_enable	tinyssh/tinyssh/blocking.h	/^extern void blocking_enable(int);$/;"	p	signature:(int)
blocks	tinyssh/crypto/sha256.c	/^static void blocks(crypto_uint32 *z, const unsigned char *m, unsigned long long n) {$/;"	f	file:	signature:(crypto_uint32 *z, const unsigned char *m, unsigned long long n)
blocks	tinyssh/crypto/sha512.c	/^static void blocks(crypto_uint64 *z, const unsigned char *m, unsigned long long n) {$/;"	f	file:	signature:(crypto_uint64 *z, const unsigned char *m, unsigned long long n)
buf	packet.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf	packet.h	/^struct buf {$/;"	s
buf	tinyssh/buf.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf	tinyssh/buf.h	/^struct buf {$/;"	s
buf	tinyssh/tinyssh/buf.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf	tinyssh/tinyssh/buf.h	/^struct buf {$/;"	s
buf	tinyssh/tinyssh/log.c	/^static char buf[257];$/;"	v	file:
buf	tinyssh/tinyssh/subprocess_auth.c	119;"	d	file:
buf0	tinyssh/tinyssh/channel.h	/^    unsigned char buf0[CHANNEL_BUFSIZE];$/;"	m	struct:channel	access:public
buf::alloc	packet.h	/^    long long alloc;$/;"	m	struct:buf	access:public
buf::alloc	tinyssh/buf.h	/^    long long alloc;$/;"	m	struct:buf	access:public
buf::alloc	tinyssh/tinyssh/buf.h	/^    long long alloc;$/;"	m	struct:buf	access:public
buf::buf	packet.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf::buf	tinyssh/buf.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf::buf	tinyssh/tinyssh/buf.h	/^    unsigned char *buf;$/;"	m	struct:buf	access:public
buf::len	packet.h	/^    long long len;$/;"	m	struct:buf	access:public
buf::len	tinyssh/buf.h	/^    long long len;$/;"	m	struct:buf	access:public
buf::len	tinyssh/tinyssh/buf.h	/^    long long len;$/;"	m	struct:buf	access:public
buf_init	packet.h	23;"	d
buf_init	tinyssh/buf.h	35;"	d
buf_init	tinyssh/tinyssh/buf.h	35;"	d
buf_init_	packet.h	/^void buf_init_(const char *fn, unsigned long long line, struct buf *b, unsigned char *buf, long long alloc) {$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, unsigned char *buf, long long alloc)
buf_init_	tinyssh/buf.c	/^void buf_init_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, unsigned char *buf, long long alloc)
buf_init_	tinyssh/buf.h	/^extern void buf_init_(const char *, unsigned long long, struct buf *, unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, unsigned char *, long long)
buf_init_	tinyssh/tinyssh/buf.c	/^void buf_init_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, unsigned char *buf, long long alloc)
buf_init_	tinyssh/tinyssh/buf.h	/^extern void buf_init_(const char *, unsigned long long, struct buf *, unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, unsigned char *, long long)
buf_purge	packet.h	24;"	d
buf_purge	tinyssh/buf.h	36;"	d
buf_purge	tinyssh/tinyssh/buf.h	36;"	d
buf_purge_	tinyssh/buf.c	/^void buf_purge_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b)
buf_purge_	tinyssh/buf.h	/^extern void buf_purge_(const char *, unsigned long long, struct buf *);$/;"	p	signature:(const char *, unsigned long long, struct buf *)
buf_purge_	tinyssh/tinyssh/buf.c	/^void buf_purge_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b)
buf_purge_	tinyssh/tinyssh/buf.h	/^extern void buf_purge_(const char *, unsigned long long, struct buf *);$/;"	p	signature:(const char *, unsigned long long, struct buf *)
buf_put	tinyssh/buf.h	39;"	d
buf_put	tinyssh/tinyssh/buf.h	39;"	d
buf_put_	tinyssh/buf.c	/^int buf_put_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_put_	tinyssh/buf.h	/^extern int buf_put_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_put_	tinyssh/tinyssh/buf.c	/^int buf_put_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_put_	tinyssh/tinyssh/buf.h	/^extern int buf_put_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putbase64	tinyssh/buf.h	49;"	d
buf_putbase64	tinyssh/tinyssh/buf.h	49;"	d
buf_putbase64_	tinyssh/buf.c	/^int buf_putbase64_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putbase64_	tinyssh/buf.h	/^extern int buf_putbase64_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putbase64_	tinyssh/tinyssh/buf.c	/^int buf_putbase64_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putbase64_	tinyssh/tinyssh/buf.h	/^extern int buf_putbase64_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putdhpk	process.h	/^    void (*buf_putdhpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
buf_putdhpk	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putdhpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
buf_putnum32	tinyssh/buf.h	44;"	d
buf_putnum32	tinyssh/tinyssh/buf.h	44;"	d
buf_putnum32_	tinyssh/buf.c	/^int buf_putnum32_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, crypto_uint32 x)
buf_putnum32_	tinyssh/buf.h	/^extern int buf_putnum32_(const char *, unsigned long long, struct buf *, crypto_uint32);$/;"	p	signature:(const char *, unsigned long long, struct buf *, crypto_uint32)
buf_putnum32_	tinyssh/tinyssh/buf.c	/^int buf_putnum32_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, crypto_uint32 x)
buf_putnum32_	tinyssh/tinyssh/buf.h	/^extern int buf_putnum32_(const char *, unsigned long long, struct buf *, crypto_uint32);$/;"	p	signature:(const char *, unsigned long long, struct buf *, crypto_uint32)
buf_putnum8	tinyssh/buf.h	45;"	d
buf_putnum8	tinyssh/tinyssh/buf.h	45;"	d
buf_putnum8_	tinyssh/buf.c	/^int buf_putnum8_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, crypto_uint8 u)
buf_putnum8_	tinyssh/buf.h	/^extern int buf_putnum8_(const char *, unsigned long long, struct buf *, crypto_uint8);$/;"	p	signature:(const char *, unsigned long long, struct buf *, crypto_uint8)
buf_putnum8_	tinyssh/tinyssh/buf.c	/^int buf_putnum8_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, crypto_uint8 u)
buf_putnum8_	tinyssh/tinyssh/buf.h	/^extern int buf_putnum8_(const char *, unsigned long long, struct buf *, crypto_uint8);$/;"	p	signature:(const char *, unsigned long long, struct buf *, crypto_uint8)
buf_putpadding	tinyssh/buf.h	43;"	d
buf_putpadding	tinyssh/tinyssh/buf.h	43;"	d
buf_putpadding_	tinyssh/buf.c	/^int buf_putpadding_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putpadding_	tinyssh/buf.h	/^extern int buf_putpadding_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_putpadding_	tinyssh/tinyssh/buf.c	/^int buf_putpadding_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putpadding_	tinyssh/tinyssh/buf.h	/^extern int buf_putpadding_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_putrandombytes	tinyssh/buf.h	42;"	d
buf_putrandombytes	tinyssh/tinyssh/buf.h	42;"	d
buf_putrandombytes_	tinyssh/buf.c	/^int buf_putrandombytes_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putrandombytes_	tinyssh/buf.h	/^extern int buf_putrandombytes_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_putrandombytes_	tinyssh/tinyssh/buf.c	/^int buf_putrandombytes_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putrandombytes_	tinyssh/tinyssh/buf.h	/^extern int buf_putrandombytes_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_puts	tinyssh/buf.h	40;"	d
buf_puts	tinyssh/tinyssh/buf.h	40;"	d
buf_puts_	tinyssh/buf.c	/^int buf_puts_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const char *x)
buf_puts_	tinyssh/buf.h	/^extern int buf_puts_(const char *, unsigned long long, struct buf *, const char *);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const char *)
buf_puts_	tinyssh/tinyssh/buf.c	/^int buf_puts_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const char *x)
buf_puts_	tinyssh/tinyssh/buf.h	/^extern int buf_puts_(const char *, unsigned long long, struct buf *, const char *);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const char *)
buf_putsharedsecret	process.h	/^    void (*buf_putsharedsecret)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
buf_putsharedsecret	tinyssh/buf.h	48;"	d
buf_putsharedsecret	tinyssh/tinyssh/buf.h	48;"	d
buf_putsharedsecret	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsharedsecret)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
buf_putsharedsecret_	tinyssh/buf.c	/^int buf_putsharedsecret_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putsharedsecret_	tinyssh/buf.h	/^extern int buf_putsharedsecret_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putsharedsecret_	tinyssh/tinyssh/buf.c	/^int buf_putsharedsecret_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putsharedsecret_	tinyssh/tinyssh/buf.h	/^extern int buf_putsharedsecret_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putsignature	process.h	/^    void (*buf_putsignature)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putsignature	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignature)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putsignpk	process.h	/^    void (*buf_putsignpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putsignpk	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putsignpkbase64	process.h	/^    void (*buf_putsignpkbase64)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putsignpkbase64	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignpkbase64)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
buf_putstring	tinyssh/buf.h	47;"	d
buf_putstring	tinyssh/tinyssh/buf.h	47;"	d
buf_putstring_	tinyssh/buf.c	/^int buf_putstring_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const char *x)
buf_putstring_	tinyssh/buf.h	/^extern int buf_putstring_(const char *, unsigned long long, struct buf *, const char *);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const char *)
buf_putstring_	tinyssh/tinyssh/buf.c	/^int buf_putstring_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const char *x)
buf_putstring_	tinyssh/tinyssh/buf.h	/^extern int buf_putstring_(const char *, unsigned long long, struct buf *, const char *);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const char *)
buf_putstringlen	tinyssh/buf.h	46;"	d
buf_putstringlen	tinyssh/tinyssh/buf.h	46;"	d
buf_putstringlen_	tinyssh/buf.c	/^int buf_putstringlen_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putstringlen_	tinyssh/buf.h	/^extern int buf_putstringlen_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putstringlen_	tinyssh/tinyssh/buf.c	/^int buf_putstringlen_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, const unsigned char *x, long long len)
buf_putstringlen_	tinyssh/tinyssh/buf.h	/^extern int buf_putstringlen_(const char *, unsigned long long, struct buf *, const unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, const unsigned char *, long long)
buf_putzerobytes	tinyssh/buf.h	41;"	d
buf_putzerobytes	tinyssh/tinyssh/buf.h	41;"	d
buf_putzerobytes_	tinyssh/buf.c	/^int buf_putzerobytes_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putzerobytes_	tinyssh/buf.h	/^extern int buf_putzerobytes_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_putzerobytes_	tinyssh/tinyssh/buf.c	/^int buf_putzerobytes_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_putzerobytes_	tinyssh/tinyssh/buf.h	/^extern int buf_putzerobytes_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_ready	tinyssh/buf.h	37;"	d
buf_ready	tinyssh/tinyssh/buf.h	37;"	d
buf_ready_	tinyssh/buf.c	/^int buf_ready_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_ready_	tinyssh/buf.h	/^extern int buf_ready_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buf_ready_	tinyssh/tinyssh/buf.c	/^int buf_ready_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, struct buf *b, long long len)
buf_ready_	tinyssh/tinyssh/buf.h	/^extern int buf_ready_(const char *, unsigned long long, struct buf *, long long);$/;"	p	signature:(const char *, unsigned long long, struct buf *, long long)
buflen	tinyssh/tinyssh/log.c	/^static long long buflen = 0;$/;"	v	file:
bug	tinyssh/tinyssh/bug.h	10;"	d
bug_	tinyssh/tinyssh/bug.h	9;"	d
bug_inval	tinyssh/tinyssh/bug.h	14;"	d
bug_inval_	tinyssh/tinyssh/bug.h	18;"	d
bug_nomem	tinyssh/tinyssh/bug.h	12;"	d
bug_nomem_	tinyssh/tinyssh/bug.h	16;"	d
bug_proto	tinyssh/tinyssh/bug.h	13;"	d
bug_proto_	tinyssh/tinyssh/bug.h	17;"	d
byte_copy	tinyssh/tinyssh/byte.c	/^void byte_copy(void *yv,long long ylen,const void *xv)$/;"	f	signature:(void *yv,long long ylen,const void *xv)
byte_copy	tinyssh/tinyssh/byte.h	/^extern void byte_copy(void *,long long,const void *);$/;"	p	signature:(void *,long long,const void *)
byte_isequal	tinyssh/tinyssh/byte.c	/^int byte_isequal(const void *yv,long long ylen,const void *xv)$/;"	f	signature:(const void *yv,long long ylen,const void *xv)
byte_isequal	tinyssh/tinyssh/byte.h	/^extern int byte_isequal(const void *,long long,const void *);$/;"	p	signature:(const void *,long long,const void *)
byte_zero	tinyssh/tinyssh/byte.c	/^void byte_zero(void *yv,long long ylen)$/;"	f	signature:(void *yv,long long ylen)
byte_zero	tinyssh/tinyssh/byte.h	/^extern void byte_zero(void *,long long);$/;"	p	signature:(void *,long long)
bytesub	tinyssh/crypto/aes.c	/^static void bytesub(unsigned char *r, unsigned char *c) {$/;"	f	file:	signature:(unsigned char *r, unsigned char *c)
chachapoly_packet_get	tinyssh/tinyssh/sshcrypto.h	/^extern int chachapoly_packet_get(struct buf *);$/;"	p	signature:(struct buf *)
chachapoly_packet_get	tinyssh/tinyssh/sshcrypto_cipher_chachapoly.c	/^int chachapoly_packet_get(struct buf *b) {$/;"	f	signature:(struct buf *b)
chachapoly_packet_put	tinyssh/tinyssh/sshcrypto.h	/^extern void chachapoly_packet_put(struct buf *);$/;"	p	signature:(struct buf *)
chachapoly_packet_put	tinyssh/tinyssh/sshcrypto_cipher_chachapoly.c	/^void chachapoly_packet_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
channel	tinyssh/tinyssh/channel.c	/^struct channel channel = {0};$/;"	v	typeref:struct:channel
channel	tinyssh/tinyssh/channel.h	/^struct channel {$/;"	s
channel::a	tinyssh/tinyssh/channel.h	/^    int a;$/;"	m	struct:channel	access:public
channel::b	tinyssh/tinyssh/channel.h	/^    int b;$/;"	m	struct:channel	access:public
channel::buf0	tinyssh/tinyssh/channel.h	/^    unsigned char buf0[CHANNEL_BUFSIZE];$/;"	m	struct:channel	access:public
channel::fd0	tinyssh/tinyssh/channel.h	/^    int fd0;$/;"	m	struct:channel	access:public
channel::fd1	tinyssh/tinyssh/channel.h	/^    int fd1;$/;"	m	struct:channel	access:public
channel::fd2	tinyssh/tinyssh/channel.h	/^    int fd2;$/;"	m	struct:channel	access:public
channel::flagterminal	tinyssh/tinyssh/channel.h	/^    int flagterminal;$/;"	m	struct:channel	access:public
channel::id	tinyssh/tinyssh/channel.h	/^    crypto_uint32 id;$/;"	m	struct:channel	access:public
channel::len0	tinyssh/tinyssh/channel.h	/^    long long len0;$/;"	m	struct:channel	access:public
channel::localip	tinyssh/tinyssh/channel.h	/^    char localip[IPTOSTR_LEN];$/;"	m	struct:channel	access:public
channel::localport	tinyssh/tinyssh/channel.h	/^    char localport[PORTTOSTR_LEN];$/;"	m	struct:channel	access:public
channel::localwindow	tinyssh/tinyssh/channel.h	/^    crypto_uint32 localwindow;$/;"	m	struct:channel	access:public
channel::master	tinyssh/tinyssh/channel.h	/^    int master;$/;"	m	struct:channel	access:public
channel::maxpacket	tinyssh/tinyssh/channel.h	/^    crypto_uint32 maxpacket;$/;"	m	struct:channel	access:public
channel::pid	tinyssh/tinyssh/channel.h	/^    long long pid;$/;"	m	struct:channel	access:public
channel::remoteeof	tinyssh/tinyssh/channel.h	/^    int remoteeof;$/;"	m	struct:channel	access:public
channel::remoteip	tinyssh/tinyssh/channel.h	/^    char remoteip[IPTOSTR_LEN];$/;"	m	struct:channel	access:public
channel::remoteport	tinyssh/tinyssh/channel.h	/^    char remoteport[PORTTOSTR_LEN];$/;"	m	struct:channel	access:public
channel::remotewindow	tinyssh/tinyssh/channel.h	/^    crypto_uint32 remotewindow;$/;"	m	struct:channel	access:public
channel::slave	tinyssh/tinyssh/channel.h	/^    int slave;$/;"	m	struct:channel	access:public
channel::status	tinyssh/tinyssh/channel.h	/^    int status;$/;"	m	struct:channel	access:public
channel::termname	tinyssh/tinyssh/channel.h	/^    char termname[TTY_NAME_MAX + 1];$/;"	m	struct:channel	access:public
channel::user	tinyssh/tinyssh/channel.h	/^    char user[LOGIN_NAME_MAX + 1];$/;"	m	struct:channel	access:public
channel::x	tinyssh/tinyssh/channel.h	/^    int x;$/;"	m	struct:channel	access:public
channel::y	tinyssh/tinyssh/channel.h	/^    int y;$/;"	m	struct:channel	access:public
channel_droppriv	tinyssh/tinyssh/channel.h	/^extern int channel_droppriv(char *, char **);$/;"	p	signature:(char *, char **)
channel_droppriv	tinyssh/tinyssh/channel_drop.c	/^int channel_droppriv(char *user, char **shell) {$/;"	f	signature:(char *user, char **shell)
channel_env	tinyssh/tinyssh/channel.c	/^int channel_env(const char *x, const char *y) {$/;"	f	signature:(const char *x, const char *y)
channel_env	tinyssh/tinyssh/channel.h	/^extern int channel_env(const char *, const char *);$/;"	p	signature:(const char *, const char *)
channel_exec	tinyssh/tinyssh/channel.c	/^int channel_exec(const char *cmd) {$/;"	f	signature:(const char *cmd)
channel_exec	tinyssh/tinyssh/channel.h	/^extern int channel_exec(const char *);$/;"	p	signature:(const char *)
channel_extendedread	tinyssh/tinyssh/channel.c	/^long long channel_extendedread(unsigned char *buf, long long len) {$/;"	f	signature:(unsigned char *buf, long long len)
channel_extendedread	tinyssh/tinyssh/channel.h	/^extern long long channel_extendedread(unsigned char *, long long);$/;"	p	signature:(unsigned char *, long long)
channel_extendedreadisready	tinyssh/tinyssh/channel.c	/^int channel_extendedreadisready(void) {$/;"	f	signature:(void)
channel_extendedreadisready	tinyssh/tinyssh/channel.h	/^extern int channel_extendedreadisready(void);$/;"	p	signature:(void)
channel_fork	tinyssh/tinyssh/channel.h	/^extern long long channel_fork(int *);$/;"	p	signature:(int *)
channel_fork	tinyssh/tinyssh/channel_fork.c	/^long long channel_fork(int fd[3]) {$/;"	f	signature:(int fd[3])
channel_forkpty	tinyssh/tinyssh/channel.h	/^extern long long channel_forkpty(int *, int, int);$/;"	p	signature:(int *, int, int)
channel_forkpty	tinyssh/tinyssh/channel_forkpty.c	/^long long channel_forkpty(int fd[3], int master, int slave) {$/;"	f	signature:(int fd[3], int master, int slave)
channel_getfd0	tinyssh/tinyssh/channel.c	/^int channel_getfd0(void) { return channel.fd0; }$/;"	f	signature:(void)
channel_getfd0	tinyssh/tinyssh/channel.h	/^extern int channel_getfd0(void);$/;"	p	signature:(void)
channel_getfd1	tinyssh/tinyssh/channel.c	/^int channel_getfd1(void) { return channel.fd1; }$/;"	f	signature:(void)
channel_getfd1	tinyssh/tinyssh/channel.h	/^extern int channel_getfd1(void);$/;"	p	signature:(void)
channel_getfd2	tinyssh/tinyssh/channel.c	/^int channel_getfd2(void) { return channel.fd2; }$/;"	f	signature:(void)
channel_getfd2	tinyssh/tinyssh/channel.h	/^extern int channel_getfd2(void);$/;"	p	signature:(void)
channel_getid	tinyssh/tinyssh/channel.c	/^crypto_uint32 channel_getid(void) { return channel.id; }$/;"	f	signature:(void)
channel_getid	tinyssh/tinyssh/channel.h	/^extern crypto_uint32 channel_getid(void);$/;"	p	signature:(void)
channel_getlen0	tinyssh/tinyssh/channel.c	/^long long channel_getlen0(void) { return channel.len0; }$/;"	f	signature:(void)
channel_getlen0	tinyssh/tinyssh/channel.h	/^extern long long channel_getlen0(void);$/;"	p	signature:(void)
channel_getlocalwindow	tinyssh/tinyssh/channel.c	/^crypto_uint32 channel_getlocalwindow(void) { return channel.localwindow; }$/;"	f	signature:(void)
channel_getlocalwindow	tinyssh/tinyssh/channel.h	/^extern crypto_uint32 channel_getlocalwindow(void);$/;"	p	signature:(void)
channel_incrementlocalwindow	tinyssh/tinyssh/channel.c	/^void channel_incrementlocalwindow(crypto_uint32 x) { channel.localwindow += x; }$/;"	f	signature:(crypto_uint32 x)
channel_incrementlocalwindow	tinyssh/tinyssh/channel.h	/^extern void channel_incrementlocalwindow(crypto_uint32);$/;"	p	signature:(crypto_uint32)
channel_incrementremotewindow	tinyssh/tinyssh/channel.c	/^void channel_incrementremotewindow(crypto_uint32 x) { channel.remotewindow += x; }$/;"	f	signature:(crypto_uint32 x)
channel_incrementremotewindow	tinyssh/tinyssh/channel.h	/^extern void channel_incrementremotewindow(crypto_uint32);$/;"	p	signature:(crypto_uint32)
channel_init	tinyssh/tinyssh/channel.c	/^void channel_init(void) {$/;"	f	signature:(void)
channel_init	tinyssh/tinyssh/channel.h	/^extern void channel_init(void);$/;"	p	signature:(void)
channel_iseof	tinyssh/tinyssh/channel.c	/^int channel_iseof(void) {$/;"	f	signature:(void)
channel_iseof	tinyssh/tinyssh/channel.h	/^extern int channel_iseof(void);$/;"	p	signature:(void)
channel_open	tinyssh/tinyssh/channel.c	/^int channel_open(const char *user, crypto_uint32 id, crypto_uint32 remotewindow, crypto_uint32 maxpacket, crypto_uint32 *localwindow) {$/;"	f	signature:(const char *user, crypto_uint32 id, crypto_uint32 remotewindow, crypto_uint32 maxpacket, crypto_uint32 *localwindow)
channel_open	tinyssh/tinyssh/channel.h	/^extern int channel_open(const char *, crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32 *);$/;"	p	signature:(const char *, crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32 *)
channel_openpty	tinyssh/tinyssh/channel.h	/^extern int channel_openpty(int *, int *);$/;"	p	signature:(int *, int *)
channel_openpty	tinyssh/tinyssh/channel_forkpty.c	/^int channel_openpty(int *amaster, int *aslave) {$/;"	f	signature:(int *amaster, int *aslave)
channel_openterminal	tinyssh/tinyssh/channel.c	/^int channel_openterminal(const char *name, crypto_uint32 a, crypto_uint32 b, crypto_uint32 x, crypto_uint32 y) {$/;"	f	signature:(const char *name, crypto_uint32 a, crypto_uint32 b, crypto_uint32 x, crypto_uint32 y)
channel_openterminal	tinyssh/tinyssh/channel.h	/^extern int channel_openterminal(const char *, crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32);$/;"	p	signature:(const char *, crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32)
channel_ptyresize	tinyssh/tinyssh/channel.c	/^void channel_ptyresize(crypto_uint32 a, crypto_uint32 b, crypto_uint32 x, crypto_uint32 y) {$/;"	f	signature:(crypto_uint32 a, crypto_uint32 b, crypto_uint32 x, crypto_uint32 y)
channel_ptyresize	tinyssh/tinyssh/channel.h	/^extern void channel_ptyresize(crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32);$/;"	p	signature:(crypto_uint32, crypto_uint32, crypto_uint32, crypto_uint32)
channel_purge	tinyssh/tinyssh/channel.c	/^void channel_purge(void) {$/;"	f	signature:(void)
channel_purge	tinyssh/tinyssh/channel.h	/^extern void channel_purge(void);$/;"	p	signature:(void)
channel_put	tinyssh/tinyssh/channel.c	/^void channel_put(unsigned char *buf, long long len) {$/;"	f	signature:(unsigned char *buf, long long len)
channel_put	tinyssh/tinyssh/channel.h	/^extern void channel_put(unsigned char *, long long);$/;"	p	signature:(unsigned char *, long long)
channel_puteof	tinyssh/tinyssh/channel.c	/^void channel_puteof(void) {$/;"	f	signature:(void)
channel_puteof	tinyssh/tinyssh/channel.h	/^extern void channel_puteof(void);$/;"	p	signature:(void)
channel_putisready	tinyssh/tinyssh/channel.c	/^int channel_putisready(void) {$/;"	f	signature:(void)
channel_putisready	tinyssh/tinyssh/channel.h	/^extern int channel_putisready(void);$/;"	p	signature:(void)
channel_read	tinyssh/tinyssh/channel.c	/^long long channel_read(unsigned char *buf, long long len) {$/;"	f	signature:(unsigned char *buf, long long len)
channel_read	tinyssh/tinyssh/channel.h	/^extern long long channel_read(unsigned char *, long long);$/;"	p	signature:(unsigned char *, long long)
channel_readisready	tinyssh/tinyssh/channel.c	/^int channel_readisready(void) {$/;"	f	signature:(void)
channel_readisready	tinyssh/tinyssh/channel.h	/^extern int channel_readisready(void);$/;"	p	signature:(void)
channel_subsystem	tinyssh/tinyssh/channel_subsystem.c	/^static char *channel_subsystem[CHANNEL_SUBSYSTEM_MAX] = {0};$/;"	v	file:
channel_subsystem_add	tinyssh/tinyssh/channel.h	/^extern int channel_subsystem_add(const char *);$/;"	p	signature:(const char *)
channel_subsystem_add	tinyssh/tinyssh/channel_subsystem.c	/^int channel_subsystem_add(const char *x) {$/;"	f	signature:(const char *x)
channel_subsystem_get	tinyssh/tinyssh/channel.h	/^extern char *channel_subsystem_get(const char *);$/;"	p	signature:(const char *)
channel_subsystem_get	tinyssh/tinyssh/channel_subsystem.c	/^char *channel_subsystem_get(const char *x) {$/;"	f	signature:(const char *x)
channel_subsystem_log	tinyssh/tinyssh/channel.h	/^extern void channel_subsystem_log(void);$/;"	p	signature:(void)
channel_subsystem_log	tinyssh/tinyssh/channel_subsystem.c	/^void channel_subsystem_log(void) {$/;"	f	signature:(void)
channel_subsystem_pos	tinyssh/tinyssh/channel_subsystem.c	/^static long long channel_subsystem_pos = 0;$/;"	v	file:
channel_waitnohang	tinyssh/tinyssh/channel.c	/^int channel_waitnohang(int *s, int *e) {$/;"	f	signature:(int *s, int *e)
channel_waitnohang	tinyssh/tinyssh/channel.h	/^extern int channel_waitnohang(int *, int *);$/;"	p	signature:(int *, int *)
channel_write	tinyssh/tinyssh/channel.c	/^int channel_write(void) {$/;"	f	signature:(void)
channel_write	tinyssh/tinyssh/channel.h	/^extern int channel_write(void);$/;"	p	signature:(void)
channel_writeisready	tinyssh/tinyssh/channel.c	/^int channel_writeisready(void) {$/;"	f	signature:(void)
channel_writeisready	tinyssh/tinyssh/channel.h	/^extern int channel_writeisready(void);$/;"	p	signature:(void)
chars	tinyssh/tinyssh/log.c	/^static char chars[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRTSUVWXYZ0123456789";$/;"	v	file:
check	tinyssh/tinyssh/subprocess_auth.c	/^static void check(uid_t uid, const char *d, const char *f, long long *err) {$/;"	f	file:	signature:(uid_t uid, const char *d, const char *f, long long *err)
checkaffine	tinyssh/crypto/gep256.c	/^static int checkaffine(gep256 p) {$/;"	f	file:	signature:(gep256 p)
cipher_blockbytes	process.h	/^    long long cipher_blockbytes;$/;"	m	struct:sshcrypto_cipher	access:public
cipher_blockbytes	tinyssh/tinyssh/sshcrypto.h	/^    long long cipher_blockbytes;$/;"	m	struct:sshcrypto_cipher	access:public
cleanup	packet.h	27;"	d
cleanup	tinyssh/crypto/cleanup.h	5;"	d
cleanup_	packet.h	/^extern void cleanup_(void *yv, long long ylen);$/;"	p	signature:(void *yv, long long ylen)
cleanup_	packet.h	/^void cleanup_(void *yv, long long ylen) {$/;"	f	signature:(void *yv, long long ylen)
cleanup_	tinyssh/crypto/cleanup.c	/^void cleanup_(void *yv, long long ylen) {$/;"	f	signature:(void *yv, long long ylen)
cleanup_	tinyssh/crypto/cleanup.h	/^extern void cleanup_(void *, long long);$/;"	p	signature:(void *, long long)
clientkey	tinyssh/packet.h	/^    unsigned char clientkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientkey	tinyssh/tinyssh/packet.h	/^    unsigned char clientkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientmackey	tinyssh/packet.h	/^    unsigned char clientmackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientmackey	tinyssh/tinyssh/packet.h	/^    unsigned char clientmackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientnonce	tinyssh/packet.h	/^    unsigned char clientnonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientnonce	tinyssh/tinyssh/packet.h	/^    unsigned char clientnonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
clientpk	packet.h	/^        unsigned char clientpk[sshcrypto_dh_PUBLICKEYMAX];$/;"	m	class:Packet	access:private
cmov	tinyssh/crypto/ge25519.c	/^static void cmov(ge25519 p, ge25519 q, crypto_uint32 b) {$/;"	f	file:	signature:(ge25519 p, ge25519 q, crypto_uint32 b)
cmov	tinyssh/crypto/gep256.c	/^static void cmov(gep256 p, gep256 q, crypto_uint32 b) {$/;"	f	file:	signature:(gep256 p, gep256 q, crypto_uint32 b)
cmov_precomp	tinyssh/crypto/ge25519.c	/^static void cmov_precomp(ge25519_precomp p, ge25519_precomp q, crypto_uint32 b) {$/;"	f	file:	signature:(ge25519_precomp p, ge25519_precomp q, crypto_uint32 b)
cmov_precomp	tinyssh/crypto/gep256.c	/^static void cmov_precomp(gep256_precomp p, gep256_precomp q, crypto_uint32 b) {$/;"	f	file:	signature:(gep256_precomp p, gep256_precomp q, crypto_uint32 b)
coe_disable	tinyssh/tinyssh/coe.c	/^void coe_disable(int fd) {$/;"	f	signature:(int fd)
coe_disable	tinyssh/tinyssh/coe.h	/^extern void coe_disable(int);$/;"	p	signature:(int)
coe_enable	tinyssh/tinyssh/coe.c	/^void coe_enable(int fd) {$/;"	f	signature:(int fd)
coe_enable	tinyssh/tinyssh/coe.h	/^extern void coe_enable(int);$/;"	p	signature:(int)
connectioninfo	tinyssh/tinyssh/connectioninfo.c	/^void connectioninfo(char *localip, char *localport, char *remoteip, char *remoteport) {$/;"	f	signature:(char *localip, char *localport, char *remoteip, char *remoteport)
connectioninfo	tinyssh/tinyssh/connectioninfo.h	/^extern void connectioninfo(char *, char *, char *, char *);$/;"	p	signature:(char *, char *, char *, char *)
connectioninfo_fromcurvecpserverenv	tinyssh/tinyssh/connectioninfo.c	/^static int connectioninfo_fromcurvecpserverenv(char *localip, char *localport, char *remoteip, char *remoteport) {$/;"	f	file:	signature:(char *localip, char *localport, char *remoteip, char *remoteport)
connectioninfo_fromfd	tinyssh/tinyssh/connectioninfo.c	/^static int connectioninfo_fromfd(char *localip, char *localport, char *remoteip, char *remoteport) {$/;"	f	file:	signature:(char *localip, char *localport, char *remoteip, char *remoteport)
connectioninfo_fromtcpserverenv	tinyssh/tinyssh/connectioninfo.c	/^static int connectioninfo_fromtcpserverenv(char *localip, char *localport, char *remoteip, char *remoteport) {$/;"	f	file:	signature:(char *localip, char *localport, char *remoteip, char *remoteport)
copy	tinyssh/crypto/ge25519.c	/^static void copy(ge25519 p, ge25519 q) {$/;"	f	file:	signature:(ge25519 p, ge25519 q)
copy	tinyssh/crypto/gep256.c	/^static void copy(gep256 p, gep256 q) {$/;"	f	file:	signature:(gep256 p, gep256 q)
copy2	tinyssh/crypto/aes.c	/^static void copy2(crypto_uint32 *r, const crypto_uint32 *x) { *r  = *x; }$/;"	f	file:	signature:(crypto_uint32 *r, const crypto_uint32 *x)
countz	tinyssh/tinyssh/iptostr.c	/^static void countz(long long *first, long long *last, const unsigned long long *ip) {$/;"	f	file:	signature:(long long *first, long long *last, const unsigned long long *ip)
create	tinyssh/tinyssh/tinysshd-makekey.c	/^static void create(const char *d, const char *fn, const unsigned char *x, long long xlen) {$/;"	f	file:	signature:(const char *d, const char *fn, const unsigned char *x, long long xlen)
crypto_auth_hmacsha256	tinyssh/crypto/crypto_auth_hmacsha256.h	9;"	d
crypto_auth_hmacsha256_BYTES	tinyssh/crypto/crypto_auth_hmacsha256.h	11;"	d
crypto_auth_hmacsha256_H	tinyssh/crypto/crypto_auth_hmacsha256.h	2;"	d
crypto_auth_hmacsha256_IMPLEMENTATION	tinyssh/crypto/crypto_auth_hmacsha256.h	13;"	d
crypto_auth_hmacsha256_KEYBYTES	tinyssh/crypto/crypto_auth_hmacsha256.h	12;"	d
crypto_auth_hmacsha256_VERSION	tinyssh/crypto/crypto_auth_hmacsha256.h	14;"	d
crypto_auth_hmacsha256_tinynacl	tinyssh/crypto/crypto_auth_hmacsha256.c	/^int crypto_auth_hmacsha256_tinynacl(unsigned char *out, const unsigned char *m, unsigned long long n, const unsigned char *k) {$/;"	f	signature:(unsigned char *out, const unsigned char *m, unsigned long long n, const unsigned char *k)
crypto_auth_hmacsha256_tinynacl	tinyssh/crypto/crypto_auth_hmacsha256.h	/^extern int crypto_auth_hmacsha256_tinynacl(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *)
crypto_auth_hmacsha256_tinynacl_BYTES	tinyssh/crypto/crypto_auth_hmacsha256.h	4;"	d
crypto_auth_hmacsha256_tinynacl_KEYBYTES	tinyssh/crypto/crypto_auth_hmacsha256.h	5;"	d
crypto_auth_hmacsha256_tinynacl_verify	tinyssh/crypto/crypto_auth_hmacsha256.c	/^int crypto_auth_hmacsha256_tinynacl_verify(const unsigned char *h, const unsigned char *m, unsigned long long n, const unsigned char *k) {$/;"	f	signature:(const unsigned char *h, const unsigned char *m, unsigned long long n, const unsigned char *k)
crypto_auth_hmacsha256_tinynacl_verify	tinyssh/crypto/crypto_auth_hmacsha256.h	/^extern int crypto_auth_hmacsha256_tinynacl_verify(const unsigned char *, const unsigned char *, unsigned long long, const unsigned char *);$/;"	p	signature:(const unsigned char *, const unsigned char *, unsigned long long, const unsigned char *)
crypto_auth_hmacsha256_verify	tinyssh/crypto/crypto_auth_hmacsha256.h	10;"	d
crypto_core_aes256encrypt	tinyssh/crypto/crypto_core_aes256encrypt.h	10;"	d
crypto_core_aes256encrypt_CONSTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	14;"	d
crypto_core_aes256encrypt_H	tinyssh/crypto/crypto_core_aes256encrypt.h	2;"	d
crypto_core_aes256encrypt_IMPLEMENTATION	tinyssh/crypto/crypto_core_aes256encrypt.h	15;"	d
crypto_core_aes256encrypt_INPUTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	12;"	d
crypto_core_aes256encrypt_KEYBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	13;"	d
crypto_core_aes256encrypt_OUTPUTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	11;"	d
crypto_core_aes256encrypt_VERSION	tinyssh/crypto/crypto_core_aes256encrypt.h	16;"	d
crypto_core_aes256encrypt_tinynacl	tinyssh/crypto/crypto_core_aes256encrypt.c	/^int crypto_core_aes256encrypt_tinynacl(unsigned char *out, const unsigned char *in, const unsigned char *k, const unsigned char *c) {$/;"	f	signature:(unsigned char *out, const unsigned char *in, const unsigned char *k, const unsigned char *c)
crypto_core_aes256encrypt_tinynacl	tinyssh/crypto/crypto_core_aes256encrypt.h	/^extern int crypto_core_aes256encrypt_tinynacl(unsigned char *,const unsigned char *,const unsigned char *,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *,const unsigned char *,const unsigned char *)
crypto_core_aes256encrypt_tinynacl_CONSTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	7;"	d
crypto_core_aes256encrypt_tinynacl_INPUTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	5;"	d
crypto_core_aes256encrypt_tinynacl_KEYBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	6;"	d
crypto_core_aes256encrypt_tinynacl_OUTPUTBYTES	tinyssh/crypto/crypto_core_aes256encrypt.h	4;"	d
crypto_hash_sha256	tinyssh/crypto/crypto_hash_sha256.h	7;"	d
crypto_hash_sha256_BYTES	tinyssh/crypto/crypto_hash_sha256.h	8;"	d
crypto_hash_sha256_H	tinyssh/crypto/crypto_hash_sha256.h	2;"	d
crypto_hash_sha256_IMPLEMENTATION	tinyssh/crypto/crypto_hash_sha256.h	9;"	d
crypto_hash_sha256_VERSION	tinyssh/crypto/crypto_hash_sha256.h	10;"	d
crypto_hash_sha256_tinynacl	tinyssh/crypto/crypto_hash_sha256.c	/^int crypto_hash_sha256_tinynacl(unsigned char *out, const unsigned char *m, unsigned long long n) {$/;"	f	signature:(unsigned char *out, const unsigned char *m, unsigned long long n)
crypto_hash_sha256_tinynacl	tinyssh/crypto/crypto_hash_sha256.h	/^extern int crypto_hash_sha256_tinynacl(unsigned char *,const unsigned char *,unsigned long long);$/;"	p	signature:(unsigned char *,const unsigned char *,unsigned long long)
crypto_hash_sha256_tinynacl_BYTES	tinyssh/crypto/crypto_hash_sha256.h	4;"	d
crypto_hash_sha512	tinyssh/crypto/crypto_hash_sha512.h	7;"	d
crypto_hash_sha512_BYTES	tinyssh/crypto/crypto_hash_sha512.h	8;"	d
crypto_hash_sha512_H	tinyssh/crypto/crypto_hash_sha512.h	2;"	d
crypto_hash_sha512_IMPLEMENTATION	tinyssh/crypto/crypto_hash_sha512.h	9;"	d
crypto_hash_sha512_VERSION	tinyssh/crypto/crypto_hash_sha512.h	10;"	d
crypto_hash_sha512_tinynacl	tinyssh/crypto/crypto_hash_sha512.c	/^int crypto_hash_sha512_tinynacl(unsigned char *o,const unsigned char *m, unsigned long long n) {$/;"	f	signature:(unsigned char *o,const unsigned char *m, unsigned long long n)
crypto_hash_sha512_tinynacl	tinyssh/crypto/crypto_hash_sha512.h	/^extern int crypto_hash_sha512_tinynacl(unsigned char *, const unsigned char *, unsigned long long);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long)
crypto_hash_sha512_tinynacl_BYTES	tinyssh/crypto/crypto_hash_sha512.h	4;"	d
crypto_int64	crypto_int64.h	/^typedef int64_t crypto_int64;$/;"	t
crypto_int64	tinyssh/crypto/crypto_int64.h	/^typedef int64_t crypto_int64;$/;"	t
crypto_int64_h	crypto_int64.h	2;"	d
crypto_int64_h	tinyssh/crypto/crypto_int64.h	2;"	d
crypto_onetimeauth_poly1305	tinyssh/crypto/crypto_onetimeauth_poly1305.h	9;"	d
crypto_onetimeauth_poly1305_BYTES	tinyssh/crypto/crypto_onetimeauth_poly1305.h	11;"	d
crypto_onetimeauth_poly1305_H	tinyssh/crypto/crypto_onetimeauth_poly1305.h	2;"	d
crypto_onetimeauth_poly1305_IMPLEMENTATION	tinyssh/crypto/crypto_onetimeauth_poly1305.h	13;"	d
crypto_onetimeauth_poly1305_KEYBYTES	tinyssh/crypto/crypto_onetimeauth_poly1305.h	12;"	d
crypto_onetimeauth_poly1305_VERSION	tinyssh/crypto/crypto_onetimeauth_poly1305.h	14;"	d
crypto_onetimeauth_poly1305_tinynacl	tinyssh/crypto/crypto_onetimeauth_poly1305.c	/^int crypto_onetimeauth_poly1305_tinynacl(unsigned char *o, const unsigned char *m, unsigned long long n, const unsigned char *k) {$/;"	f	signature:(unsigned char *o, const unsigned char *m, unsigned long long n, const unsigned char *k)
crypto_onetimeauth_poly1305_tinynacl	tinyssh/crypto/crypto_onetimeauth_poly1305.h	/^extern int crypto_onetimeauth_poly1305_tinynacl(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_onetimeauth_poly1305_tinynacl_BYTES	tinyssh/crypto/crypto_onetimeauth_poly1305.h	4;"	d
crypto_onetimeauth_poly1305_tinynacl_KEYBYTES	tinyssh/crypto/crypto_onetimeauth_poly1305.h	5;"	d
crypto_onetimeauth_poly1305_tinynacl_verify	tinyssh/crypto/crypto_onetimeauth_poly1305.c	/^int crypto_onetimeauth_poly1305_tinynacl_verify(const unsigned char *h, const unsigned char *in, unsigned long long l, const unsigned char *k) {$/;"	f	signature:(const unsigned char *h, const unsigned char *in, unsigned long long l, const unsigned char *k)
crypto_onetimeauth_poly1305_tinynacl_verify	tinyssh/crypto/crypto_onetimeauth_poly1305.h	/^extern int crypto_onetimeauth_poly1305_tinynacl_verify(const unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(const unsigned char *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_onetimeauth_poly1305_verify	tinyssh/crypto/crypto_onetimeauth_poly1305.h	10;"	d
crypto_scalarmult_curve25519	tinyssh/crypto/crypto_scalarmult_curve25519.h	9;"	d
crypto_scalarmult_curve25519_BYTES	tinyssh/crypto/crypto_scalarmult_curve25519.h	11;"	d
crypto_scalarmult_curve25519_H	tinyssh/crypto/crypto_scalarmult_curve25519.h	2;"	d
crypto_scalarmult_curve25519_IMPLEMENTATION	tinyssh/crypto/crypto_scalarmult_curve25519.h	13;"	d
crypto_scalarmult_curve25519_SCALARBYTES	tinyssh/crypto/crypto_scalarmult_curve25519.h	12;"	d
crypto_scalarmult_curve25519_VERSION	tinyssh/crypto/crypto_scalarmult_curve25519.h	14;"	d
crypto_scalarmult_curve25519_base	tinyssh/crypto/crypto_scalarmult_curve25519.h	10;"	d
crypto_scalarmult_curve25519_tinynacl	tinyssh/crypto/crypto_scalarmult_curve25519.c	/^int crypto_scalarmult_curve25519_tinynacl(unsigned char *q, const unsigned char *n, const unsigned char *p) {$/;"	f	signature:(unsigned char *q, const unsigned char *n, const unsigned char *p)
crypto_scalarmult_curve25519_tinynacl	tinyssh/crypto/crypto_scalarmult_curve25519.h	/^extern int crypto_scalarmult_curve25519_tinynacl(unsigned char *,const unsigned char *,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *,const unsigned char *)
crypto_scalarmult_curve25519_tinynacl_BYTES	tinyssh/crypto/crypto_scalarmult_curve25519.h	4;"	d
crypto_scalarmult_curve25519_tinynacl_SCALARBYTES	tinyssh/crypto/crypto_scalarmult_curve25519.h	5;"	d
crypto_scalarmult_curve25519_tinynacl_base	tinyssh/crypto/crypto_scalarmult_curve25519.c	/^int crypto_scalarmult_curve25519_tinynacl_base(unsigned char *q, const unsigned char *n) {$/;"	f	signature:(unsigned char *q, const unsigned char *n)
crypto_scalarmult_curve25519_tinynacl_base	tinyssh/crypto/crypto_scalarmult_curve25519.h	/^extern int crypto_scalarmult_curve25519_tinynacl_base(unsigned char *,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *)
crypto_scalarmult_nistp256	tinyssh/crypto/crypto_scalarmult_nistp256.h	9;"	d
crypto_scalarmult_nistp256_BYTES	tinyssh/crypto/crypto_scalarmult_nistp256.h	11;"	d
crypto_scalarmult_nistp256_H	tinyssh/crypto/crypto_scalarmult_nistp256.h	2;"	d
crypto_scalarmult_nistp256_IMPLEMENTATION	tinyssh/crypto/crypto_scalarmult_nistp256.h	13;"	d
crypto_scalarmult_nistp256_SCALARBYTES	tinyssh/crypto/crypto_scalarmult_nistp256.h	12;"	d
crypto_scalarmult_nistp256_VERSION	tinyssh/crypto/crypto_scalarmult_nistp256.h	14;"	d
crypto_scalarmult_nistp256_base	tinyssh/crypto/crypto_scalarmult_nistp256.h	10;"	d
crypto_scalarmult_nistp256_tinynacl	tinyssh/crypto/crypto_scalarmult_nistp256.c	/^int crypto_scalarmult_nistp256_tinynacl(unsigned char *q, const unsigned char *n, const unsigned char *p) {$/;"	f	signature:(unsigned char *q, const unsigned char *n, const unsigned char *p)
crypto_scalarmult_nistp256_tinynacl	tinyssh/crypto/crypto_scalarmult_nistp256.h	/^extern int crypto_scalarmult_nistp256_tinynacl(unsigned char *,const unsigned char *,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *,const unsigned char *)
crypto_scalarmult_nistp256_tinynacl_BYTES	tinyssh/crypto/crypto_scalarmult_nistp256.h	4;"	d
crypto_scalarmult_nistp256_tinynacl_SCALARBYTES	tinyssh/crypto/crypto_scalarmult_nistp256.h	5;"	d
crypto_scalarmult_nistp256_tinynacl_base	tinyssh/crypto/crypto_scalarmult_nistp256.c	/^int crypto_scalarmult_nistp256_tinynacl_base(unsigned char *q, const unsigned char *n) {$/;"	f	signature:(unsigned char *q, const unsigned char *n)
crypto_scalarmult_nistp256_tinynacl_base	tinyssh/crypto/crypto_scalarmult_nistp256.h	/^extern int crypto_scalarmult_nistp256_tinynacl_base(unsigned char *,const unsigned char *);$/;"	p	signature:(unsigned char *,const unsigned char *)
crypto_sign_ed25519	process.h	38;"	d
crypto_sign_ed25519	tinyssh/crypto/crypto_sign_ed25519.h	11;"	d
crypto_sign_ed25519_BYTES	process.h	41;"	d
crypto_sign_ed25519_BYTES	tinyssh/crypto/crypto_sign_ed25519.h	14;"	d
crypto_sign_ed25519_H	tinyssh/crypto/crypto_sign_ed25519.h	2;"	d
crypto_sign_ed25519_IMPLEMENTATION	process.h	44;"	d
crypto_sign_ed25519_IMPLEMENTATION	tinyssh/crypto/crypto_sign_ed25519.h	17;"	d
crypto_sign_ed25519_PUBLICKEYBYTES	process.h	42;"	d
crypto_sign_ed25519_PUBLICKEYBYTES	tinyssh/crypto/crypto_sign_ed25519.h	15;"	d
crypto_sign_ed25519_SECRETKEYBYTES	process.h	43;"	d
crypto_sign_ed25519_SECRETKEYBYTES	tinyssh/crypto/crypto_sign_ed25519.h	16;"	d
crypto_sign_ed25519_VERSION	process.h	45;"	d
crypto_sign_ed25519_VERSION	tinyssh/crypto/crypto_sign_ed25519.h	18;"	d
crypto_sign_ed25519_keypair	process.h	40;"	d
crypto_sign_ed25519_keypair	tinyssh/crypto/crypto_sign_ed25519.h	13;"	d
crypto_sign_ed25519_open	process.h	39;"	d
crypto_sign_ed25519_open	tinyssh/crypto/crypto_sign_ed25519.h	12;"	d
crypto_sign_ed25519_tinynacl	tinyssh/crypto/crypto_sign_ed25519.c	/^int crypto_sign_ed25519_tinynacl(unsigned char *sm, unsigned long long *smlen, const unsigned char *m, unsigned long long n, const unsigned char *skorig) {$/;"	f	signature:(unsigned char *sm, unsigned long long *smlen, const unsigned char *m, unsigned long long n, const unsigned char *skorig)
crypto_sign_ed25519_tinynacl	tinyssh/crypto/crypto_sign_ed25519.h	/^extern int crypto_sign_ed25519_tinynacl(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_sign_ed25519_tinynacl_BYTES	process.h	31;"	d
crypto_sign_ed25519_tinynacl_BYTES	tinyssh/crypto/crypto_sign_ed25519.h	6;"	d
crypto_sign_ed25519_tinynacl_PUBLICKEYBYTES	process.h	30;"	d
crypto_sign_ed25519_tinynacl_PUBLICKEYBYTES	tinyssh/crypto/crypto_sign_ed25519.h	5;"	d
crypto_sign_ed25519_tinynacl_SECRETKEYBYTES	process.h	29;"	d
crypto_sign_ed25519_tinynacl_SECRETKEYBYTES	tinyssh/crypto/crypto_sign_ed25519.h	4;"	d
crypto_sign_ed25519_tinynacl_keypair	tinyssh/crypto/crypto_sign_ed25519.c	/^int crypto_sign_ed25519_tinynacl_keypair(unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *pk, unsigned char *sk)
crypto_sign_ed25519_tinynacl_keypair	tinyssh/crypto/crypto_sign_ed25519.h	/^extern int crypto_sign_ed25519_tinynacl_keypair(unsigned char *,unsigned char *);$/;"	p	signature:(unsigned char *,unsigned char *)
crypto_sign_ed25519_tinynacl_open	tinyssh/crypto/crypto_sign_ed25519.c	/^int crypto_sign_ed25519_tinynacl_open(unsigned char *m, unsigned long long *mlen, const unsigned char *sm, unsigned long long n, const unsigned char *pk) {$/;"	f	signature:(unsigned char *m, unsigned long long *mlen, const unsigned char *sm, unsigned long long n, const unsigned char *pk)
crypto_sign_ed25519_tinynacl_open	tinyssh/crypto/crypto_sign_ed25519.h	/^extern int crypto_sign_ed25519_tinynacl_open(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_sign_nistp256ecdsa	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	11;"	d
crypto_sign_nistp256ecdsa_BYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	14;"	d
crypto_sign_nistp256ecdsa_H	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	2;"	d
crypto_sign_nistp256ecdsa_IMPLEMENTATION	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	17;"	d
crypto_sign_nistp256ecdsa_PUBLICKEYBYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	15;"	d
crypto_sign_nistp256ecdsa_SECRETKEYBYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	16;"	d
crypto_sign_nistp256ecdsa_VERSION	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	18;"	d
crypto_sign_nistp256ecdsa_keypair	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	13;"	d
crypto_sign_nistp256ecdsa_open	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	12;"	d
crypto_sign_nistp256ecdsa_tinynacl	tinyssh/crypto/crypto_sign_nistp256ecdsa.c	/^int crypto_sign_nistp256ecdsa_tinynacl(unsigned char *sm, unsigned long long *smlen, const unsigned char *m, unsigned long long n, const unsigned char *skorig) {$/;"	f	signature:(unsigned char *sm, unsigned long long *smlen, const unsigned char *m, unsigned long long n, const unsigned char *skorig)
crypto_sign_nistp256ecdsa_tinynacl	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	/^extern int crypto_sign_nistp256ecdsa_tinynacl(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_sign_nistp256ecdsa_tinynacl_BYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	6;"	d
crypto_sign_nistp256ecdsa_tinynacl_PUBLICKEYBYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	5;"	d
crypto_sign_nistp256ecdsa_tinynacl_SECRETKEYBYTES	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	4;"	d
crypto_sign_nistp256ecdsa_tinynacl_keypair	tinyssh/crypto/crypto_sign_nistp256ecdsa.c	/^int crypto_sign_nistp256ecdsa_tinynacl_keypair(unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *pk, unsigned char *sk)
crypto_sign_nistp256ecdsa_tinynacl_keypair	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	/^extern int crypto_sign_nistp256ecdsa_tinynacl_keypair(unsigned char *,unsigned char *);$/;"	p	signature:(unsigned char *,unsigned char *)
crypto_sign_nistp256ecdsa_tinynacl_open	tinyssh/crypto/crypto_sign_nistp256ecdsa.c	/^int crypto_sign_nistp256ecdsa_tinynacl_open(unsigned char *m, unsigned long long *mlen, const unsigned char *sm, unsigned long long n, const unsigned char *pk) {$/;"	f	signature:(unsigned char *m, unsigned long long *mlen, const unsigned char *sm, unsigned long long n, const unsigned char *pk)
crypto_sign_nistp256ecdsa_tinynacl_open	tinyssh/crypto/crypto_sign_nistp256ecdsa.h	/^extern int crypto_sign_nistp256ecdsa_tinynacl_open(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	p	signature:(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_stream_chacha20	tinyssh/crypto/crypto_stream_chacha20.h	9;"	d
crypto_stream_chacha20_H	tinyssh/crypto/crypto_stream_chacha20.h	2;"	d
crypto_stream_chacha20_IMPLEMENTATION	tinyssh/crypto/crypto_stream_chacha20.h	13;"	d
crypto_stream_chacha20_KEYBYTES	tinyssh/crypto/crypto_stream_chacha20.h	11;"	d
crypto_stream_chacha20_NONCEBYTES	tinyssh/crypto/crypto_stream_chacha20.h	12;"	d
crypto_stream_chacha20_VERSION	tinyssh/crypto/crypto_stream_chacha20.h	14;"	d
crypto_stream_chacha20_tinynacl	tinyssh/crypto/crypto_stream_chacha20.c	/^int crypto_stream_chacha20_tinynacl(unsigned char *c, unsigned long long l, const unsigned char *n, const unsigned char *k) {$/;"	f	signature:(unsigned char *c, unsigned long long l, const unsigned char *n, const unsigned char *k)
crypto_stream_chacha20_tinynacl	tinyssh/crypto/crypto_stream_chacha20.h	/^extern int crypto_stream_chacha20_tinynacl(unsigned char *, unsigned long long, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, unsigned long long, const unsigned char *, const unsigned char *)
crypto_stream_chacha20_tinynacl_KEYBYTES	tinyssh/crypto/crypto_stream_chacha20.h	4;"	d
crypto_stream_chacha20_tinynacl_NONCEBYTES	tinyssh/crypto/crypto_stream_chacha20.h	5;"	d
crypto_stream_chacha20_tinynacl_xor	tinyssh/crypto/crypto_stream_chacha20.c	/^int crypto_stream_chacha20_tinynacl_xor(unsigned char *c, const unsigned char *m, unsigned long long l, const unsigned char *n, const unsigned char *k) {$/;"	f	signature:(unsigned char *c, const unsigned char *m, unsigned long long l, const unsigned char *n, const unsigned char *k)
crypto_stream_chacha20_tinynacl_xor	tinyssh/crypto/crypto_stream_chacha20.h	/^extern int crypto_stream_chacha20_tinynacl_xor(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *)
crypto_stream_chacha20_xor	tinyssh/crypto/crypto_stream_chacha20.h	10;"	d
crypto_uint16	crypto_uint16.h	/^typedef uint16_t crypto_uint16;$/;"	t
crypto_uint16	tinyssh/crypto/crypto_uint16.h	/^typedef uint16_t crypto_uint16;$/;"	t
crypto_uint16_h	crypto_uint16.h	2;"	d
crypto_uint16_h	tinyssh/crypto/crypto_uint16.h	2;"	d
crypto_uint32	crypto_uint32.h	/^typedef uint32_t crypto_uint32;$/;"	t
crypto_uint32	tinyssh/crypto/crypto_uint32.h	/^typedef uint32_t crypto_uint32;$/;"	t
crypto_uint32_h	crypto_uint32.h	2;"	d
crypto_uint32_h	tinyssh/crypto/crypto_uint32.h	2;"	d
crypto_uint64	crypto_uint64.h	/^typedef uint64_t crypto_uint64;$/;"	t
crypto_uint64	tinyssh/crypto/crypto_uint64.h	/^typedef uint64_t crypto_uint64;$/;"	t
crypto_uint64_h	crypto_uint64.h	2;"	d
crypto_uint64_h	tinyssh/crypto/crypto_uint64.h	2;"	d
crypto_uint8	crypto_uint8.h	/^typedef uint8_t crypto_uint8;$/;"	t
crypto_uint8	tinyssh/crypto/crypto_uint8.h	/^typedef uint8_t crypto_uint8;$/;"	t
crypto_uint8_h	crypto_uint8.h	2;"	d
crypto_uint8_h	tinyssh/crypto/crypto_uint8.h	2;"	d
crypto_verify_16	tinyssh/crypto/crypto_verify_16.h	7;"	d
crypto_verify_16_BYTES	tinyssh/crypto/crypto_verify_16.h	8;"	d
crypto_verify_16_H	tinyssh/crypto/crypto_verify_16.h	2;"	d
crypto_verify_16_IMPLEMENTATION	tinyssh/crypto/crypto_verify_16.h	9;"	d
crypto_verify_16_VERSION	tinyssh/crypto/crypto_verify_16.h	10;"	d
crypto_verify_16_tinynacl	tinyssh/crypto/crypto_verify_16.c	/^int crypto_verify_16_tinynacl(const unsigned char *x, const unsigned char *y) {$/;"	f	signature:(const unsigned char *x, const unsigned char *y)
crypto_verify_16_tinynacl	tinyssh/crypto/crypto_verify_16.h	/^extern int crypto_verify_16_tinynacl(const unsigned char *, const unsigned char *);$/;"	p	signature:(const unsigned char *, const unsigned char *)
crypto_verify_16_tinynacl_BYTES	tinyssh/crypto/crypto_verify_16.h	4;"	d
crypto_verify_32	tinyssh/crypto/crypto_verify_32.h	7;"	d
crypto_verify_32_BYTES	tinyssh/crypto/crypto_verify_32.h	8;"	d
crypto_verify_32_H	tinyssh/crypto/crypto_verify_32.h	2;"	d
crypto_verify_32_IMPLEMENTATION	tinyssh/crypto/crypto_verify_32.h	9;"	d
crypto_verify_32_VERSION	tinyssh/crypto/crypto_verify_32.h	10;"	d
crypto_verify_32_tinynacl	tinyssh/crypto/crypto_verify_32.c	/^int crypto_verify_32_tinynacl(const unsigned char *x, const unsigned char *y) {$/;"	f	signature:(const unsigned char *x, const unsigned char *y)
crypto_verify_32_tinynacl	tinyssh/crypto/crypto_verify_32.h	/^extern int crypto_verify_32_tinynacl(const unsigned char *, const unsigned char *);$/;"	p	signature:(const unsigned char *, const unsigned char *)
crypto_verify_32_tinynacl_BYTES	tinyssh/crypto/crypto_verify_32.h	4;"	d
cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_cipher	access:public
cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_kex	access:public
cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_key	access:public
cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_cipher	access:public
cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_kex	access:public
cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_key	access:public
cryptotypeselected	tinyssh/tinyssh/tinysshd.c	/^static unsigned int cryptotypeselected = sshcrypto_TYPENEWCRYPTO;$/;"	v	file:
curve25519_dh	tinyssh/tinyssh/sshcrypto.h	/^extern int curve25519_dh(unsigned char *, unsigned char *, unsigned char *);$/;"	p	signature:(unsigned char *, unsigned char *, unsigned char *)
curve25519_dh	tinyssh/tinyssh/sshcrypto_kex_curve25519.c	/^int curve25519_dh(unsigned char *k, unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *k, unsigned char *pk, unsigned char *sk)
curve25519_keypair	tinyssh/tinyssh/sshcrypto.h	/^extern int curve25519_keypair(unsigned char *, unsigned char *);$/;"	p	signature:(unsigned char *, unsigned char *)
curve25519_keypair	tinyssh/tinyssh/sshcrypto_kex_curve25519.c	/^int curve25519_keypair(unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *pk, unsigned char *sk)
curve25519_putdhpk	tinyssh/tinyssh/sshcrypto.h	/^extern void curve25519_putdhpk(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
curve25519_putdhpk	tinyssh/tinyssh/sshcrypto_kex_curve25519.c	/^void curve25519_putdhpk(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
curve25519_putsharedsecret	tinyssh/tinyssh/sshcrypto.h	/^extern void curve25519_putsharedsecret(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
curve25519_putsharedsecret	tinyssh/tinyssh/sshcrypto_kex_curve25519.c	/^void curve25519_putsharedsecret(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
d	tinyssh/crypto/ge25519.base.py	/^d = -121665 * inv(121666)$/;"	v
dbl	tinyssh/crypto/ge25519.c	/^static void dbl(ge25519 o, ge25519 p) {$/;"	f	file:	signature:(ge25519 o, ge25519 p)
dbl	tinyssh/crypto/gep256.base.py	/^def dbl(P):$/;"	f	access:public
dbl	tinyssh/crypto/gep256.c	/^static void dbl(gep256 p, gep256 q) {$/;"	f	file:	signature:(gep256 p, gep256 q)
dh	process.h	/^    int (*dh)(unsigned char *, unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
dh	tinyssh/tinyssh/sshcrypto.h	/^    int (*dh)(unsigned char *, unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
dh_bytes	process.h	/^    long long dh_bytes;$/;"	m	struct:sshcrypto_kex	access:public
dh_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_bytes;$/;"	m	struct:sshcrypto_kex	access:public
dh_keypair	process.h	/^    int (*dh_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
dh_keypair	tinyssh/tinyssh/sshcrypto.h	/^    int (*dh_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
dh_publickeybytes	process.h	/^    long long dh_publickeybytes;$/;"	m	struct:sshcrypto_kex	access:public
dh_publickeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_publickeybytes;$/;"	m	struct:sshcrypto_kex	access:public
dh_secretkeybytes	process.h	/^    long long dh_secretkeybytes;$/;"	m	struct:sshcrypto_kex	access:public
dh_secretkeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_secretkeybytes;$/;"	m	struct:sshcrypto_kex	access:public
die_fatal	tinyssh/tinyssh/die.h	6;"	d
die_fatal_	tinyssh/tinyssh/die.c	/^void die_fatal_(const char *fn, unsigned long long line, const char *trouble, const char *d, const char *f) {$/;"	f	signature:(const char *fn, unsigned long long line, const char *trouble, const char *d, const char *f)
die_fatal_	tinyssh/tinyssh/die.h	/^extern void die_fatal_(const char *, unsigned long long, const char *, const char *, const char *);$/;"	p	signature:(const char *, unsigned long long, const char *, const char *, const char *)
die_usage	tinyssh/tinyssh/die.c	/^void die_usage(const char *x) {$/;"	f	signature:(const char *x)
die_usage	tinyssh/tinyssh/die.h	/^extern void die_usage(const char *);$/;"	p	signature:(const char *)
dropuidgid	tinyssh/tinyssh/dropuidgid.c	/^int dropuidgid(const char *name, uid_t uid, gid_t gid) {$/;"	f	signature:(const char *name, uid_t uid, gid_t gid)
dropuidgid	tinyssh/tinyssh/dropuidgid.h	/^extern int dropuidgid(const char *, uid_t, gid_t);$/;"	p	signature:(const char *, uid_t, gid_t)
e	tinyssh/tinyssh/newenv.c	/^    char *e[NEWENV_LEN];$/;"	m	struct:newenv	file:	access:public
e_str	e.cpp	/^const char *e_str(int i)$/;"	f	signature:(int i)
e_str	e.h	/^extern const char *e_str(int);$/;"	p	signature:(int)
e_str	tinyssh/tinyssh/e.c	/^const char *e_str(int i)$/;"	f	signature:(int i)
e_str	tinyssh/tinyssh/e.h	/^extern const char *e_str(int);$/;"	p	signature:(int)
ed25519_parsesignature	tinyssh/tinyssh/sshcrypto.h	/^extern int ed25519_parsesignature(unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, long long)
ed25519_parsesignature	tinyssh/tinyssh/sshcrypto_key_ed25519.c	/^int ed25519_parsesignature(unsigned char *buf, const unsigned char *x, long long xlen) {$/;"	f	signature:(unsigned char *buf, const unsigned char *x, long long xlen)
ed25519_parsesignpk	tinyssh/tinyssh/sshcrypto.h	/^extern int ed25519_parsesignpk(unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, long long)
ed25519_parsesignpk	tinyssh/tinyssh/sshcrypto_key_ed25519.c	/^int ed25519_parsesignpk(unsigned char *buf, const unsigned char *x, long long xlen) {$/;"	f	signature:(unsigned char *buf, const unsigned char *x, long long xlen)
ed25519_putsignature	tinyssh/tinyssh/sshcrypto.h	/^extern void ed25519_putsignature(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
ed25519_putsignature	tinyssh/tinyssh/sshcrypto_key_ed25519.c	/^void ed25519_putsignature(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
ed25519_putsignpk	tinyssh/tinyssh/sshcrypto.h	/^extern void ed25519_putsignpk(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
ed25519_putsignpk	tinyssh/tinyssh/sshcrypto_key_ed25519.c	/^void ed25519_putsignpk(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
ed25519_putsignpkbase64	tinyssh/tinyssh/sshcrypto.h	/^extern void ed25519_putsignpkbase64(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
ed25519_putsignpkbase64	tinyssh/tinyssh/sshcrypto_key_ed25519.c	/^void ed25519_putsignpkbase64(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
edwards	tinyssh/crypto/ge25519.base.py	/^def edwards(P,Q):$/;"	f	access:public
elen	tinyssh/tinyssh/newenv.c	/^    long long elen;$/;"	m	struct:newenv	file:	access:public
env	tinyssh/tinyssh/connectioninfo.c	/^static int env(char *y, long long ylen, const char *e) {$/;"	f	file:	signature:(char *y, long long ylen, const char *e)
env_get	tinyssh/tinyssh/env.c	/^char *env_get(const char *name) {$/;"	f	signature:(const char *name)
env_get	tinyssh/tinyssh/env.h	/^extern char *env_get(const char *);$/;"	p	signature:(const char *)
equal	tinyssh/crypto/ge25519.c	/^static unsigned char equal(unsigned char a, unsigned char b) {$/;"	f	file:	signature:(unsigned char a, unsigned char b)
equal	tinyssh/crypto/gep256.c	/^static unsigned char equal(unsigned char a, unsigned char b) {$/;"	f	file:	signature:(unsigned char a, unsigned char b)
es	tinyssh/tinyssh/newenv.c	/^    char es[NEWENV_SPACE];$/;"	m	struct:newenv	file:	access:public
eslen	tinyssh/tinyssh/newenv.c	/^    long long eslen;$/;"	m	struct:newenv	file:	access:public
expmod	tinyssh/crypto/ge25519.base.py	/^def expmod(b,e,m):$/;"	f	access:public
expmod	tinyssh/crypto/gep256.base.py	/^def expmod(b, e, m):$/;"	f	access:public
fd	tinyssh/crypto/randombytes.c	/^static int fd = -1;$/;"	v	file:
fd0	tinyssh/tinyssh/channel.h	/^    int fd0;$/;"	m	struct:channel	access:public
fd1	tinyssh/tinyssh/channel.h	/^    int fd1;$/;"	m	struct:channel	access:public
fd2	tinyssh/tinyssh/channel.h	/^    int fd2;$/;"	m	struct:channel	access:public
fdwd	tinyssh/tinyssh/tinysshd.c	/^static int fdwd;$/;"	v	file:
fe	tinyssh/crypto/fe.h	/^typedef crypto_uint32 fe[8];$/;"	t
fe25519_add	tinyssh/crypto/fe25519.c	/^void fe25519_add(fe o, const fe x, const fe y) {$/;"	f	signature:(fe o, const fe x, const fe y)
fe25519_add	tinyssh/crypto/fe25519.h	/^extern void fe25519_add(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fe25519_frombytes	tinyssh/crypto/fe25519.c	/^void fe25519_frombytes(fe out, const unsigned char *in) {$/;"	f	signature:(fe out, const unsigned char *in)
fe25519_frombytes	tinyssh/crypto/fe25519.h	/^extern void fe25519_frombytes(fe, const unsigned char *);$/;"	p	signature:(fe, const unsigned char *)
fe25519_inv	tinyssh/crypto/fe25519.c	/^void fe25519_inv(fe o, const fe z) {$/;"	f	signature:(fe o, const fe z)
fe25519_inv	tinyssh/crypto/fe25519.h	/^extern void fe25519_inv(fe, const fe);$/;"	p	signature:(fe, const fe)
fe25519_isnegative	tinyssh/crypto/fe25519.c	/^int fe25519_isnegative(const fe f) {$/;"	f	signature:(const fe f)
fe25519_isnegative	tinyssh/crypto/fe25519.h	/^extern int fe25519_isnegative(const fe);$/;"	p	signature:(const fe)
fe25519_isnonzero	tinyssh/crypto/fe25519.c	/^int fe25519_isnonzero(const fe f) {$/;"	f	signature:(const fe f)
fe25519_isnonzero	tinyssh/crypto/fe25519.h	/^extern int fe25519_isnonzero(const fe);$/;"	p	signature:(const fe)
fe25519_mul	tinyssh/crypto/fe25519.c	/^void fe25519_mul(fe o, const fe a, const fe b) {$/;"	f	signature:(fe o, const fe a, const fe b)
fe25519_mul	tinyssh/crypto/fe25519.h	/^extern void fe25519_mul(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fe25519_mul121666	tinyssh/crypto/fe25519.c	/^void fe25519_mul121666(fe o, const fe f) {$/;"	f	signature:(fe o, const fe f)
fe25519_mul121666	tinyssh/crypto/fe25519.h	/^extern void fe25519_mul121666(fe, const fe);$/;"	p	signature:(fe, const fe)
fe25519_neg	tinyssh/crypto/fe25519.c	/^void fe25519_neg(fe o, const fe x) {$/;"	f	signature:(fe o, const fe x)
fe25519_neg	tinyssh/crypto/fe25519.h	/^extern void fe25519_neg(fe, const fe);$/;"	p	signature:(fe, const fe)
fe25519_pow22523	tinyssh/crypto/fe25519.c	/^void fe25519_pow22523(fe out, const fe z) {$/;"	f	signature:(fe out, const fe z)
fe25519_pow22523	tinyssh/crypto/fe25519.h	/^extern void fe25519_pow22523(fe, const fe);$/;"	p	signature:(fe, const fe)
fe25519_reducebig	tinyssh/crypto/fe25519.c	/^static void fe25519_reducebig(fe o, fel t) {$/;"	f	file:	signature:(fe o, fel t)
fe25519_sq	tinyssh/crypto/fe25519.c	/^void fe25519_sq(fe o, const fe a) {$/;"	f	signature:(fe o, const fe a)
fe25519_sq	tinyssh/crypto/fe25519.h	/^extern void fe25519_sq(fe, const fe);$/;"	p	signature:(fe, const fe)
fe25519_sub	tinyssh/crypto/fe25519.c	/^void fe25519_sub(fe o, const fe x, const fe y) {$/;"	f	signature:(fe o, const fe x, const fe y)
fe25519_sub	tinyssh/crypto/fe25519.h	/^extern void fe25519_sub(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fe25519_tobytes	tinyssh/crypto/fe25519.c	/^void fe25519_tobytes(unsigned char *out, const fe in) {$/;"	f	signature:(unsigned char *out, const fe in)
fe25519_tobytes	tinyssh/crypto/fe25519.h	/^extern void fe25519_tobytes(unsigned char *, const fe);$/;"	p	signature:(unsigned char *, const fe)
fe_0	tinyssh/crypto/fe.c	/^void fe_0(fe o) {$/;"	f	signature:(fe o)
fe_0	tinyssh/crypto/fe.h	/^extern void fe_0(fe);$/;"	p	signature:(fe)
fe_1	tinyssh/crypto/fe.c	/^void fe_1(fe o) {$/;"	f	signature:(fe o)
fe_1	tinyssh/crypto/fe.h	/^extern void fe_1(fe);$/;"	p	signature:(fe)
fe_cmov	tinyssh/crypto/fe.c	/^void fe_cmov(fe f, const fe g, crypto_uint32 b) {$/;"	f	signature:(fe f, const fe g, crypto_uint32 b)
fe_cmov	tinyssh/crypto/fe.h	/^extern void fe_cmov(fe, const fe, crypto_uint32);$/;"	p	signature:(fe, const fe, crypto_uint32)
fe_copy	tinyssh/crypto/fe.c	/^void fe_copy(fe o, const fe x) {$/;"	f	signature:(fe o, const fe x)
fe_copy	tinyssh/crypto/fe.h	/^extern void fe_copy(fe, const fe);$/;"	p	signature:(fe, const fe)
fe_cswap	tinyssh/crypto/fe.c	/^void fe_cswap(fe f, fe g, crypto_uint32 b) {$/;"	f	signature:(fe f, fe g, crypto_uint32 b)
fe_cswap	tinyssh/crypto/fe.h	/^extern void fe_cswap(fe, fe, crypto_uint32);$/;"	p	signature:(fe, fe, crypto_uint32)
fe_iszero2	tinyssh/crypto/fe.c	/^int fe_iszero2(const fe f, const fe g) {$/;"	f	signature:(const fe f, const fe g)
fe_iszero2	tinyssh/crypto/fe.h	/^extern int fe_iszero2(const fe, const fe);$/;"	p	signature:(const fe, const fe)
fe_iszero3	tinyssh/crypto/fe.c	/^int fe_iszero3(const fe f, const fe g, const fe h) {$/;"	f	signature:(const fe f, const fe g, const fe h)
fe_iszero3	tinyssh/crypto/fe.h	/^extern int fe_iszero3(const fe, const fe, const fe);$/;"	p	signature:(const fe, const fe, const fe)
fe_mul_	tinyssh/crypto/fe.c	/^void fe_mul_(fel o, const fe a, const fe b) {$/;"	f	signature:(fel o, const fe a, const fe b)
fe_mul_	tinyssh/crypto/fe.h	/^extern void fe_mul_(fel, const fe, const fe);$/;"	p	signature:(fel, const fe, const fe)
fe_reducesmall	tinyssh/crypto/fe.c	/^void fe_reducesmall(fe r, const fe p, const crypto_uint64 carry) {$/;"	f	signature:(fe r, const fe p, const crypto_uint64 carry)
fe_reducesmall	tinyssh/crypto/fe.h	/^extern void fe_reducesmall(fe, const fe, const crypto_uint64);$/;"	p	signature:(fe, const fe, const crypto_uint64)
fe_sq_	tinyssh/crypto/fe.c	/^void fe_sq_(fel o, const fe a) {$/;"	f	signature:(fel o, const fe a)
fe_sq_	tinyssh/crypto/fe.h	/^extern void fe_sq_(fel, const fe);$/;"	p	signature:(fel, const fe)
fel	tinyssh/crypto/fe.h	/^typedef crypto_uint64 fel[16];$/;"	t
fep256_add	tinyssh/crypto/fep256.c	/^void fep256_add(fe o, const fe x, const fe y) {$/;"	f	signature:(fe o, const fe x, const fe y)
fep256_add	tinyssh/crypto/fep256.h	/^extern void fep256_add(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fep256_frombytes	tinyssh/crypto/fep256.c	/^void fep256_frombytes(fe out, const unsigned char *in) {$/;"	f	signature:(fe out, const unsigned char *in)
fep256_frombytes	tinyssh/crypto/fep256.h	/^extern void fep256_frombytes(fe, const unsigned char *);$/;"	p	signature:(fe, const unsigned char *)
fep256_inv	tinyssh/crypto/fep256.c	/^void fep256_inv(fe out, const fe in) {$/;"	f	signature:(fe out, const fe in)
fep256_inv	tinyssh/crypto/fep256.h	/^extern void fep256_inv(fe, const fe);$/;"	p	signature:(fe, const fe)
fep256_isnonzero	tinyssh/crypto/fep256.c	/^int fep256_isnonzero(const fe f) {$/;"	f	signature:(const fe f)
fep256_isnonzero	tinyssh/crypto/fep256.h	/^extern int fep256_isnonzero(const fe);$/;"	p	signature:(const fe)
fep256_mul	tinyssh/crypto/fep256.c	/^void fep256_mul(fe o, const fe a, const fe b) {$/;"	f	signature:(fe o, const fe a, const fe b)
fep256_mul	tinyssh/crypto/fep256.h	/^extern void fep256_mul(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fep256_mul2	tinyssh/crypto/fep256.c	/^void fep256_mul2(fe o, const fe x) {$/;"	f	signature:(fe o, const fe x)
fep256_mul2	tinyssh/crypto/fep256.h	/^extern void fep256_mul2(fe, const fe);$/;"	p	signature:(fe, const fe)
fep256_mul3	tinyssh/crypto/fep256.h	10;"	d
fep256_mul6	tinyssh/crypto/fep256.h	11;"	d
fep256_mulx_	tinyssh/crypto/fep256.c	/^void fep256_mulx_(fe o, const fe x, const crypto_uint64 y) {$/;"	f	signature:(fe o, const fe x, const crypto_uint64 y)
fep256_mulx_	tinyssh/crypto/fep256.h	/^extern void fep256_mulx_(fe, const fe, const crypto_uint64);$/;"	p	signature:(fe, const fe, const crypto_uint64)
fep256_neg	tinyssh/crypto/fep256.c	/^void fep256_neg(fe o, const fe x) {$/;"	f	signature:(fe o, const fe x)
fep256_neg	tinyssh/crypto/fep256.h	/^extern void fep256_neg(fe, const fe);$/;"	p	signature:(fe, const fe)
fep256_reduce	tinyssh/crypto/fep256.c	/^static void fep256_reduce(fe o, crypto_uint64 t[9]) {$/;"	f	file:	signature:(fe o, crypto_uint64 t[9])
fep256_reducebig	tinyssh/crypto/fep256.c	/^static void fep256_reducebig(fe o, fel t) {$/;"	f	file:	signature:(fe o, fel t)
fep256_sq	tinyssh/crypto/fep256.c	/^void fep256_sq(fe o, const fe a) {$/;"	f	signature:(fe o, const fe a)
fep256_sq	tinyssh/crypto/fep256.h	/^extern void fep256_sq(fe, const fe);$/;"	p	signature:(fe, const fe)
fep256_sub	tinyssh/crypto/fep256.c	/^void fep256_sub(fe o, const fe x, const fe y) {$/;"	f	signature:(fe o, const fe x, const fe y)
fep256_sub	tinyssh/crypto/fep256.h	/^extern void fep256_sub(fe, const fe, const fe);$/;"	p	signature:(fe, const fe, const fe)
fep256_tobytes	tinyssh/crypto/fep256.c	/^void fep256_tobytes(unsigned char *out, const fe in) {$/;"	f	signature:(unsigned char *out, const fe in)
fep256_tobytes	tinyssh/crypto/fep256.h	/^extern void fep256_tobytes(unsigned char *, const fe);$/;"	p	signature:(unsigned char *, const fe)
findnameandkey	tinyssh/tinyssh/subprocess_auth.c	/^static int findnameandkey(const char *keyname, const char *key, char *x) {$/;"	f	file:	signature:(const char *keyname, const char *key, char *x)
flagauthorized	tinyssh/packet.h	/^    int flagauthorized;$/;"	m	struct:packet	access:public
flagauthorized	tinyssh/tinyssh/packet.h	/^    int flagauthorized;$/;"	m	struct:packet	access:public
flagchanneleofreceived	tinyssh/packet.h	/^    int flagchanneleofreceived;$/;"	m	struct:packet	access:public
flagchanneleofreceived	tinyssh/tinyssh/packet.h	/^    int flagchanneleofreceived;$/;"	m	struct:packet	access:public
flagclosesent	tinyssh/packet.h	/^    int flagclosesent;$/;"	m	struct:packet	access:public
flagclosesent	tinyssh/tinyssh/packet.h	/^    int flagclosesent;$/;"	m	struct:packet	access:public
flagenabled	process.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_cipher	access:public
flagenabled	process.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_kex	access:public
flagenabled	tinyssh/tinyssh/sshcrypto.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_cipher	access:public
flagenabled	tinyssh/tinyssh/sshcrypto.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_kex	access:public
flageofsent	tinyssh/packet.h	/^    int flageofsent;$/;"	m	struct:packet	access:public
flageofsent	tinyssh/tinyssh/packet.h	/^    int flageofsent;$/;"	m	struct:packet	access:public
flagkeys	tinyssh/packet.h	/^    int flagkeys;$/;"	m	struct:packet	access:public
flagkeys	tinyssh/tinyssh/packet.h	/^    int flagkeys;$/;"	m	struct:packet	access:public
flaglogger	tinyssh/tinyssh/tinysshd.c	/^static int flaglogger = 0;$/;"	v	file:
flagrekeying	tinyssh/packet.h	/^    int flagrekeying;$/;"	m	struct:packet	access:public
flagrekeying	tinyssh/tinyssh/packet.h	/^    int flagrekeying;$/;"	m	struct:packet	access:public
flagterminal	tinyssh/tinyssh/channel.h	/^    int flagterminal;$/;"	m	struct:channel	access:public
flagverbose	tinyssh/tinyssh/tinysshd-makekey.c	/^static int flagverbose = 1;$/;"	v	file:
flagverbose	tinyssh/tinyssh/tinysshd.c	/^static int flagverbose = 1;$/;"	v	file:
flush	tinyssh/tinyssh/log.c	/^static void flush(void) {$/;"	f	file:	signature:(void)
ge25519	tinyssh/crypto/ge25519.h	/^typedef fe ge25519[4];          \/* X, Y, Z, T *\/$/;"	t
ge25519_add	tinyssh/crypto/ge25519.c	/^void ge25519_add(ge25519 o, ge25519 p, ge25519 q) {$/;"	f	signature:(ge25519 o, ge25519 p, ge25519 q)
ge25519_add	tinyssh/crypto/ge25519.h	/^extern void ge25519_add(ge25519, ge25519, ge25519);$/;"	p	signature:(ge25519, ge25519, ge25519)
ge25519_frombytes_negate_vartime	tinyssh/crypto/ge25519.c	/^int ge25519_frombytes_negate_vartime(ge25519 h, const unsigned char *s) {$/;"	f	signature:(ge25519 h, const unsigned char *s)
ge25519_frombytes_negate_vartime	tinyssh/crypto/ge25519.h	/^extern int ge25519_frombytes_negate_vartime(ge25519, const unsigned char *);$/;"	p	signature:(ge25519, const unsigned char *)
ge25519_precomp	tinyssh/crypto/ge25519.h	/^typedef fe ge25519_precomp[3];  \/* Y+X, Y-X, 2*d*X*Y *\/$/;"	t
ge25519_scalarmult	tinyssh/crypto/ge25519.c	/^void ge25519_scalarmult(ge25519 o, ge25519 q, const unsigned char *a) {$/;"	f	signature:(ge25519 o, ge25519 q, const unsigned char *a)
ge25519_scalarmult	tinyssh/crypto/ge25519.h	/^extern void ge25519_scalarmult(ge25519, ge25519, const unsigned char *);$/;"	p	signature:(ge25519, ge25519, const unsigned char *)
ge25519_scalarmult_base	tinyssh/crypto/ge25519.c	/^void ge25519_scalarmult_base(ge25519 p, const unsigned char *a) {$/;"	f	signature:(ge25519 p, const unsigned char *a)
ge25519_scalarmult_base	tinyssh/crypto/ge25519.h	/^extern void ge25519_scalarmult_base(ge25519, const unsigned char *);$/;"	p	signature:(ge25519, const unsigned char *)
ge25519_tobytes	tinyssh/crypto/ge25519.c	/^void ge25519_tobytes(unsigned char *s, ge25519 h) {$/;"	f	signature:(unsigned char *s, ge25519 h)
ge25519_tobytes	tinyssh/crypto/ge25519.h	/^extern void ge25519_tobytes(unsigned char *, ge25519);$/;"	p	signature:(unsigned char *, ge25519)
gep256	tinyssh/crypto/gep256.h	/^typedef fe gep256[3];           \/* X, Y, Z *\/$/;"	t
gep256_add	tinyssh/crypto/gep256.c	/^void gep256_add(gep256 out, gep256 p, gep256 q) {$/;"	f	signature:(gep256 out, gep256 p, gep256 q)
gep256_add	tinyssh/crypto/gep256.h	/^extern void gep256_add(gep256, gep256, gep256);$/;"	p	signature:(gep256, gep256, gep256)
gep256_frombytes	tinyssh/crypto/gep256.c	/^int gep256_frombytes(gep256 out, const unsigned char *in) {$/;"	f	signature:(gep256 out, const unsigned char *in)
gep256_frombytes	tinyssh/crypto/gep256.h	/^extern int gep256_frombytes(gep256, const unsigned char *);$/;"	p	signature:(gep256, const unsigned char *)
gep256_precomp	tinyssh/crypto/gep256.h	/^typedef fe gep256_precomp[2];   \/* X, Y    *\/$/;"	t
gep256_scalarmult	tinyssh/crypto/gep256.c	/^void gep256_scalarmult(gep256 o, gep256 q, const unsigned char *a) {$/;"	f	signature:(gep256 o, gep256 q, const unsigned char *a)
gep256_scalarmult	tinyssh/crypto/gep256.h	/^extern void gep256_scalarmult(gep256, gep256, const unsigned char *);$/;"	p	signature:(gep256, gep256, const unsigned char *)
gep256_scalarmult_base	tinyssh/crypto/gep256.c	/^void gep256_scalarmult_base(gep256 p, const unsigned char *a) {$/;"	f	signature:(gep256 p, const unsigned char *a)
gep256_scalarmult_base	tinyssh/crypto/gep256.h	/^extern void gep256_scalarmult_base(gep256, const unsigned char *);$/;"	p	signature:(gep256, const unsigned char *)
gep256_tobytes	tinyssh/crypto/gep256.c	/^int gep256_tobytes(unsigned char *out, gep256 in) {$/;"	f	signature:(unsigned char *out, gep256 in)
gep256_tobytes	tinyssh/crypto/gep256.h	/^extern int gep256_tobytes(unsigned char *, gep256);$/;"	p	signature:(unsigned char *, gep256)
getch	tinyssh/tinyssh/getln.c	/^static int getch(int fd, char *x) {$/;"	f	file:	signature:(int fd, char *x)
getln	packet.cpp	/^int getln(int sockfd, void *xv, long long xmax)$/;"	f	signature:(int sockfd, void *xv, long long xmax)
getln	packet.h	/^        int getln(int sockfd, void *xv, long long xmax);$/;"	p	class:Packet	access:public	signature:(int sockfd, void *xv, long long xmax)
getln	tinyssh/tinyssh/getln.c	/^int getln(int fd, void *xv, long long xmax) {$/;"	f	signature:(int fd, void *xv, long long xmax)
getln	tinyssh/tinyssh/getln.h	/^extern int getln(int, void *, long long);$/;"	p	signature:(int, void *, long long)
global_bspace1	tinyssh/tinyssh/global.c	/^unsigned char global_bspace1[GLOBAL_BSIZE];$/;"	v
global_bspace2	tinyssh/tinyssh/global.c	/^unsigned char global_bspace2[GLOBAL_BSIZE];$/;"	v
global_die	tinyssh/tinyssh/global.c	/^void global_die(int x) {$/;"	f	signature:(int x)
global_die	tinyssh/tinyssh/global.h	/^extern void global_die(int);$/;"	p	signature:(int)
global_init	tinyssh/tinyssh/global.c	/^void global_init(void) {$/;"	f	signature:(void)
global_init	tinyssh/tinyssh/global.h	/^extern void global_init(void);$/;"	p	signature:(void)
global_purge	tinyssh/tinyssh/global.c	/^void global_purge(void) {$/;"	f	signature:(void)
global_purge	tinyssh/tinyssh/global.h	/^extern void global_purge(void);$/;"	p	signature:(void)
gmul2	tinyssh/crypto/aes.c	/^static unsigned char gmul2(unsigned char a) {$/;"	f	file:	signature:(unsigned char a)
grantpt	tinyssh/tinyssh/channel_forkpty.c	/^extern int grantpt(int);$/;"	p	file:	signature:(int)
hash	packet.h	/^        unsigned char hash[sshcrypto_hash_MAX];$/;"	m	class:Packet	access:private
hash	process.h	/^    int (*hash)(unsigned char *, const unsigned char *, unsigned long long);$/;"	m	struct:sshcrypto_kex	access:public
hash	tinyssh/tinyssh/sshcrypto.h	/^    int (*hash)(unsigned char *, const unsigned char *, unsigned long long);$/;"	m	struct:sshcrypto_kex	access:public
hash_bytes	process.h	/^    long long hash_bytes;$/;"	m	struct:sshcrypto_kex	access:public
hash_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long hash_bytes;$/;"	m	struct:sshcrypto_kex	access:public
hashbuf	tinyssh/packet.h	/^    struct buf hashbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
hashbuf	tinyssh/tinyssh/packet.h	/^    struct buf hashbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
hashbufspace	tinyssh/packet.h	/^    unsigned char hashbufspace[65536];$/;"	m	struct:packet	access:public
hashbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char hashbufspace[65536];$/;"	m	struct:packet	access:public
helloreceive	tinyssh/packet.h	/^    struct buf helloreceive;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
helloreceive	tinyssh/tinyssh/packet.h	/^    struct buf helloreceive;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
helloreceivespace	tinyssh/packet.h	/^    unsigned char helloreceivespace[256];$/;"	m	struct:packet	access:public
helloreceivespace	tinyssh/tinyssh/packet.h	/^    unsigned char helloreceivespace[256];$/;"	m	struct:packet	access:public
hellosend	tinyssh/packet.h	/^    struct buf hellosend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
hellosend	tinyssh/tinyssh/packet.h	/^    struct buf hellosend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
hellosendspace	tinyssh/packet.h	/^    unsigned char hellosendspace[256];$/;"	m	struct:packet	access:public
hellosendspace	tinyssh/tinyssh/packet.h	/^    unsigned char hellosendspace[256];$/;"	m	struct:packet	access:public
id	tinyssh/tinyssh/channel.h	/^    crypto_uint32 id;$/;"	m	struct:channel	access:public
inv	tinyssh/crypto/ge25519.base.py	/^def inv(x):$/;"	f	access:public
inv	tinyssh/crypto/gep256.base.py	/^def inv(x):$/;"	f	access:public
iptostr	tinyssh/tinyssh/iptostr.c	/^char *iptostr(char *strbuf, const unsigned char *ip) {$/;"	f	signature:(char *strbuf, const unsigned char *ip)
iptostr	tinyssh/tinyssh/iptostr.h	/^extern char *iptostr(char *, const unsigned char *);$/;"	p	signature:(char *, const unsigned char *)
iptostr4	tinyssh/tinyssh/iptostr.c	/^static char *iptostr4(char *, const unsigned char *);$/;"	p	file:	signature:(char *, const unsigned char *)
iptostr4	tinyssh/tinyssh/iptostr.c	/^static char *iptostr4(char *strbuf, const unsigned char *ip) {$/;"	f	file:	signature:(char *strbuf, const unsigned char *ip)
iptostr6	tinyssh/tinyssh/iptostr.c	/^static char *iptostr6(char *, const unsigned char *);$/;"	p	file:	signature:(char *, const unsigned char *)
iptostr6	tinyssh/tinyssh/iptostr.c	/^static char *iptostr6(char *strbuf, const unsigned char *ip) {$/;"	f	file:	signature:(char *strbuf, const unsigned char *ip)
isnegative	tinyssh/crypto/ge25519.c	/^static unsigned char isnegative(signed char b) {$/;"	f	file:	signature:(signed char b)
isnegative	tinyssh/crypto/gep256.c	/^static unsigned char isnegative(signed char b) {$/;"	f	file:	signature:(signed char b)
isneutral	tinyssh/crypto/gep256.c	/^static int isneutral(gep256 p) {$/;"	f	file:	signature:(gep256 p)
isneutral_precomp	tinyssh/crypto/gep256.c	/^static int isneutral_precomp(gep256_precomp p) {$/;"	f	file:	signature:(gep256_precomp p)
iv	tinyssh/crypto/sha256.c	/^static crypto_uint32 iv[8] = {$/;"	v	file:
kex_guess	tinyssh/packet.h	/^    crypto_uint8 kex_guess;$/;"	m	struct:packet	access:public
kex_guess	tinyssh/tinyssh/packet.h	/^    crypto_uint8 kex_guess;$/;"	m	struct:packet	access:public
kex_packet_follows	tinyssh/packet.h	/^    crypto_uint8 kex_packet_follows;$/;"	m	struct:packet	access:public
kex_packet_follows	tinyssh/tinyssh/packet.h	/^    crypto_uint8 kex_packet_follows;$/;"	m	struct:packet	access:public
kexrecv	tinyssh/packet.h	/^    struct buf kexrecv;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
kexrecv	tinyssh/tinyssh/packet.h	/^    struct buf kexrecv;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
kexrecvspace	tinyssh/packet.h	/^    unsigned char kexrecvspace[65536];$/;"	m	struct:packet	access:public
kexrecvspace	tinyssh/tinyssh/packet.h	/^    unsigned char kexrecvspace[65536];$/;"	m	struct:packet	access:public
kexsend	tinyssh/packet.h	/^    struct buf kexsend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
kexsend	tinyssh/tinyssh/packet.h	/^    struct buf kexsend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
kexsendspace	tinyssh/packet.h	/^    unsigned char kexsendspace[1024];$/;"	m	struct:packet	access:public
kexsendspace	tinyssh/tinyssh/packet.h	/^    unsigned char kexsendspace[1024];$/;"	m	struct:packet	access:public
key	packet.h	/^        unsigned char key[sshcrypto_cipher_KEYMAX];$/;"	m	class:Packet	access:private
l	tinyssh/crypto/ge25519.base.py	/^l = 2**252 + 27742317777372353535851937790883648493$/;"	v
len	packet.h	/^    long long len;$/;"	m	struct:buf	access:public
len	tinyssh/buf.h	/^    long long len;$/;"	m	struct:buf	access:public
len	tinyssh/tinyssh/buf.h	/^    long long len;$/;"	m	struct:buf	access:public
len0	tinyssh/tinyssh/channel.h	/^    long long len0;$/;"	m	struct:channel	access:public
load	tinyssh/tinyssh/load.c	/^int load(const char *fn,void *x,long long xlen)$/;"	f	signature:(const char *fn,void *x,long long xlen)
load	tinyssh/tinyssh/load.h	/^extern int load(const char *,void *,long long);$/;"	p	signature:(const char *,void *,long long)
load32_bigendian	tinyssh/crypto/sha256.c	/^static crypto_uint32 load32_bigendian(const unsigned char *x) {$/;"	f	file:	signature:(const unsigned char *x)
load64_bigendian	tinyssh/crypto/sha512.c	/^static crypto_uint64 load64_bigendian(const unsigned char *x) {$/;"	f	file:	signature:(const unsigned char *x)
localip	tinyssh/tinyssh/channel.h	/^    char localip[IPTOSTR_LEN];$/;"	m	struct:channel	access:public
localport	tinyssh/tinyssh/channel.h	/^    char localport[PORTTOSTR_LEN];$/;"	m	struct:channel	access:public
localwindow	tinyssh/tinyssh/channel.h	/^    crypto_uint32 localwindow;$/;"	m	struct:channel	access:public
log_9_	tinyssh/tinyssh/log.c	/^void log_9_($/;"	f	signature:( int level ,int ignoreerrno ,const char *f ,unsigned long long l ,const char *s0 ,const char *s1 ,const char *s2 ,const char *s3 ,const char *s4 ,const char *s5 ,const char *s6 ,const char *s7 ,const char *s8 )
log_9_	tinyssh/tinyssh/log.h	/^extern void log_9_($/;"	p	signature:( int, int, const char *, unsigned long long, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *)
log_d1	tinyssh/tinyssh/log.h	75;"	d
log_d2	tinyssh/tinyssh/log.h	74;"	d
log_d3	tinyssh/tinyssh/log.h	73;"	d
log_d4	tinyssh/tinyssh/log.h	72;"	d
log_d5	tinyssh/tinyssh/log.h	71;"	d
log_d6	tinyssh/tinyssh/log.h	70;"	d
log_d7	tinyssh/tinyssh/log.h	69;"	d
log_d8	tinyssh/tinyssh/log.h	68;"	d
log_d9	tinyssh/tinyssh/log.h	67;"	d
log_f1	tinyssh/tinyssh/log.h	42;"	d
log_f2	tinyssh/tinyssh/log.h	41;"	d
log_f3	tinyssh/tinyssh/log.h	40;"	d
log_f4	tinyssh/tinyssh/log.h	39;"	d
log_f5	tinyssh/tinyssh/log.h	38;"	d
log_f6	tinyssh/tinyssh/log.h	37;"	d
log_f7	tinyssh/tinyssh/log.h	36;"	d
log_f8	tinyssh/tinyssh/log.h	35;"	d
log_f9	tinyssh/tinyssh/log.h	34;"	d
log_i1	tinyssh/tinyssh/log.h	64;"	d
log_i2	tinyssh/tinyssh/log.h	63;"	d
log_i3	tinyssh/tinyssh/log.h	62;"	d
log_i4	tinyssh/tinyssh/log.h	61;"	d
log_i5	tinyssh/tinyssh/log.h	60;"	d
log_i6	tinyssh/tinyssh/log.h	59;"	d
log_i7	tinyssh/tinyssh/log.h	58;"	d
log_i8	tinyssh/tinyssh/log.h	57;"	d
log_i9	tinyssh/tinyssh/log.h	56;"	d
log_init	tinyssh/tinyssh/log.c	/^void log_init(int level, const char *text, int line, int flagsyslog) {$/;"	f	signature:(int level, const char *text, int line, int flagsyslog)
log_init	tinyssh/tinyssh/log.h	/^extern void log_init(int, const char *, int, int);$/;"	p	signature:(int, const char *, int, int)
log_string	tinyssh/tinyssh/log.c	/^char *log_string(void) {$/;"	f	signature:(void)
log_string	tinyssh/tinyssh/log.h	/^extern char *log_string(void);$/;"	p	signature:(void)
log_u1	tinyssh/tinyssh/log.h	31;"	d
log_u2	tinyssh/tinyssh/log.h	30;"	d
log_u3	tinyssh/tinyssh/log.h	29;"	d
log_u4	tinyssh/tinyssh/log.h	28;"	d
log_u5	tinyssh/tinyssh/log.h	27;"	d
log_u6	tinyssh/tinyssh/log.h	26;"	d
log_u7	tinyssh/tinyssh/log.h	25;"	d
log_u8	tinyssh/tinyssh/log.h	24;"	d
log_u9	tinyssh/tinyssh/log.h	23;"	d
log_w1	tinyssh/tinyssh/log.h	53;"	d
log_w2	tinyssh/tinyssh/log.h	52;"	d
log_w3	tinyssh/tinyssh/log.h	51;"	d
log_w4	tinyssh/tinyssh/log.h	50;"	d
log_w5	tinyssh/tinyssh/log.h	49;"	d
log_w6	tinyssh/tinyssh/log.h	48;"	d
log_w7	tinyssh/tinyssh/log.h	47;"	d
log_w8	tinyssh/tinyssh/log.h	46;"	d
log_w9	tinyssh/tinyssh/log.h	45;"	d
logflagfnln	tinyssh/tinyssh/log.c	/^static int logflagfnln = 1;$/;"	v	file:
logflagsyslog	tinyssh/tinyssh/log.c	/^static int logflagsyslog = 0;$/;"	v	file:
login_tty	tinyssh/tinyssh/channel_forkpty.c	/^extern int login_tty(int);$/;"	p	file:	signature:(int)
loginshell	tinyssh/tinyssh/loginshell.c	/^int loginshell(char *out, long long outlen, const char *in) {$/;"	f	signature:(char *out, long long outlen, const char *in)
loginshell	tinyssh/tinyssh/loginshell.h	/^extern int loginshell(char *, long long, const char *);$/;"	p	signature:(char *, long long, const char *)
loglevel	tinyssh/tinyssh/log.c	/^static int loglevel = 1;$/;"	v	file:
logstring	tinyssh/tinyssh/log.c	/^static char logstring[9] = "________";$/;"	v	file:
logsys_login	tinyssh/tinyssh/logsys.c	/^void logsys_login(const char *user, const char *host, const char *name, long long pid) {$/;"	f	signature:(const char *user, const char *host, const char *name, long long pid)
logsys_login	tinyssh/tinyssh/logsys.h	/^void logsys_login(const char *, const char *, const char *, long long);$/;"	p	signature:(const char *, const char *, const char *, long long)
logsys_logout	tinyssh/tinyssh/logsys.c	/^void logsys_logout(const char *user, const char *host, const char *name, long long pid) {$/;"	f	signature:(const char *user, const char *host, const char *name, long long pid)
logsys_logout	tinyssh/tinyssh/logsys.h	/^void logsys_logout(const char *, const char *, const char *, long long);$/;"	p	signature:(const char *, const char *, const char *, long long)
logsys_utmp	tinyssh/tinyssh/logsys.c	/^static void logsys_utmp(const char *user, const char *host, const char *name, long long pid, int flaglogin) {$/;"	f	file:	signature:(const char *user, const char *host, const char *name, long long pid, int flaglogin)
logsys_utmpx	tinyssh/tinyssh/logsys.c	/^static void logsys_utmpx(const char *user, const char *host, const char *name, long long pid, int flaglogin) {$/;"	f	file:	signature:(const char *user, const char *host, const char *name, long long pid, int flaglogin)
logtext	tinyssh/tinyssh/log.c	/^static const char *logtext = "x";$/;"	v	file:
m	tinyssh/crypto/scp256.c	/^static const fe m = {$/;"	v	file:
m2	tinyssh/crypto/scp256.c	/^static const unsigned char m2[32] = {$/;"	v	file:
m_buffer_downstream	process.h	/^        char m_buffer_downstream[MAX_BUFFER_SIZE];$/;"	m	class:ProcessGenerator	access:private
m_buffer_upstream	process.h	/^        char m_buffer_upstream[MAX_BUFFER_SIZE];$/;"	m	class:ProcessGenerator	access:private
m_channelready	process.h	/^        ENUM_EXEC_STEP m_channelready;$/;"	m	class:ProcessGenerator	access:private
m_downstream_flag	process.h	/^        bool m_downstream_flag;$/;"	m	class:ProcessGenerator	access:private
m_epollfd	process.h	/^        int m_epollfd;$/;"	m	class:ProcessGenerator	access:private
m_hashbuf	packet.h	/^        struct buf m_hashbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_hashbufspace	packet.h	/^        unsigned char m_hashbufspace[65536];$/;"	m	class:Packet	access:private
m_idx	process.h	/^        int m_idx;$/;"	m	class:ProcessGenerator	access:private
m_kexdhready	process.h	/^        ENUM_EXEC_STEP m_kexdhready;$/;"	m	class:ProcessGenerator	access:private
m_kexready	process.h	/^        ENUM_EXEC_STEP m_kexready;$/;"	m	class:ProcessGenerator	access:private
m_keyrecv	packet.h	/^        struct buf m_keyrecv;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_keyrecvspace	packet.h	/^        unsigned char m_keyrecvspace[65536];$/;"	m	class:Packet	access:private
m_keysend	packet.h	/^        struct buf m_keysend;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_keysendspace	packet.h	/^        unsigned char m_keysendspace[1024];$/;"	m	class:Packet	access:private
m_packet_length	packet.h	/^        crypto_uint32 m_packet_length;$/;"	m	class:Packet	access:private
m_pid	process.h	/^        pid_t m_pid;$/;"	m	class:Process	access:public
m_pipefd	process.h	/^        int m_pipefd[2];$/;"	m	class:Process	access:public
m_pos	process.h	/^        int m_pos;$/;"	m	class:Process	access:public
m_process	process.h	/^        Process *m_process;$/;"	m	class:ProcessGenerator	access:private
m_read_downstream_idx	process.h	/^        int m_read_downstream_idx;$/;"	m	class:ProcessGenerator	access:private
m_read_downstream_len	process.h	/^        int m_read_downstream_len;$/;"	m	class:ProcessGenerator	access:private
m_read_upstream_idx	process.h	/^        int m_read_upstream_idx;$/;"	m	class:ProcessGenerator	access:private
m_read_upstream_len	process.h	/^        int m_read_upstream_len;$/;"	m	class:ProcessGenerator	access:private
m_receivepacketid	packet.h	/^        crypto_uint32 m_receivepacketid;$/;"	m	class:Packet	access:private
m_recvbuf	packet.h	/^        struct buf m_recvbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_sendbuf	packet.h	/^        struct buf m_sendbuf;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_sendpacketid	packet.h	/^        crypto_uint32 m_sendpacketid;$/;"	m	class:Packet	access:private
m_sessionID	process.h	/^        int m_sessionID;$/;"	m	class:Process	access:public
m_sessionready	process.h	/^        ENUM_EXEC_STEP m_sessionready;$/;"	m	class:ProcessGenerator	access:private
m_sockfd_downstream	process.h	/^        int m_sockfd_downstream;$/;"	m	class:ProcessGenerator	access:private
m_sockfd_upstream	process.h	/^        int m_sockfd_upstream;$/;"	m	class:ProcessGenerator	access:private
m_stop	process.h	/^        bool m_stop;$/;"	m	class:ProcessGenerator	access:private
m_upstream_flag	process.h	/^        bool m_upstream_flag;$/;"	m	class:ProcessGenerator	access:private
m_used	process.h	/^        int m_used;$/;"	m	class:Process	access:public
m_versionready	process.h	/^        ENUM_EXEC_STEP m_versionready;$/;"	m	class:ProcessGenerator	access:private
m_versionreceive	packet.h	/^        struct buf m_versionreceive;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_versionreceivespace	packet.h	/^        unsigned char m_versionreceivespace[256];$/;"	m	class:Packet	access:private
m_versionsend	packet.h	/^        struct buf m_versionsend;$/;"	m	class:Packet	typeref:struct:Packet::buf	access:private
m_versionsendspace	packet.h	/^        unsigned char m_versionsendspace[256];$/;"	m	class:Packet	access:private
madd	tinyssh/crypto/ge25519.c	/^static void madd(ge25519 o, ge25519 p, ge25519_precomp q) {$/;"	f	file:	signature:(ge25519 o, ge25519 p, ge25519_precomp q)
madd	tinyssh/crypto/gep256.c	/^static void madd(gep256 out, gep256 p, gep256_precomp qp) {$/;"	f	file:	signature:(gep256 out, gep256 p, gep256_precomp qp)
main	main.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tinyssh/tinyssh/tinysshd-makekey.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	tinyssh/tinyssh/tinysshd-printkey.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	tinyssh/tinyssh/tinysshd.c	/^int main(int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
master	tinyssh/tinyssh/channel.h	/^    int master;$/;"	m	struct:channel	access:public
maxpacket	tinyssh/tinyssh/channel.h	/^    crypto_uint32 maxpacket;$/;"	m	struct:channel	access:public
ml	tinyssh/crypto/scp256.c	/^static const fe ml[8] = {$/;"	v	file:
modL	tinyssh/crypto/sc25519.c	/^static void modL(unsigned char *r,crypto_int64 x[64])$/;"	f	file:	signature:(unsigned char *r,crypto_int64 x[64])
n	tinyssh/tinyssh/newenv.c	/^} n = { {0}, 0, {0}, 0 };$/;"	v	typeref:struct:newenv	file:
name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_cipher	access:public
name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_kex	access:public
name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_key	access:public
name	tinyssh/packet.h	/^    char name[LOGIN_NAME_MAX + 1];$/;"	m	struct:packet	access:public
name	tinyssh/tinyssh/packet.h	/^    char name[LOGIN_NAME_MAX + 1];$/;"	m	struct:packet	access:public
name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_cipher	access:public
name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_kex	access:public
name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_key	access:public
neutral	tinyssh/crypto/ge25519.c	/^static void neutral(ge25519 p) {$/;"	f	file:	signature:(ge25519 p)
neutral	tinyssh/crypto/gep256.c	/^static void neutral(gep256 p) {$/;"	f	file:	signature:(gep256 p)
neutral_precomp	tinyssh/crypto/ge25519.c	/^static void neutral_precomp(ge25519_precomp p) {$/;"	f	file:	signature:(ge25519_precomp p)
neutral_precomp	tinyssh/crypto/gep256.c	/^static void neutral_precomp(gep256_precomp p) {$/;"	f	file:	signature:(gep256_precomp p)
newenv	tinyssh/tinyssh/newenv.c	/^static struct newenv {$/;"	s	file:
newenv::e	tinyssh/tinyssh/newenv.c	/^    char *e[NEWENV_LEN];$/;"	m	struct:newenv	file:	access:public
newenv::elen	tinyssh/tinyssh/newenv.c	/^    long long elen;$/;"	m	struct:newenv	file:	access:public
newenv::es	tinyssh/tinyssh/newenv.c	/^    char es[NEWENV_SPACE];$/;"	m	struct:newenv	file:	access:public
newenv::eslen	tinyssh/tinyssh/newenv.c	/^    long long eslen;$/;"	m	struct:newenv	file:	access:public
newenv_copyenv	tinyssh/tinyssh/newenv.c	/^int newenv_copyenv(const char *s) {$/;"	f	signature:(const char *s)
newenv_copyenv	tinyssh/tinyssh/newenv.h	/^extern int newenv_copyenv(const char *);$/;"	p	signature:(const char *)
newenv_env	tinyssh/tinyssh/newenv.h	6;"	d
newenv_env_	tinyssh/tinyssh/newenv.c	/^int newenv_env_(int x, const char *s, const char *t) {$/;"	f	signature:(int x, const char *s, const char *t)
newenv_env_	tinyssh/tinyssh/newenv.h	/^extern int newenv_env_(int, const char *, const char *);$/;"	p	signature:(int, const char *, const char *)
newenv_exec	tinyssh/tinyssh/newenv.c	/^void newenv_exec(char *filename, char **argv) {$/;"	f	signature:(char *filename, char **argv)
newenv_exec	tinyssh/tinyssh/newenv.h	/^extern void newenv_exec(char *, char **);$/;"	p	signature:(char *, char **)
newenv_init	tinyssh/tinyssh/newenv.c	/^void newenv_init(void) {$/;"	f	signature:(void)
newenv_init	tinyssh/tinyssh/newenv.h	/^extern void newenv_init(void);$/;"	p	signature:(void)
newenv_lowenv	tinyssh/tinyssh/newenv.h	7;"	d
newenv_purge	tinyssh/tinyssh/newenv.c	/^void newenv_purge(void) {$/;"	f	signature:(void)
newenv_purge	tinyssh/tinyssh/newenv.h	/^extern void newenv_purge(void);$/;"	p	signature:(void)
nistp256_dh	tinyssh/tinyssh/sshcrypto.h	/^extern int nistp256_dh(unsigned char *, unsigned char *, unsigned char *);$/;"	p	signature:(unsigned char *, unsigned char *, unsigned char *)
nistp256_dh	tinyssh/tinyssh/sshcrypto_kex_nistp256.c	/^int nistp256_dh(unsigned char *k, unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *k, unsigned char *pk, unsigned char *sk)
nistp256_keypair	tinyssh/tinyssh/sshcrypto.h	/^extern int nistp256_keypair(unsigned char *, unsigned char *);$/;"	p	signature:(unsigned char *, unsigned char *)
nistp256_keypair	tinyssh/tinyssh/sshcrypto_kex_nistp256.c	/^int nistp256_keypair(unsigned char *pk, unsigned char *sk) {$/;"	f	signature:(unsigned char *pk, unsigned char *sk)
nistp256_putdhpk	tinyssh/tinyssh/sshcrypto.h	/^extern void nistp256_putdhpk(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
nistp256_putdhpk	tinyssh/tinyssh/sshcrypto_kex_nistp256.c	/^void nistp256_putdhpk(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
nistp256_putsharedsecret	tinyssh/tinyssh/sshcrypto.h	/^extern void nistp256_putsharedsecret(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
nistp256_putsharedsecret	tinyssh/tinyssh/sshcrypto_kex_nistp256.c	/^void nistp256_putsharedsecret(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
nistp256ecdsa_parsesignature	tinyssh/tinyssh/sshcrypto.h	/^extern int nistp256ecdsa_parsesignature(unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, long long)
nistp256ecdsa_parsesignature	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^int nistp256ecdsa_parsesignature(unsigned char *buf, const unsigned char *x, long long xlen) {$/;"	f	signature:(unsigned char *buf, const unsigned char *x, long long xlen)
nistp256ecdsa_parsesignpk	tinyssh/tinyssh/sshcrypto.h	/^extern int nistp256ecdsa_parsesignpk(unsigned char *, const unsigned char *, long long);$/;"	p	signature:(unsigned char *, const unsigned char *, long long)
nistp256ecdsa_parsesignpk	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^int nistp256ecdsa_parsesignpk(unsigned char *buf, const unsigned char *x, long long xlen) {$/;"	f	signature:(unsigned char *buf, const unsigned char *x, long long xlen)
nistp256ecdsa_putsignature	tinyssh/tinyssh/sshcrypto.h	/^extern void nistp256ecdsa_putsignature(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
nistp256ecdsa_putsignature	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^void nistp256ecdsa_putsignature(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
nistp256ecdsa_putsignpk	tinyssh/tinyssh/sshcrypto.h	/^extern void nistp256ecdsa_putsignpk(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
nistp256ecdsa_putsignpk	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^void nistp256ecdsa_putsignpk(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
nistp256ecdsa_putsignpkbase64	tinyssh/tinyssh/sshcrypto.h	/^extern void nistp256ecdsa_putsignpkbase64(struct buf *, const unsigned char *);$/;"	p	signature:(struct buf *, const unsigned char *)
nistp256ecdsa_putsignpkbase64	tinyssh/tinyssh/sshcrypto_key_nistp256ecdsa.c	/^void nistp256ecdsa_putsignpkbase64(struct buf *b, const unsigned char *x) {$/;"	f	signature:(struct buf *b, const unsigned char *x)
numtostr	tinyssh/tinyssh/numtostr.c	/^char *numtostr(char *strbuf, long long n) {$/;"	f	signature:(char *strbuf, long long n)
numtostr	tinyssh/tinyssh/numtostr.h	/^extern char *numtostr(char *, long long);$/;"	p	signature:(char *, long long)
open_cwd	tinyssh/tinyssh/open.c	/^int open_cwd(void)$/;"	f	signature:(void)
open_cwd	tinyssh/tinyssh/open.h	/^extern int open_cwd(void);$/;"	p	signature:(void)
open_lock	tinyssh/tinyssh/open.h	/^extern int open_lock(const char *);$/;"	p	signature:(const char *)
open_pipe	tinyssh/tinyssh/open.c	/^int open_pipe(int *fd)$/;"	f	signature:(int *fd)
open_pipe	tinyssh/tinyssh/open.h	/^extern int open_pipe(int *);$/;"	p	signature:(int *)
open_read	tinyssh/tinyssh/open.c	/^int open_read(const char *fn)$/;"	f	signature:(const char *fn)
open_read	tinyssh/tinyssh/open.h	/^extern int open_read(const char *);$/;"	p	signature:(const char *)
open_write	tinyssh/tinyssh/open.c	/^int open_write(const char *fn)$/;"	f	signature:(const char *fn)
open_write	tinyssh/tinyssh/open.h	/^extern int open_write(const char *);$/;"	p	signature:(const char *)
openpty	tinyssh/tinyssh/channel_forkpty.c	/^extern int openpty(int *, int *, char *, struct termios *, struct winsize *);$/;"	p	file:	signature:(int *, int *, char *, struct termios *, struct winsize *)
or2	tinyssh/crypto/aes.c	/^static void or2(crypto_uint32 *r,   const crypto_uint32 *x) { *r |= *x; }$/;"	f	file:	signature:(crypto_uint32 *r, const crypto_uint32 *x)
outnum	tinyssh/tinyssh/log.c	/^static void outnum(unsigned long long n) {$/;"	f	file:	signature:(unsigned long long n)
outs	tinyssh/tinyssh/log.c	/^static void outs(const char *x) {$/;"	f	file:	signature:(const char *x)
p	tinyssh/crypto/fe25519.c	/^static const fe p = { $/;"	v	file:
p	tinyssh/crypto/fep256.c	/^static const fe p = {$/;"	v	file:
p	tinyssh/crypto/gep256.base.py	/^p = 2**256 - 2**224 + 2**192 + 2**96 - 1$/;"	v
p3	tinyssh/crypto/fe25519.c	/^static const crypto_uint64 p3[8] = { $/;"	v	file:
pack	tinyssh/crypto/crypto_onetimeauth_poly1305.c	/^static void pack(unsigned char *x, crypto_uint32 u) {$/;"	f	file:	signature:(unsigned char *x, crypto_uint32 u)
pack	tinyssh/crypto/crypto_onetimeauth_poly1305.c	15;"	d	file:
pack	tinyssh/crypto/crypto_stream_chacha20.c	/^static void pack(unsigned char *x, crypto_uint32 u) {$/;"	f	file:	signature:(unsigned char *x, crypto_uint32 u)
pack	tinyssh/crypto/crypto_stream_chacha20.c	13;"	d	file:
packet	process.h	/^        Packet packet;$/;"	m	class:ProcessGenerator	access:private
packet	tinyssh/packet.c	/^struct packet packet = {0};$/;"	v	typeref:struct:packet
packet	tinyssh/packet.h	/^struct packet {$/;"	s
packet	tinyssh/tinyssh/packet.c	/^struct packet packet = {0};$/;"	v	typeref:struct:packet
packet	tinyssh/tinyssh/packet.h	/^struct packet {$/;"	s
packet::clientkey	tinyssh/packet.h	/^    unsigned char clientkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::clientkey	tinyssh/tinyssh/packet.h	/^    unsigned char clientkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::clientmackey	tinyssh/packet.h	/^    unsigned char clientmackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::clientmackey	tinyssh/tinyssh/packet.h	/^    unsigned char clientmackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::clientnonce	tinyssh/packet.h	/^    unsigned char clientnonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::clientnonce	tinyssh/tinyssh/packet.h	/^    unsigned char clientnonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::flagauthorized	tinyssh/packet.h	/^    int flagauthorized;$/;"	m	struct:packet	access:public
packet::flagauthorized	tinyssh/tinyssh/packet.h	/^    int flagauthorized;$/;"	m	struct:packet	access:public
packet::flagchanneleofreceived	tinyssh/packet.h	/^    int flagchanneleofreceived;$/;"	m	struct:packet	access:public
packet::flagchanneleofreceived	tinyssh/tinyssh/packet.h	/^    int flagchanneleofreceived;$/;"	m	struct:packet	access:public
packet::flagclosesent	tinyssh/packet.h	/^    int flagclosesent;$/;"	m	struct:packet	access:public
packet::flagclosesent	tinyssh/tinyssh/packet.h	/^    int flagclosesent;$/;"	m	struct:packet	access:public
packet::flageofsent	tinyssh/packet.h	/^    int flageofsent;$/;"	m	struct:packet	access:public
packet::flageofsent	tinyssh/tinyssh/packet.h	/^    int flageofsent;$/;"	m	struct:packet	access:public
packet::flagkeys	tinyssh/packet.h	/^    int flagkeys;$/;"	m	struct:packet	access:public
packet::flagkeys	tinyssh/tinyssh/packet.h	/^    int flagkeys;$/;"	m	struct:packet	access:public
packet::flagrekeying	tinyssh/packet.h	/^    int flagrekeying;$/;"	m	struct:packet	access:public
packet::flagrekeying	tinyssh/tinyssh/packet.h	/^    int flagrekeying;$/;"	m	struct:packet	access:public
packet::hashbuf	tinyssh/packet.h	/^    struct buf hashbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::hashbuf	tinyssh/tinyssh/packet.h	/^    struct buf hashbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::hashbufspace	tinyssh/packet.h	/^    unsigned char hashbufspace[65536];$/;"	m	struct:packet	access:public
packet::hashbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char hashbufspace[65536];$/;"	m	struct:packet	access:public
packet::helloreceive	tinyssh/packet.h	/^    struct buf helloreceive;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::helloreceive	tinyssh/tinyssh/packet.h	/^    struct buf helloreceive;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::helloreceivespace	tinyssh/packet.h	/^    unsigned char helloreceivespace[256];$/;"	m	struct:packet	access:public
packet::helloreceivespace	tinyssh/tinyssh/packet.h	/^    unsigned char helloreceivespace[256];$/;"	m	struct:packet	access:public
packet::hellosend	tinyssh/packet.h	/^    struct buf hellosend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::hellosend	tinyssh/tinyssh/packet.h	/^    struct buf hellosend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::hellosendspace	tinyssh/packet.h	/^    unsigned char hellosendspace[256];$/;"	m	struct:packet	access:public
packet::hellosendspace	tinyssh/tinyssh/packet.h	/^    unsigned char hellosendspace[256];$/;"	m	struct:packet	access:public
packet::kex_guess	tinyssh/packet.h	/^    crypto_uint8 kex_guess;$/;"	m	struct:packet	access:public
packet::kex_guess	tinyssh/tinyssh/packet.h	/^    crypto_uint8 kex_guess;$/;"	m	struct:packet	access:public
packet::kex_packet_follows	tinyssh/packet.h	/^    crypto_uint8 kex_packet_follows;$/;"	m	struct:packet	access:public
packet::kex_packet_follows	tinyssh/tinyssh/packet.h	/^    crypto_uint8 kex_packet_follows;$/;"	m	struct:packet	access:public
packet::kexrecv	tinyssh/packet.h	/^    struct buf kexrecv;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::kexrecv	tinyssh/tinyssh/packet.h	/^    struct buf kexrecv;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::kexrecvspace	tinyssh/packet.h	/^    unsigned char kexrecvspace[65536];$/;"	m	struct:packet	access:public
packet::kexrecvspace	tinyssh/tinyssh/packet.h	/^    unsigned char kexrecvspace[65536];$/;"	m	struct:packet	access:public
packet::kexsend	tinyssh/packet.h	/^    struct buf kexsend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::kexsend	tinyssh/tinyssh/packet.h	/^    struct buf kexsend;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::kexsendspace	tinyssh/packet.h	/^    unsigned char kexsendspace[1024];$/;"	m	struct:packet	access:public
packet::kexsendspace	tinyssh/tinyssh/packet.h	/^    unsigned char kexsendspace[1024];$/;"	m	struct:packet	access:public
packet::name	tinyssh/packet.h	/^    char name[LOGIN_NAME_MAX + 1];$/;"	m	struct:packet	access:public
packet::name	tinyssh/tinyssh/packet.h	/^    char name[LOGIN_NAME_MAX + 1];$/;"	m	struct:packet	access:public
packet::packet_length	tinyssh/packet.h	/^    crypto_uint32 packet_length;$/;"	m	struct:packet	access:public
packet::packet_length	tinyssh/tinyssh/packet.h	/^    crypto_uint32 packet_length;$/;"	m	struct:packet	access:public
packet::receivepacketid	tinyssh/packet.h	/^    crypto_uint32 receivepacketid;$/;"	m	struct:packet	access:public
packet::receivepacketid	tinyssh/tinyssh/packet.h	/^    crypto_uint32 receivepacketid;$/;"	m	struct:packet	access:public
packet::recvbuf	tinyssh/packet.h	/^    struct buf recvbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::recvbuf	tinyssh/tinyssh/packet.h	/^    struct buf recvbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::recvbufspace	tinyssh/packet.h	/^    unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	struct:packet	access:public
packet::recvbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	struct:packet	access:public
packet::sendbuf	tinyssh/packet.h	/^    struct buf sendbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::sendbuf	tinyssh/tinyssh/packet.h	/^    struct buf sendbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
packet::sendbufspace	tinyssh/packet.h	/^    unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	struct:packet	access:public
packet::sendbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	struct:packet	access:public
packet::sendpacketid	tinyssh/packet.h	/^    crypto_uint32 sendpacketid;$/;"	m	struct:packet	access:public
packet::sendpacketid	tinyssh/tinyssh/packet.h	/^    crypto_uint32 sendpacketid;$/;"	m	struct:packet	access:public
packet::serverkey	tinyssh/packet.h	/^    unsigned char serverkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::serverkey	tinyssh/tinyssh/packet.h	/^    unsigned char serverkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::servermackey	tinyssh/packet.h	/^    unsigned char servermackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::servermackey	tinyssh/tinyssh/packet.h	/^    unsigned char servermackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::servernonce	tinyssh/packet.h	/^    unsigned char servernonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::servernonce	tinyssh/tinyssh/packet.h	/^    unsigned char servernonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
packet::sessionid	tinyssh/packet.h	/^    unsigned char sessionid[sshcrypto_hash_MAX];$/;"	m	struct:packet	access:public
packet::sessionid	tinyssh/tinyssh/packet.h	/^    unsigned char sessionid[sshcrypto_hash_MAX];$/;"	m	struct:packet	access:public
packet_auth	tinyssh/packet.h	/^extern int packet_auth(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_auth	tinyssh/tinyssh/packet.h	/^extern int packet_auth(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_auth	tinyssh/tinyssh/packet_auth.c	/^int packet_auth(struct buf *b, struct buf *b2) {$/;"	f	signature:(struct buf *b, struct buf *b2)
packet_channel_open	packet.cpp	/^int Packet::packet_channel_open()$/;"	f	class:Packet	signature:()
packet_channel_open	packet.h	/^        int packet_channel_open();$/;"	p	class:Packet	access:public	signature:()
packet_channel_open	tinyssh/packet.h	/^extern int packet_channel_open(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_channel_open	tinyssh/tinyssh/packet.h	/^extern int packet_channel_open(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_channel_open	tinyssh/tinyssh/packet_channel_open.c	/^int packet_channel_open(struct buf *b1, struct buf *b2) {$/;"	f	signature:(struct buf *b1, struct buf *b2)
packet_channel_recv_close	tinyssh/packet.h	/^extern int packet_channel_recv_close(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_close	tinyssh/tinyssh/packet.h	/^extern int packet_channel_recv_close(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_close	tinyssh/tinyssh/packet_channel_recv.c	/^int packet_channel_recv_close(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_recv_data	tinyssh/packet.h	/^extern int packet_channel_recv_data(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_data	tinyssh/tinyssh/packet.h	/^extern int packet_channel_recv_data(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_data	tinyssh/tinyssh/packet_channel_recv.c	/^int packet_channel_recv_data(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_recv_eof	tinyssh/packet.h	/^extern int packet_channel_recv_eof(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_eof	tinyssh/tinyssh/packet.h	/^extern int packet_channel_recv_eof(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_eof	tinyssh/tinyssh/packet_channel_recv.c	/^int packet_channel_recv_eof(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_recv_extendeddata	tinyssh/packet.h	/^extern int packet_channel_recv_extendeddata(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_extendeddata	tinyssh/tinyssh/packet.h	/^extern int packet_channel_recv_extendeddata(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_extendeddata	tinyssh/tinyssh/packet_channel_recv.c	/^int packet_channel_recv_extendeddata(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_recv_windowadjust	tinyssh/packet.h	/^extern int packet_channel_recv_windowadjust(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_windowadjust	tinyssh/tinyssh/packet.h	/^extern int packet_channel_recv_windowadjust(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_recv_windowadjust	tinyssh/tinyssh/packet_channel_recv.c	/^int packet_channel_recv_windowadjust(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_request	tinyssh/packet.h	/^extern int packet_channel_request(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_channel_request	tinyssh/tinyssh/packet.h	/^extern int packet_channel_request(struct buf *, struct buf *);$/;"	p	signature:(struct buf *, struct buf *)
packet_channel_request	tinyssh/tinyssh/packet_channel_request.c	/^int packet_channel_request(struct buf *b1, struct buf *b2) {$/;"	f	signature:(struct buf *b1, struct buf *b2)
packet_channel_send_close	tinyssh/packet.h	/^extern int packet_channel_send_close(struct buf *, int, int);$/;"	p	signature:(struct buf *, int, int)
packet_channel_send_close	tinyssh/tinyssh/packet.h	/^extern int packet_channel_send_close(struct buf *, int, int);$/;"	p	signature:(struct buf *, int, int)
packet_channel_send_close	tinyssh/tinyssh/packet_channel_send.c	/^int packet_channel_send_close(struct buf *b, int exitsignal, int exitcode) {$/;"	f	signature:(struct buf *b, int exitsignal, int exitcode)
packet_channel_send_data	tinyssh/packet.h	/^extern void packet_channel_send_data(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_data	tinyssh/tinyssh/packet.h	/^extern void packet_channel_send_data(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_data	tinyssh/tinyssh/packet_channel_send.c	/^void packet_channel_send_data(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_send_eof	tinyssh/packet.h	/^extern void packet_channel_send_eof(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_eof	tinyssh/tinyssh/packet.h	/^extern void packet_channel_send_eof(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_eof	tinyssh/tinyssh/packet_channel_send.c	/^void packet_channel_send_eof(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_send_extendeddata	tinyssh/packet.h	/^extern void packet_channel_send_extendeddata(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_extendeddata	tinyssh/tinyssh/packet.h	/^extern void packet_channel_send_extendeddata(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_extendeddata	tinyssh/tinyssh/packet_channel_send.c	/^void packet_channel_send_extendeddata(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_channel_send_windowadjust	tinyssh/packet.h	/^extern int packet_channel_send_windowadjust(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_windowadjust	tinyssh/tinyssh/packet.h	/^extern int packet_channel_send_windowadjust(struct buf *);$/;"	p	signature:(struct buf *)
packet_channel_send_windowadjust	tinyssh/tinyssh/packet_channel_send.c	/^int packet_channel_send_windowadjust(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_get	packet.cpp	/^int packet_get(struct buf *b, crypto_uint8 x) $/;"	f	signature:(struct buf *b, crypto_uint8 x)
packet_get	process.h	/^    int (*packet_get)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
packet_get	tinyssh/packet.h	/^extern int packet_get(struct buf *, crypto_uint8);$/;"	p	signature:(struct buf *, crypto_uint8)
packet_get	tinyssh/tinyssh/packet.h	/^extern int packet_get(struct buf *, crypto_uint8);$/;"	p	signature:(struct buf *, crypto_uint8)
packet_get	tinyssh/tinyssh/packet_get.c	/^int packet_get(struct buf *b, crypto_uint8 x) {$/;"	f	signature:(struct buf *b, crypto_uint8 x)
packet_get	tinyssh/tinyssh/sshcrypto.h	/^    int (*packet_get)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
packet_get_	packet.cpp	/^static int packet_get_(struct buf *b) $/;"	f	file:	signature:(struct buf *b)
packet_get_	tinyssh/tinyssh/packet_get.c	/^static int packet_get_(struct buf *b) {$/;"	f	file:	signature:(struct buf *b)
packet_get_plain_	packet.cpp	/^static int packet_get_plain_(struct buf *b) $/;"	f	file:	signature:(struct buf *b)
packet_get_plain_	tinyssh/tinyssh/packet_get.c	/^static int packet_get_plain_(struct buf *b) {$/;"	f	file:	signature:(struct buf *b)
packet_getall	packet.cpp	/^int packet_getall(struct buf *b, crypto_uint8 ch) $/;"	f	signature:(struct buf *b, crypto_uint8 ch)
packet_getall	tinyssh/packet.h	/^extern int packet_getall(struct buf *, crypto_uint8);$/;"	p	signature:(struct buf *, crypto_uint8)
packet_getall	tinyssh/tinyssh/packet.h	/^extern int packet_getall(struct buf *, crypto_uint8);$/;"	p	signature:(struct buf *, crypto_uint8)
packet_getall	tinyssh/tinyssh/packet_get.c	/^int packet_getall(struct buf *b, crypto_uint8 ch) {$/;"	f	signature:(struct buf *b, crypto_uint8 ch)
packet_hello_receive	tinyssh/packet.h	/^extern int packet_hello_receive(void);$/;"	p	signature:(void)
packet_hello_receive	tinyssh/tinyssh/packet.h	/^extern int packet_hello_receive(void);$/;"	p	signature:(void)
packet_hello_receive	tinyssh/tinyssh/packet_hello.c	/^int packet_hello_receive(void) {$/;"	f	signature:(void)
packet_hello_send	tinyssh/packet.h	/^extern int packet_hello_send(void);$/;"	p	signature:(void)
packet_hello_send	tinyssh/tinyssh/packet.h	/^extern int packet_hello_send(void);$/;"	p	signature:(void)
packet_hello_send	tinyssh/tinyssh/packet_hello.c	/^int packet_hello_send(void) {$/;"	f	signature:(void)
packet_init	packet.cpp	/^void Packet::packet_init()$/;"	f	class:Packet	signature:()
packet_init	packet.h	/^        void packet_init();$/;"	p	class:Packet	access:public	signature:()
packet_init	tinyssh/packet.c	/^void packet_init(void) {$/;"	f	signature:(void)
packet_init	tinyssh/packet.h	/^extern void packet_init(void);$/;"	p	signature:(void)
packet_init	tinyssh/tinyssh/packet.c	/^void packet_init(void) {$/;"	f	signature:(void)
packet_init	tinyssh/tinyssh/packet.h	/^extern void packet_init(void);$/;"	p	signature:(void)
packet_kex_receive	packet.h	/^        int packet_kex_receive();$/;"	p	class:Packet	access:public	signature:()
packet_kex_receive	tinyssh/packet.h	/^extern int packet_kex_receive(void);$/;"	p	signature:(void)
packet_kex_receive	tinyssh/tinyssh/packet.h	/^extern int packet_kex_receive(void);$/;"	p	signature:(void)
packet_kex_receive	tinyssh/tinyssh/packet_kex.c	/^int packet_kex_receive(void) {$/;"	f	signature:(void)
packet_kex_send	packet.h	/^        int packet_kex_send();$/;"	p	class:Packet	access:public	signature:()
packet_kex_send	tinyssh/packet.h	/^extern int packet_kex_send(void);$/;"	p	signature:(void)
packet_kex_send	tinyssh/tinyssh/packet.h	/^extern int packet_kex_send(void);$/;"	p	signature:(void)
packet_kex_send	tinyssh/tinyssh/packet_kex.c	/^int packet_kex_send(void) {$/;"	f	signature:(void)
packet_kexdh	tinyssh/packet.h	/^extern int packet_kexdh(const char *, struct buf *, struct buf *);$/;"	p	signature:(const char *, struct buf *, struct buf *)
packet_kexdh	tinyssh/tinyssh/packet.h	/^extern int packet_kexdh(const char *, struct buf *, struct buf *);$/;"	p	signature:(const char *, struct buf *, struct buf *)
packet_kexdh	tinyssh/tinyssh/packet_kexdh.c	/^int packet_kexdh(const char *keydir, struct buf *b1, struct buf *b2) {$/;"	f	signature:(const char *keydir, struct buf *b1, struct buf *b2)
packet_kexdh_receive	packet.h	/^        int packet_kexdh_receive();$/;"	p	class:Packet	access:public	signature:()
packet_kexdh_send	packet.h	/^        int packet_kexdh_send();$/;"	p	class:Packet	access:public	signature:()
packet_key_receive_from_downstream	packet.cpp	/^int Packet::packet_key_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_key_receive_from_upstream	packet.cpp	/^int Packet::packet_key_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_key_send	packet.cpp	/^int Packet::packet_key_send()$/;"	f	class:Packet	signature:()
packet_keydh_receive_from_downstream	packet.cpp	/^int Packet::packet_keydh_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_keydh_receive_from_upstream	packet.cpp	/^int Packet::packet_keydh_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_length	tinyssh/packet.h	/^    crypto_uint32 packet_length;$/;"	m	struct:packet	access:public
packet_length	tinyssh/tinyssh/packet.h	/^    crypto_uint32 packet_length;$/;"	m	struct:packet	access:public
packet_purge	tinyssh/packet.c	/^void packet_purge(void) {$/;"	f	signature:(void)
packet_purge	tinyssh/packet.h	/^extern void packet_purge(void);$/;"	p	signature:(void)
packet_purge	tinyssh/tinyssh/packet.c	/^void packet_purge(void) {$/;"	f	signature:(void)
packet_purge	tinyssh/tinyssh/packet.h	/^extern void packet_purge(void);$/;"	p	signature:(void)
packet_put	packet.cpp	/^void packet_put(struct buf *b) $/;"	f	signature:(struct buf *b)
packet_put	process.h	/^    void (*packet_put)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
packet_put	tinyssh/packet.h	/^extern void packet_put(struct buf *);$/;"	p	signature:(struct buf *)
packet_put	tinyssh/tinyssh/packet.h	/^extern void packet_put(struct buf *);$/;"	p	signature:(struct buf *)
packet_put	tinyssh/tinyssh/packet_put.c	/^void packet_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_put	tinyssh/tinyssh/sshcrypto.h	/^    void (*packet_put)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
packet_put_plain_	packet.cpp	/^static void packet_put_plain_(struct buf *b) $/;"	f	file:	signature:(struct buf *b)
packet_put_plain_	tinyssh/tinyssh/packet_put.c	/^static void packet_put_plain_(struct buf *b) {$/;"	f	file:	signature:(struct buf *b)
packet_putisready	tinyssh/packet.h	/^extern int packet_putisready(void);$/;"	p	signature:(void)
packet_putisready	tinyssh/tinyssh/packet.h	/^extern int packet_putisready(void);$/;"	p	signature:(void)
packet_putisready	tinyssh/tinyssh/packet_put.c	/^int packet_putisready(void) {$/;"	f	signature:(void)
packet_recv	packet.cpp	/^int packet_recv(void) $/;"	f	signature:(void)
packet_recv	tinyssh/packet.h	/^extern int packet_recv(void);$/;"	p	signature:(void)
packet_recv	tinyssh/tinyssh/packet.h	/^extern int packet_recv(void);$/;"	p	signature:(void)
packet_recv	tinyssh/tinyssh/packet_recv.c	/^int packet_recv(void) {$/;"	f	signature:(void)
packet_recvisready	packet.cpp	/^int packet_recvisready(void) $/;"	f	signature:(void)
packet_recvisready	tinyssh/packet.h	/^extern int packet_recvisready(void);$/;"	p	signature:(void)
packet_recvisready	tinyssh/tinyssh/packet.h	/^extern int packet_recvisready(void);$/;"	p	signature:(void)
packet_recvisready	tinyssh/tinyssh/packet_recv.c	/^int packet_recvisready(void) {$/;"	f	signature:(void)
packet_send	tinyssh/packet.h	/^extern int packet_send(void);$/;"	p	signature:(void)
packet_send	tinyssh/tinyssh/packet.h	/^extern int packet_send(void);$/;"	p	signature:(void)
packet_send	tinyssh/tinyssh/packet_send.c	/^int packet_send(void) {$/;"	f	signature:(void)
packet_sendall	packet.cpp	/^int packet_sendall(fd) $/;"	f	signature:(fd)
packet_sendall	tinyssh/packet.h	/^extern int packet_sendall(void);$/;"	p	signature:(void)
packet_sendall	tinyssh/tinyssh/packet.h	/^extern int packet_sendall(void);$/;"	p	signature:(void)
packet_sendall	tinyssh/tinyssh/packet_send.c	/^int packet_sendall(void) {$/;"	f	signature:(void)
packet_sendisready	tinyssh/packet.h	/^extern int packet_sendisready(void);$/;"	p	signature:(void)
packet_sendisready	tinyssh/tinyssh/packet.h	/^extern int packet_sendisready(void);$/;"	p	signature:(void)
packet_sendisready	tinyssh/tinyssh/packet_send.c	/^int packet_sendisready(void) {$/;"	f	signature:(void)
packet_unimplemented	tinyssh/packet.h	/^extern int packet_unimplemented(struct buf *);$/;"	p	signature:(struct buf *)
packet_unimplemented	tinyssh/tinyssh/packet.h	/^extern int packet_unimplemented(struct buf *);$/;"	p	signature:(struct buf *)
packet_unimplemented	tinyssh/tinyssh/packet_unimplemented.c	/^int packet_unimplemented(struct buf *b) {$/;"	f	signature:(struct buf *b)
packet_version_receive	packet.h	/^        int packet_version_receive(int sockfd);$/;"	p	class:Packet	access:public	signature:(int sockfd)
packet_version_receive_from_downstream	packet.cpp	/^int Packet::packet_version_receive_from_downstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_version_receive_from_upstream	packet.cpp	/^int Packet::packet_version_receive_from_upstream(int fd)$/;"	f	class:Packet	signature:(int fd)
packet_version_send	packet.cpp	/^int Packet::packet_version_send()$/;"	f	class:Packet	signature:()
packet_version_send	packet.h	/^        int packet_version_send();$/;"	p	class:Packet	access:public	signature:()
packetparser_copy	tinyssh/tinyssh/packetparser.h	15;"	d
packetparser_copy_	tinyssh/tinyssh/packetparser.c	/^long long packetparser_copy_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, const unsigned char *buf, long long len, long long pos, unsigned char *out, long long outlen)
packetparser_copy_	tinyssh/tinyssh/packetparser.h	/^extern long long packetparser_copy_(const char *, unsigned long long, const unsigned char *, long long, long long, unsigned char *, long long);$/;"	p	signature:(const char *, unsigned long long, const unsigned char *, long long, long long, unsigned char *, long long)
packetparser_end	tinyssh/tinyssh/packetparser.h	17;"	d
packetparser_end_	tinyssh/tinyssh/packetparser.c	/^long long packetparser_end_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, const unsigned char *buf, long long len, long long pos)
packetparser_end_	tinyssh/tinyssh/packetparser.h	/^extern long long packetparser_end_(const char *, unsigned long long, const unsigned char *, long long, long long);$/;"	p	signature:(const char *, unsigned long long, const unsigned char *, long long, long long)
packetparser_skip	tinyssh/tinyssh/packetparser.h	16;"	d
packetparser_skip_	tinyssh/tinyssh/packetparser.c	/^long long packetparser_skip_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, const unsigned char *buf, long long len, long long pos, long long skip)
packetparser_skip_	tinyssh/tinyssh/packetparser.h	/^extern long long packetparser_skip_(const char *, unsigned long long, const unsigned char *, long long, long long, long long);$/;"	p	signature:(const char *, unsigned long long, const unsigned char *, long long, long long, long long)
packetparser_uint32	tinyssh/tinyssh/packetparser.h	14;"	d
packetparser_uint32_	tinyssh/tinyssh/packetparser.c	/^long long packetparser_uint32_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, const unsigned char *buf, long long len, long long pos, crypto_uint32 *out)
packetparser_uint32_	tinyssh/tinyssh/packetparser.h	/^extern long long packetparser_uint32_(const char *, unsigned long long, const unsigned char *, long long, long long, crypto_uint32 *);$/;"	p	signature:(const char *, unsigned long long, const unsigned char *, long long, long long, crypto_uint32 *)
packetparser_uint8	tinyssh/tinyssh/packetparser.h	13;"	d
packetparser_uint8_	tinyssh/tinyssh/packetparser.c	/^long long packetparser_uint8_(const char *fn, unsigned long long line,$/;"	f	signature:(const char *fn, unsigned long long line, const unsigned char *buf, long long len, long long pos, crypto_uint8 *out)
packetparser_uint8_	tinyssh/tinyssh/packetparser.h	/^extern long long packetparser_uint8_(const char *, unsigned long long, const unsigned char *, long long, long long, crypto_uint8 *);$/;"	p	signature:(const char *, unsigned long long, const unsigned char *, long long, long long, crypto_uint8 *)
paramb	tinyssh/crypto/gep256.c	/^static const fe paramb = {$/;"	v	file:
parsesignature	process.h	/^    int (*parsesignature)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
parsesignature	tinyssh/tinyssh/sshcrypto.h	/^    int (*parsesignature)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
parsesignpk	process.h	/^    int (*parsesignpk)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
parsesignpk	tinyssh/tinyssh/sshcrypto.h	/^    int (*parsesignpk)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
pid	tinyssh/tinyssh/channel.h	/^    long long pid;$/;"	m	struct:channel	access:public
pk	tinyssh/tinyssh/tinysshd-makekey.c	17;"	d	file:
pk	tinyssh/tinyssh/tinysshd-printkey.c	/^static unsigned char pk[sshcrypto_sign_PUBLICKEYMAX];$/;"	v	file:
pl	tinyssh/crypto/fep256.c	/^static const fe pl = {$/;"	v	file:
port0	tinyssh/tinyssh/connectioninfo.c	107;"	d	file:
porttostr	tinyssh/tinyssh/porttostr.c	/^char *porttostr(char *strbuf, const unsigned char *port) {$/;"	f	signature:(char *strbuf, const unsigned char *port)
porttostr	tinyssh/tinyssh/porttostr.h	/^extern char *porttostr(char *, const unsigned char *);$/;"	p	signature:(char *, const unsigned char *)
process_init	process.cpp	/^void ProcessGenerator::process_init()$/;"	f	class:ProcessGenerator	signature:()
process_init	process.h	/^        void process_init();$/;"	p	class:ProcessGenerator	access:public	signature:()
proxy_connect_peer	process.cpp	/^void ProcessGenerator::proxy_connect_peer()$/;"	f	class:ProcessGenerator	signature:()
proxy_connect_peer	process.h	/^        void proxy_connect_peer();$/;"	p	class:ProcessGenerator	access:public	signature:()
ptsname	tinyssh/tinyssh/channel.c	/^extern char *ptsname(int);$/;"	p	file:	signature:(int)
ptsname	tinyssh/tinyssh/channel_forkpty.c	/^extern char *ptsname(int);$/;"	p	file:	signature:(int)
purge	packet.h	28;"	d
purge	tinyssh/tinyssh/purge.h	5;"	d
q	tinyssh/crypto/ge25519.base.py	/^q = 2**255 - 19$/;"	v
radix32	tinyssh/crypto/ge25519.base.py	/^def radix32(r):$/;"	f	access:public
radix32	tinyssh/crypto/gep256.base.py	/^def radix32(r):$/;"	f	access:public
randombytes	tinyssh/crypto/randombytes.c	/^void randombytes(unsigned char *x,unsigned long long xlen)$/;"	f	signature:(unsigned char *x,unsigned long long xlen)
randombytes	tinyssh/crypto/randombytes.h	/^extern void randombytes(unsigned char *, unsigned long long);$/;"	p	signature:(unsigned char *, unsigned long long)
randombytes_implementation	tinyssh/crypto/randombytes.h	7;"	d
randommod	tinyssh/tinyssh/randommod.c	/^long long randommod(long long n)$/;"	f	signature:(long long n)
randommod	tinyssh/tinyssh/randommod.h	/^extern long long randommod(long long);$/;"	p	signature:(long long)
readall	tinyssh/tinyssh/readall.c	/^int readall(int fd, void *xv, long long xlen) {$/;"	f	signature:(int fd, void *xv, long long xlen)
readall	tinyssh/tinyssh/readall.h	/^extern int readall(int, void *, long long);$/;"	p	signature:(int, void *, long long)
receivepacketid	tinyssh/packet.h	/^    crypto_uint32 receivepacketid;$/;"	m	struct:packet	access:public
receivepacketid	tinyssh/tinyssh/packet.h	/^    crypto_uint32 receivepacketid;$/;"	m	struct:packet	access:public
recvbuf	tinyssh/packet.h	/^    struct buf recvbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
recvbuf	tinyssh/tinyssh/packet.h	/^    struct buf recvbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
recvbufspace	packet.h	/^        unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	class:Packet	access:private
recvbufspace	tinyssh/packet.h	/^    unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	struct:packet	access:public
recvbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char recvbufspace[4 * PACKET_FULLLIMIT + 1 + PACKET_ZEROBYTES];$/;"	m	struct:packet	access:public
remoteeof	tinyssh/tinyssh/channel.h	/^    int remoteeof;$/;"	m	struct:channel	access:public
remoteip	tinyssh/tinyssh/channel.h	/^    char remoteip[IPTOSTR_LEN];$/;"	m	struct:channel	access:public
remoteport	tinyssh/tinyssh/channel.h	/^    char remoteport[PORTTOSTR_LEN];$/;"	m	struct:channel	access:public
remotewindow	tinyssh/tinyssh/channel.h	/^    crypto_uint32 remotewindow;$/;"	m	struct:channel	access:public
removefd	process.cpp	/^void removefd( int epollfd, int fd )$/;"	f	signature:( int epollfd, int fd )
removefd	process.h	/^void removefd( int epollfd, int fd );$/;"	p	signature:( int epollfd, int fd )
run_process	process.cpp	/^void ProcessGenerator::run_process()$/;"	f	class:ProcessGenerator	signature:()
run_process	process.h	/^        void run_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
run_session_process	process.cpp	/^void ProcessGenerator::run_session_process()$/;"	f	class:ProcessGenerator	signature:()
run_session_process	process.h	/^        void run_session_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
savesync	tinyssh/tinyssh/savesync.c	/^int savesync(const char *fn,const void *x,long long xlen)$/;"	f	signature:(const char *fn,const void *x,long long xlen)
savesync	tinyssh/tinyssh/savesync.h	/^extern int savesync(const char *,const void *,long long);$/;"	p	signature:(const char *,const void *,long long)
sc25519_muladd	tinyssh/crypto/sc25519.c	/^void sc25519_muladd(unsigned char *s, const unsigned char *a, const unsigned char *b, const unsigned char *c) {$/;"	f	signature:(unsigned char *s, const unsigned char *a, const unsigned char *b, const unsigned char *c)
sc25519_muladd	tinyssh/crypto/sc25519.h	/^extern void sc25519_muladd(unsigned char *, const unsigned char *, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, const unsigned char *, const unsigned char *)
sc25519_reduce	tinyssh/crypto/sc25519.c	/^void sc25519_reduce(unsigned char *s) {$/;"	f	signature:(unsigned char *s)
sc25519_reduce	tinyssh/crypto/sc25519.h	/^extern void sc25519_reduce(unsigned char *);$/;"	p	signature:(unsigned char *)
scp256_add	tinyssh/crypto/scp256.c	/^void scp256_add(unsigned char *o, const unsigned char *x, const unsigned char *y) {$/;"	f	signature:(unsigned char *o, const unsigned char *x, const unsigned char *y)
scp256_add	tinyssh/crypto/scp256.h	/^extern void scp256_add(unsigned char *, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, const unsigned char *)
scp256_inv	tinyssh/crypto/scp256.c	/^void scp256_inv(unsigned char *x) {$/;"	f	signature:(unsigned char *x)
scp256_inv	tinyssh/crypto/scp256.h	/^extern void scp256_inv(unsigned char *);$/;"	p	signature:(unsigned char *)
scp256_mul	tinyssh/crypto/scp256.c	/^void scp256_mul(unsigned char *o, const unsigned char *x, const unsigned char *y) {$/;"	f	signature:(unsigned char *o, const unsigned char *x, const unsigned char *y)
scp256_mul	tinyssh/crypto/scp256.h	/^extern void scp256_mul(unsigned char *, const unsigned char *, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, const unsigned char *)
scp256_reduce32	tinyssh/crypto/scp256.c	/^void scp256_reduce32(unsigned char *x) {$/;"	f	signature:(unsigned char *x)
scp256_reduce32	tinyssh/crypto/scp256.h	/^extern void scp256_reduce32(unsigned char *);$/;"	p	signature:(unsigned char *)
scp256_reduce64	tinyssh/crypto/scp256.c	/^void scp256_reduce64(unsigned char *x) {$/;"	f	signature:(unsigned char *x)
scp256_reduce64	tinyssh/crypto/scp256.h	/^extern void scp256_reduce64(unsigned char *);$/;"	p	signature:(unsigned char *)
select	tinyssh/crypto/ge25519.c	/^static void select(ge25519_precomp t, long long pos, signed char b) {$/;"	f	file:	signature:(ge25519_precomp t, long long pos, signed char b)
select	tinyssh/crypto/gep256.c	/^static void select(gep256_precomp t, long long pos, signed char b) {$/;"	f	file:	signature:(gep256_precomp t, long long pos, signed char b)
selfpipe	tinyssh/tinyssh/tinysshd.c	/^static int selfpipe[2] = { -1, -1 };$/;"	v	file:
sendbuf	tinyssh/packet.h	/^    struct buf sendbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
sendbuf	tinyssh/tinyssh/packet.h	/^    struct buf sendbuf;$/;"	m	struct:packet	typeref:struct:packet::buf	access:public
sendbufspace	packet.h	/^        unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	class:Packet	access:private
sendbufspace	tinyssh/packet.h	/^    unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	struct:packet	access:public
sendbufspace	tinyssh/tinyssh/packet.h	/^    unsigned char sendbufspace[4 * PACKET_FULLLIMIT + 1];$/;"	m	struct:packet	access:public
sendpacketid	tinyssh/packet.h	/^    crypto_uint32 sendpacketid;$/;"	m	struct:packet	access:public
sendpacketid	tinyssh/tinyssh/packet.h	/^    crypto_uint32 sendpacketid;$/;"	m	struct:packet	access:public
serverkey	tinyssh/packet.h	/^    unsigned char serverkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
serverkey	tinyssh/tinyssh/packet.h	/^    unsigned char serverkey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
servermackey	tinyssh/packet.h	/^    unsigned char servermackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
servermackey	tinyssh/tinyssh/packet.h	/^    unsigned char servermackey[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
servernonce	tinyssh/packet.h	/^    unsigned char servernonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
servernonce	tinyssh/tinyssh/packet.h	/^    unsigned char servernonce[sshcrypto_cipher_KEYMAX];$/;"	m	struct:packet	access:public
serverpk	packet.h	/^        unsigned char serverpk[sshcrypto_dh_PUBLICKEYMAX];$/;"	m	class:Packet	access:private
serversk	packet.h	/^        unsigned char serversk[sshcrypto_dh_SECRETKEYMAX];$/;"	m	class:Packet	access:private
sessionid	tinyssh/packet.h	/^    unsigned char sessionid[sshcrypto_hash_MAX];$/;"	m	struct:packet	access:public
sessionid	tinyssh/tinyssh/packet.h	/^    unsigned char sessionid[sshcrypto_hash_MAX];$/;"	m	struct:packet	access:public
setnonblocking	process.cpp	/^int setnonblocking( int fd )$/;"	f	signature:( int fd )
setnonblocking	process.h	/^int setnonblocking( int fd );$/;"	p	signature:( int fd )
setup_sig_pipe	process.cpp	/^void ProcessGenerator::setup_sig_pipe()$/;"	f	class:ProcessGenerator	signature:()
setup_sig_pipe	process.h	/^        void setup_sig_pipe();$/;"	p	class:ProcessGenerator	access:public	signature:()
sha256_auth	tinyssh/crypto/sha256.c	/^int sha256_auth(unsigned char *o, const unsigned char *m, unsigned long long n, const unsigned char *k) {$/;"	f	signature:(unsigned char *o, const unsigned char *m, unsigned long long n, const unsigned char *k)
sha256_auth	tinyssh/crypto/sha256.h	/^extern int sha256_auth(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *)
sha256_hash	tinyssh/crypto/sha256.c	/^int sha256_hash(unsigned char *o, const unsigned char *m, unsigned long long n) {$/;"	f	signature:(unsigned char *o, const unsigned char *m, unsigned long long n)
sha256_hash	tinyssh/crypto/sha256.h	/^extern int sha256_hash(unsigned char *, const unsigned char *, unsigned long long);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long)
sha512_hash	tinyssh/crypto/sha512.c	/^void sha512_hash(unsigned char *o, const unsigned char *m, unsigned long long n, crypto_uint64 *h) {$/;"	f	signature:(unsigned char *o, const unsigned char *m, unsigned long long n, crypto_uint64 *h)
sha512_hash	tinyssh/crypto/sha512.h	/^extern void sha512_hash(unsigned char *, const unsigned char *, unsigned long long, crypto_uint64 *);$/;"	p	signature:(unsigned char *, const unsigned char *, unsigned long long, crypto_uint64 *)
sharedsecret	packet.h	/^        unsigned char sharedsecret[sshcrypto_dh_MAX];$/;"	m	class:Packet	access:private
sig_handler	process.cpp	/^void sig_handler( int sig )$/;"	f	signature:( int sig )
sig_parent_handler	main.cpp	/^void sig_parent_handler( int sig )$/;"	f	signature:( int sig )
sig_parent_pipefd	main.cpp	/^static int sig_parent_pipefd[2];$/;"	v	file:
sig_pipefd	process.cpp	/^static int sig_pipefd[2];$/;"	v	file:
sigma0	tinyssh/crypto/sha256.c	/^static crypto_uint32 sigma0(crypto_uint32 x) { return R(x, 7) ^ R(x,18) ^ (x >> 3); }$/;"	f	file:	signature:(crypto_uint32 x)
sigma0	tinyssh/crypto/sha512.c	/^static crypto_uint64 sigma0(crypto_uint64 x) { return R(x,  1) ^ R(x,  8) ^ (x >> 7); }$/;"	f	file:	signature:(crypto_uint64 x)
sigma1	tinyssh/crypto/sha256.c	/^static crypto_uint32 sigma1(crypto_uint32 x) { return R(x,17) ^ R(x,19) ^ (x >> 10); }$/;"	f	file:	signature:(crypto_uint32 x)
sigma1	tinyssh/crypto/sha512.c	/^static crypto_uint64 sigma1(crypto_uint64 x) { return R(x, 19) ^ R(x, 61) ^ (x >> 6); }$/;"	f	file:	signature:(crypto_uint64 x)
sign	process.h	/^    int (*sign)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign_bytes	process.h	/^    long long sign_bytes;$/;"	m	struct:sshcrypto_key	access:public
sign_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_bytes;$/;"	m	struct:sshcrypto_key	access:public
sign_flagclient	process.h	/^    int sign_flagclient;$/;"	m	struct:sshcrypto_key	access:public
sign_flagclient	tinyssh/tinyssh/sshcrypto.h	/^    int sign_flagclient;$/;"	m	struct:sshcrypto_key	access:public
sign_flagserver	process.h	/^    int sign_flagserver;$/;"	m	struct:sshcrypto_key	access:public
sign_flagserver	tinyssh/tinyssh/sshcrypto.h	/^    int sign_flagserver;$/;"	m	struct:sshcrypto_key	access:public
sign_keypair	process.h	/^    int (*sign_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign_keypair	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign_open	process.h	/^    int (*sign_open)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign_open	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign_open)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sign_publickey	process.h	/^    unsigned char sign_publickey[sshcrypto_sign_PUBLICKEYMAX];$/;"	m	struct:sshcrypto_key	access:public
sign_publickey	tinyssh/tinyssh/sshcrypto.h	/^    unsigned char sign_publickey[sshcrypto_sign_PUBLICKEYMAX];$/;"	m	struct:sshcrypto_key	access:public
sign_publickeybytes	process.h	/^    long long sign_publickeybytes;$/;"	m	struct:sshcrypto_key	access:public
sign_publickeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_publickeybytes;$/;"	m	struct:sshcrypto_key	access:public
sign_publickeyfilename	process.h	/^    const char *sign_publickeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sign_publickeyfilename	tinyssh/tinyssh/sshcrypto.h	/^    const char *sign_publickeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sign_secretkeybytes	process.h	/^    long long sign_secretkeybytes;$/;"	m	struct:sshcrypto_key	access:public
sign_secretkeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_secretkeybytes;$/;"	m	struct:sshcrypto_key	access:public
sign_secretkeyfilename	process.h	/^    const char *sign_secretkeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sign_secretkeyfilename	tinyssh/tinyssh/sshcrypto.h	/^    const char *sign_secretkeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sk	tinyssh/tinyssh/tinysshd-makekey.c	16;"	d	file:
slave	tinyssh/tinyssh/channel.h	/^    int slave;$/;"	m	struct:channel	access:public
sm	packet.h	/^        unsigned char sm[sshcrypto_sign_MAX];$/;"	m	class:Packet	access:private
sqrtm1	tinyssh/crypto/ge25519.c	/^static fe sqrtm1 = {$/;"	v	file:
ssh_sigstr	tinyssh/tinyssh/ssh.c	/^const char *ssh_sigstr(int i) {$/;"	f	signature:(int i)
ssh_sigstr	tinyssh/tinyssh/ssh.h	/^extern const char *ssh_sigstr(int);$/;"	p	signature:(int)
ssh_sigstrlong	tinyssh/tinyssh/ssh.c	/^const char *ssh_sigstrlong(int i) {$/;"	f	signature:(int i)
ssh_sigstrlong	tinyssh/tinyssh/ssh.h	/^extern const char *ssh_sigstrlong(int);$/;"	p	signature:(int)
sshcrypto_TYPENEWCRYPTO	tinyssh/tinyssh/sshcrypto.h	9;"	d
sshcrypto_TYPEOLDCRYPTO	tinyssh/tinyssh/sshcrypto.h	8;"	d
sshcrypto_TYPEPQCRYPTO	tinyssh/tinyssh/sshcrypto.h	10;"	d
sshcrypto_auth	tinyssh/tinyssh/sshcrypto_cipher.c	/^int (*sshcrypto_auth)(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *) = 0;$/;"	v
sshcrypto_auth_bytes	tinyssh/tinyssh/sshcrypto_cipher.c	/^long long sshcrypto_auth_bytes = 0;$/;"	v
sshcrypto_buf_putdhpk	tinyssh/tinyssh/sshcrypto_kex.c	/^void (*sshcrypto_buf_putdhpk)(struct buf *, const unsigned char *) = 0;$/;"	v
sshcrypto_buf_putsharedsecret	tinyssh/tinyssh/sshcrypto_kex.c	/^void (*sshcrypto_buf_putsharedsecret)(struct buf *, const unsigned char *) = 0;$/;"	v
sshcrypto_buf_putsignature	tinyssh/tinyssh/sshcrypto_key.c	/^void (*sshcrypto_buf_putsignature)(struct buf *, const unsigned char *) = 0;$/;"	v
sshcrypto_buf_putsignpk	tinyssh/tinyssh/sshcrypto_key.c	/^void (*sshcrypto_buf_putsignpk)(struct buf *, const unsigned char *) = 0;$/;"	v
sshcrypto_cipher	process.h	/^struct sshcrypto_cipher $/;"	s
sshcrypto_cipher	tinyssh/tinyssh/sshcrypto.h	/^struct sshcrypto_cipher {$/;"	s
sshcrypto_cipher::auth	process.h	/^    int (*auth)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::auth	tinyssh/tinyssh/sshcrypto.h	/^    int (*auth)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::auth_bytes	process.h	/^    long long auth_bytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::auth_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long auth_bytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::cipher_blockbytes	process.h	/^    long long cipher_blockbytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::cipher_blockbytes	tinyssh/tinyssh/sshcrypto.h	/^    long long cipher_blockbytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::flagenabled	process.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::flagenabled	tinyssh/tinyssh/sshcrypto.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::packet_get	process.h	/^    int (*packet_get)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::packet_get	tinyssh/tinyssh/sshcrypto.h	/^    int (*packet_get)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::packet_put	process.h	/^    void (*packet_put)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::packet_put	tinyssh/tinyssh/sshcrypto.h	/^    void (*packet_put)(struct buf *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::stream_keybytes	process.h	/^    long long stream_keybytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::stream_keybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long stream_keybytes;$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::stream_xor	process.h	/^    int (*stream_xor)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher::stream_xor	tinyssh/tinyssh/sshcrypto.h	/^    int (*stream_xor)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
sshcrypto_cipher_KEYMAX	tinyssh/tinyssh/sshcrypto.h	130;"	d
sshcrypto_cipher_blockbytes	tinyssh/tinyssh/sshcrypto_cipher.c	/^long long sshcrypto_cipher_blockbytes = 0;$/;"	v
sshcrypto_cipher_macput	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_cipher_macput(struct buf *b);$/;"	p	signature:(struct buf *b)
sshcrypto_cipher_macput	tinyssh/tinyssh/sshcrypto_cipher.c	/^void sshcrypto_cipher_macput(struct buf *b) {$/;"	f	signature:(struct buf *b)
sshcrypto_cipher_macselect	tinyssh/tinyssh/sshcrypto.h	/^extern int sshcrypto_cipher_macselect(const unsigned char *, long long);$/;"	p	signature:(const unsigned char *, long long)
sshcrypto_cipher_macselect	tinyssh/tinyssh/sshcrypto_cipher.c	/^int sshcrypto_cipher_macselect(const unsigned char *buf, long long len) {$/;"	f	signature:(const unsigned char *buf, long long len)
sshcrypto_cipher_name	tinyssh/tinyssh/sshcrypto_cipher.c	/^const char *sshcrypto_cipher_name = 0;$/;"	v
sshcrypto_cipher_put	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_cipher_put(struct buf *);$/;"	p	signature:(struct buf *)
sshcrypto_cipher_put	tinyssh/tinyssh/sshcrypto_cipher.c	/^void sshcrypto_cipher_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
sshcrypto_cipher_select	tinyssh/tinyssh/sshcrypto.h	/^extern int sshcrypto_cipher_select(const unsigned char *, long long);$/;"	p	signature:(const unsigned char *, long long)
sshcrypto_cipher_select	tinyssh/tinyssh/sshcrypto_cipher.c	/^int sshcrypto_cipher_select(const unsigned char *buf, long long len) {$/;"	f	signature:(const unsigned char *buf, long long len)
sshcrypto_ciphers	process.h	/^        struct sshcrypto_cipher sshcrypto_ciphers[2];$/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_cipher	access:private
sshcrypto_ciphers	tinyssh/tinyssh/sshcrypto_cipher.c	/^struct sshcrypto_cipher sshcrypto_ciphers[] = {$/;"	v	typeref:struct:sshcrypto_cipher
sshcrypto_dh	tinyssh/tinyssh/sshcrypto_kex.c	/^int (*sshcrypto_dh)(unsigned char *, unsigned char *, unsigned char *) = 0;$/;"	v
sshcrypto_dh_MAX	tinyssh/tinyssh/sshcrypto.h	15;"	d
sshcrypto_dh_PUBLICKEYMAX	tinyssh/tinyssh/sshcrypto.h	13;"	d
sshcrypto_dh_SECRETKEYMAX	tinyssh/tinyssh/sshcrypto.h	14;"	d
sshcrypto_dh_bytes	tinyssh/tinyssh/sshcrypto_kex.c	/^long long sshcrypto_dh_bytes = 0;$/;"	v
sshcrypto_dh_keypair	tinyssh/tinyssh/sshcrypto_kex.c	/^int (*sshcrypto_dh_keypair)(unsigned char *, unsigned char *) = 0;$/;"	v
sshcrypto_dh_publickeybytes	tinyssh/tinyssh/sshcrypto_kex.c	/^long long sshcrypto_dh_publickeybytes = 0;$/;"	v
sshcrypto_dh_secretkeybytes	tinyssh/tinyssh/sshcrypto_kex.c	/^long long sshcrypto_dh_secretkeybytes = 0;$/;"	v
sshcrypto_hash	tinyssh/tinyssh/sshcrypto_kex.c	/^int (*sshcrypto_hash)(unsigned char *, const unsigned char *, unsigned long long) = 0;$/;"	v
sshcrypto_hash_MAX	tinyssh/tinyssh/sshcrypto.h	16;"	d
sshcrypto_hash_bytes	tinyssh/tinyssh/sshcrypto_kex.c	/^long long sshcrypto_hash_bytes = 0;$/;"	v
sshcrypto_hostkey_select	packet.cpp	/^int sshcrypto_hostkey_select(const unsigned char *buf, long long len, long long pos, int &type)$/;"	f	signature:(const unsigned char *buf, long long len, long long pos, int &type)
sshcrypto_init	tinyssh/tinyssh/sshcrypto.c	/^void sshcrypto_init(void) {$/;"	f	signature:(void)
sshcrypto_init	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_init(void);$/;"	p	signature:(void)
sshcrypto_kex	process.h	/^struct sshcrypto_kex $/;"	s
sshcrypto_kex	tinyssh/tinyssh/sshcrypto.h	/^struct sshcrypto_kex {$/;"	s
sshcrypto_kex::buf_putdhpk	process.h	/^    void (*buf_putdhpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::buf_putdhpk	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putdhpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::buf_putsharedsecret	process.h	/^    void (*buf_putsharedsecret)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::buf_putsharedsecret	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsharedsecret)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh	process.h	/^    int (*dh)(unsigned char *, unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh	tinyssh/tinyssh/sshcrypto.h	/^    int (*dh)(unsigned char *, unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_bytes	process.h	/^    long long dh_bytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_bytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_keypair	process.h	/^    int (*dh_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_keypair	tinyssh/tinyssh/sshcrypto.h	/^    int (*dh_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_publickeybytes	process.h	/^    long long dh_publickeybytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_publickeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_publickeybytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_secretkeybytes	process.h	/^    long long dh_secretkeybytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::dh_secretkeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long dh_secretkeybytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::flagenabled	process.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::flagenabled	tinyssh/tinyssh/sshcrypto.h	/^    int flagenabled;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::hash	process.h	/^    int (*hash)(unsigned char *, const unsigned char *, unsigned long long);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::hash	tinyssh/tinyssh/sshcrypto.h	/^    int (*hash)(unsigned char *, const unsigned char *, unsigned long long);$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::hash_bytes	process.h	/^    long long hash_bytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::hash_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long hash_bytes;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex::name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_kex	access:public
sshcrypto_kex_name	tinyssh/tinyssh/sshcrypto_kex.c	/^const char *sshcrypto_kex_name = 0;$/;"	v
sshcrypto_kex_put	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_kex_put(struct buf *);$/;"	p	signature:(struct buf *)
sshcrypto_kex_put	tinyssh/tinyssh/sshcrypto_kex.c	/^void sshcrypto_kex_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
sshcrypto_kex_select	packet.cpp	/^int sshcrypto_kex_select(const unsigned char *buf, long long len, crypto_uint8 *kex_guess) $/;"	f	signature:(const unsigned char *buf, long long len, crypto_uint8 *kex_guess)
sshcrypto_kex_select	tinyssh/tinyssh/sshcrypto.h	/^extern int sshcrypto_kex_select(const unsigned char *, long long, crypto_uint8 *);$/;"	p	signature:(const unsigned char *, long long, crypto_uint8 *)
sshcrypto_kex_select	tinyssh/tinyssh/sshcrypto_kex.c	/^int sshcrypto_kex_select(const unsigned char *buf, long long len, crypto_uint8 *kex_guess) {$/;"	f	signature:(const unsigned char *buf, long long len, crypto_uint8 *kex_guess)
sshcrypto_kexs	process.h	/^        struct sshcrypto_kex sshcrypto_kexs[2];$/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_kex	access:private
sshcrypto_kexs	tinyssh/tinyssh/sshcrypto_kex.c	/^struct sshcrypto_kex sshcrypto_kexs[] = {$/;"	v	typeref:struct:sshcrypto_kex
sshcrypto_key	process.h	/^struct sshcrypto_key $/;"	s
sshcrypto_key	tinyssh/tinyssh/sshcrypto.h	/^struct sshcrypto_key {$/;"	s
sshcrypto_key::buf_putsignature	process.h	/^    void (*buf_putsignature)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::buf_putsignature	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignature)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::buf_putsignpk	process.h	/^    void (*buf_putsignpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::buf_putsignpk	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignpk)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::buf_putsignpkbase64	process.h	/^    void (*buf_putsignpkbase64)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::buf_putsignpkbase64	tinyssh/tinyssh/sshcrypto.h	/^    void (*buf_putsignpkbase64)(struct buf *, const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::cryptotype	process.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::cryptotype	tinyssh/tinyssh/sshcrypto.h	/^    unsigned int cryptotype;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::name	process.h	/^    const char *name;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::name	tinyssh/tinyssh/sshcrypto.h	/^    const char *name;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::parsesignature	process.h	/^    int (*parsesignature)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::parsesignature	tinyssh/tinyssh/sshcrypto.h	/^    int (*parsesignature)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::parsesignpk	process.h	/^    int (*parsesignpk)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::parsesignpk	tinyssh/tinyssh/sshcrypto.h	/^    int (*parsesignpk)(unsigned char *, const unsigned char *, long long);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign	process.h	/^    int (*sign)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_bytes	process.h	/^    long long sign_bytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_bytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_bytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_flagclient	process.h	/^    int sign_flagclient;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_flagclient	tinyssh/tinyssh/sshcrypto.h	/^    int sign_flagclient;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_flagserver	process.h	/^    int sign_flagserver;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_flagserver	tinyssh/tinyssh/sshcrypto.h	/^    int sign_flagserver;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_keypair	process.h	/^    int (*sign_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_keypair	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign_keypair)(unsigned char *, unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_open	process.h	/^    int (*sign_open)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_open	tinyssh/tinyssh/sshcrypto.h	/^    int (*sign_open)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *);$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickey	process.h	/^    unsigned char sign_publickey[sshcrypto_sign_PUBLICKEYMAX];$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickey	tinyssh/tinyssh/sshcrypto.h	/^    unsigned char sign_publickey[sshcrypto_sign_PUBLICKEYMAX];$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickeybytes	process.h	/^    long long sign_publickeybytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_publickeybytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickeyfilename	process.h	/^    const char *sign_publickeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_publickeyfilename	tinyssh/tinyssh/sshcrypto.h	/^    const char *sign_publickeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_secretkeybytes	process.h	/^    long long sign_secretkeybytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_secretkeybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long sign_secretkeybytes;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_secretkeyfilename	process.h	/^    const char *sign_secretkeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key::sign_secretkeyfilename	tinyssh/tinyssh/sshcrypto.h	/^    const char *sign_secretkeyfilename;$/;"	m	struct:sshcrypto_key	access:public
sshcrypto_key_name	tinyssh/tinyssh/sshcrypto_key.c	/^const char *sshcrypto_key_name = 0;$/;"	v
sshcrypto_key_put	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_key_put(struct buf *);$/;"	p	signature:(struct buf *)
sshcrypto_key_put	tinyssh/tinyssh/sshcrypto_key.c	/^void sshcrypto_key_put(struct buf *b) {$/;"	f	signature:(struct buf *b)
sshcrypto_key_select	tinyssh/tinyssh/sshcrypto.h	/^extern int sshcrypto_key_select(const unsigned char *, long long);$/;"	p	signature:(const unsigned char *, long long)
sshcrypto_key_select	tinyssh/tinyssh/sshcrypto_key.c	/^int sshcrypto_key_select(const unsigned char *buf, long long len) {$/;"	f	signature:(const unsigned char *buf, long long len)
sshcrypto_keys	process.h	/^        struct sshcrypto_key sshcrypto_keys[2]; $/;"	m	class:ProcessGenerator	typeref:struct:ProcessGenerator::sshcrypto_key	access:private
sshcrypto_keys	tinyssh/tinyssh/sshcrypto_key.c	/^struct sshcrypto_key sshcrypto_keys[] = {$/;"	v	typeref:struct:sshcrypto_key
sshcrypto_packet_get	tinyssh/tinyssh/sshcrypto_cipher.c	/^int (*sshcrypto_packet_get)(struct buf *) = 0;$/;"	v
sshcrypto_packet_put	tinyssh/tinyssh/sshcrypto_cipher.c	/^void (*sshcrypto_packet_put)(struct buf *) = 0;$/;"	v
sshcrypto_purge	tinyssh/tinyssh/sshcrypto.c	/^void sshcrypto_purge(void) {$/;"	f	signature:(void)
sshcrypto_purge	tinyssh/tinyssh/sshcrypto.h	/^extern void sshcrypto_purge(void);$/;"	p	signature:(void)
sshcrypto_sign	tinyssh/tinyssh/sshcrypto_key.c	/^int (*sshcrypto_sign)(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *) = 0;$/;"	v
sshcrypto_sign_BASE64PUBLICKEYMAX	tinyssh/tinyssh/sshcrypto.h	70;"	d
sshcrypto_sign_BASE64PUBLICKEYMIN	tinyssh/tinyssh/sshcrypto.h	71;"	d
sshcrypto_sign_MAX	tinyssh/tinyssh/sshcrypto.h	69;"	d
sshcrypto_sign_NAMEMAX	tinyssh/tinyssh/sshcrypto.h	72;"	d
sshcrypto_sign_PUBLICKEYMAX	tinyssh/tinyssh/sshcrypto.h	67;"	d
sshcrypto_sign_SECRETKEYMAX	tinyssh/tinyssh/sshcrypto.h	68;"	d
sshcrypto_sign_bytes	tinyssh/tinyssh/sshcrypto_key.c	/^long long sshcrypto_sign_bytes = 0;$/;"	v
sshcrypto_sign_publickey	tinyssh/tinyssh/sshcrypto_key.c	/^unsigned char *sshcrypto_sign_publickey = 0;$/;"	v
sshcrypto_sign_publickeybytes	tinyssh/tinyssh/sshcrypto_key.c	/^long long sshcrypto_sign_publickeybytes = 0;$/;"	v
sshcrypto_sign_secretkeybytes	tinyssh/tinyssh/sshcrypto_key.c	/^long long sshcrypto_sign_secretkeybytes = 0;$/;"	v
sshcrypto_sign_secretkeyfilename	tinyssh/tinyssh/sshcrypto_key.c	/^const char *sshcrypto_sign_secretkeyfilename = 0;$/;"	v
sshcrypto_stream_beforenm	tinyssh/tinyssh/sshcrypto_cipher.c	/^int (*sshcrypto_stream_beforenm)(unsigned char *, const unsigned char *) = 0;$/;"	v
sshcrypto_stream_keybytes	tinyssh/tinyssh/sshcrypto_cipher.c	/^long long sshcrypto_stream_keybytes = 0;$/;"	v
sshcrypto_stream_xor	tinyssh/tinyssh/sshcrypto_cipher.c	/^int (*sshcrypto_stream_xor)(unsigned char *, const unsigned char *, unsigned long long, const unsigned char *, const unsigned char *) = 0;$/;"	v
start_spawn_process	process.cpp	/^void ProcessGenerator::start_spawn_process()$/;"	f	class:ProcessGenerator	signature:()
start_spawn_process	process.h	/^        void start_spawn_process();$/;"	p	class:ProcessGenerator	access:public	signature:()
status	tinyssh/tinyssh/channel.h	/^    int status;$/;"	m	struct:channel	access:public
store32_bigendian	tinyssh/crypto/sha256.c	/^static void store32_bigendian(unsigned char *y, crypto_uint32 x) {$/;"	f	file:	signature:(unsigned char *y, crypto_uint32 x)
store64_bigendian	tinyssh/crypto/sha256.c	/^static void store64_bigendian(unsigned char *y, crypto_uint64 x) {$/;"	f	file:	signature:(unsigned char *y, crypto_uint64 x)
store64_bigendian	tinyssh/crypto/sha512.c	/^static void store64_bigendian(unsigned char *y, crypto_uint64 x) {$/;"	f	file:	signature:(unsigned char *y, crypto_uint64 x)
str_copyn	tinyssh/tinyssh/str.c	/^int str_copyn(char *y, long long ylen, const char *x) {$/;"	f	signature:(char *y, long long ylen, const char *x)
str_copyn	tinyssh/tinyssh/str.h	/^extern int str_copyn(char *, long long, const char *);$/;"	p	signature:(char *, long long, const char *)
str_equaln	tinyssh/tinyssh/str.c	/^int str_equaln(const char *y, long long ylen, const char *x) {$/;"	f	signature:(const char *y, long long ylen, const char *x)
str_equaln	tinyssh/tinyssh/str.h	/^extern int str_equaln(const char *, long long, const char *);$/;"	p	signature:(const char *, long long, const char *)
str_len	tinyssh/tinyssh/str.c	/^long long str_len(const char *s) {$/;"	f	signature:(const char *s)
str_len	tinyssh/tinyssh/str.h	/^extern long long str_len(const char *);$/;"	p	signature:(const char *)
str_start	tinyssh/tinyssh/str.c	/^int str_start(const char *s, const char *t) {$/;"	f	signature:(const char *s, const char *t)
str_start	tinyssh/tinyssh/str.h	/^extern int str_start(const char *, const char *);$/;"	p	signature:(const char *, const char *)
stream_keybytes	process.h	/^    long long stream_keybytes;$/;"	m	struct:sshcrypto_cipher	access:public
stream_keybytes	tinyssh/tinyssh/sshcrypto.h	/^    long long stream_keybytes;$/;"	m	struct:sshcrypto_cipher	access:public
stream_xor	process.h	/^    int (*stream_xor)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
stream_xor	tinyssh/tinyssh/sshcrypto.h	/^    int (*stream_xor)(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *);$/;"	m	struct:sshcrypto_cipher	access:public
stringparser	tinyssh/tinyssh/stringparser.c	/^long long stringparser(const unsigned char *buf, long long len, long long pos, unsigned char **x, long long *xlen) {$/;"	f	signature:(const unsigned char *buf, long long len, long long pos, unsigned char **x, long long *xlen)
stringparser	tinyssh/tinyssh/stringparser.h	/^extern long long stringparser(const unsigned char *, long long, long long,  unsigned char **, long long *);$/;"	p	signature:(const unsigned char *, long long, long long, unsigned char **, long long *)
subprocess_auth	tinyssh/tinyssh/subprocess.h	/^extern int subprocess_auth(const char *, const char *, const char *);$/;"	p	signature:(const char *, const char *, const char *)
subprocess_auth	tinyssh/tinyssh/subprocess_auth.c	/^int subprocess_auth(const char *account, const char *keyname, const char *key) {$/;"	f	signature:(const char *account, const char *keyname, const char *key)
subprocess_auth_authorizedkeys_	tinyssh/tinyssh/subprocess.h	/^extern int subprocess_auth_authorizedkeys_(const char *, const char *, const char *, char *, long long);$/;"	p	signature:(const char *, const char *, const char *, char *, long long)
subprocess_auth_authorizedkeys_	tinyssh/tinyssh/subprocess_auth.c	/^int subprocess_auth_authorizedkeys_(const char *keyname, const char *key, const char *dir, char *buf, long long bufmax) {$/;"	f	signature:(const char *keyname, const char *key, const char *dir, char *buf, long long bufmax)
subprocess_auth_checkpath_	tinyssh/tinyssh/subprocess.h	/^extern int subprocess_auth_checkpath_(char *, long long, uid_t);$/;"	p	signature:(char *, long long, uid_t)
subprocess_auth_checkpath_	tinyssh/tinyssh/subprocess_auth.c	/^int subprocess_auth_checkpath_(char *path, long long pathlen, uid_t uid) {$/;"	f	signature:(char *path, long long pathlen, uid_t uid)
subprocess_sign	tinyssh/tinyssh/subprocess.h	/^extern int subprocess_sign(unsigned char *, long long, const char *, unsigned char *, long long);$/;"	p	signature:(unsigned char *, long long, const char *, unsigned char *, long long)
subprocess_sign	tinyssh/tinyssh/subprocess_sign.c	/^int subprocess_sign(unsigned char *y, long long ylen, const char *keydir, unsigned char *x, long long xlen) {$/;"	f	signature:(unsigned char *y, long long ylen, const char *keydir, unsigned char *x, long long xlen)
termname	tinyssh/tinyssh/channel.h	/^    char termname[TTY_NAME_MAX + 1];$/;"	m	struct:channel	access:public
timeout	tinyssh/tinyssh/tinysshd.c	/^static void timeout(int x) {$/;"	f	file:	signature:(int x)
tmp	tinyssh/crypto/gep256.base.py	/^        tmp = add(tmp, B)$/;"	v
tmp	tinyssh/crypto/gep256.base.py	/^tmp = dbl(B)$/;"	v
toaffine	tinyssh/crypto/gep256.c	/^static int toaffine(gep256 p) {$/;"	f	file:	signature:(gep256 p)
trigger	tinyssh/tinyssh/tinysshd.c	/^static void trigger(int x) {$/;"	f	file:	signature:(int x)
trymlock	tinyssh/tinyssh/trymlock.c	/^void trymlock(void *x, long long len) {$/;"	f	signature:(void *x, long long len)
trymlock	tinyssh/tinyssh/trymlock.h	/^extern void trymlock(void *, long long);$/;"	p	signature:(void *, long long)
trymunlock	tinyssh/tinyssh/trymlock.c	/^void trymunlock(void *x, long long len) {$/;"	f	signature:(void *x, long long len)
trymunlock	tinyssh/tinyssh/trymlock.h	/^extern void trymunlock(void *, long long);$/;"	p	signature:(void *, long long)
uint32_pack	tinyssh/crypto/uint32_pack.c	/^void uint32_pack(unsigned char *y, crypto_uint32 x) {$/;"	f	signature:(unsigned char *y, crypto_uint32 x)
uint32_pack	tinyssh/crypto/uint32_pack.h	/^extern void uint32_pack(unsigned char *, crypto_uint32);$/;"	p	signature:(unsigned char *, crypto_uint32)
uint32_pack_big	tinyssh/crypto/uint32_pack_big.c	/^void uint32_pack_big(unsigned char *y, crypto_uint32 x) {$/;"	f	signature:(unsigned char *y, crypto_uint32 x)
uint32_pack_big	tinyssh/crypto/uint32_pack_big.h	/^extern void uint32_pack_big(unsigned char *y, crypto_uint32 x);$/;"	p	signature:(unsigned char *y, crypto_uint32 x)
uint32_unpack	tinyssh/crypto/uint32_unpack.c	/^crypto_uint32 uint32_unpack(const unsigned char *x) {$/;"	f	signature:(const unsigned char *x)
uint32_unpack	tinyssh/crypto/uint32_unpack.h	/^extern crypto_uint32 uint32_unpack(const unsigned char *);$/;"	p	signature:(const unsigned char *)
uint32_unpack_big	tinyssh/crypto/uint32_unpack_big.c	/^crypto_uint32 uint32_unpack_big(const unsigned char *x) {$/;"	f	signature:(const unsigned char *x)
uint32_unpack_big	tinyssh/crypto/uint32_unpack_big.h	/^extern crypto_uint32 uint32_unpack_big(const unsigned char *);$/;"	p	signature:(const unsigned char *)
uint64_pack_big	tinyssh/crypto/uint64_pack_big.c	/^void uint64_pack_big(unsigned char *y, crypto_uint64 x) {$/;"	f	signature:(unsigned char *y, crypto_uint64 x)
uint64_pack_big	tinyssh/crypto/uint64_pack_big.h	/^extern void uint64_pack_big(unsigned char *y, crypto_uint64 x);$/;"	p	signature:(unsigned char *y, crypto_uint64 x)
uint64_unpack_big	tinyssh/crypto/uint64_unpack_big.c	/^crypto_uint64 uint64_unpack_big(const unsigned char *x) {$/;"	f	signature:(const unsigned char *x)
uint64_unpack_big	tinyssh/crypto/uint64_unpack_big.h	/^extern crypto_uint64 uint64_unpack_big(const unsigned char *);$/;"	p	signature:(const unsigned char *)
unknown	tinyssh/tinyssh/connectioninfo.c	106;"	d	file:
unlockpt	tinyssh/tinyssh/channel_forkpty.c	/^extern int unlockpt(int);$/;"	p	file:	signature:(int)
unpack	tinyssh/crypto/crypto_onetimeauth_poly1305.c	/^static crypto_uint32 unpack(const unsigned char *x) {$/;"	f	file:	signature:(const unsigned char *x)
unpack	tinyssh/crypto/crypto_onetimeauth_poly1305.c	16;"	d	file:
unpack	tinyssh/crypto/crypto_stream_chacha20.c	/^static crypto_uint32 unpack(const unsigned char *x) {$/;"	f	file:	signature:(const unsigned char *x)
unpack	tinyssh/crypto/crypto_stream_chacha20.c	14;"	d	file:
user	tinyssh/tinyssh/channel.h	/^    char user[LOGIN_NAME_MAX + 1];$/;"	m	struct:channel	access:public
verify	tinyssh/crypto/verify.c	/^int verify(const unsigned char *x, const unsigned char *y, long long n) {$/;"	f	signature:(const unsigned char *x, const unsigned char *y, long long n)
verify	tinyssh/crypto/verify.h	/^extern int verify(const unsigned char *, const unsigned char *, long long);$/;"	p	signature:(const unsigned char *, const unsigned char *, long long)
write_nbytes	process.cpp	/^bool write_nbytes( int sockfd, const char* buffer, int len )$/;"	f	signature:( int sockfd, const char* buffer, int len )
writeall	packet.cpp	/^int Packet::writeall(int fd,const void *xv,long long xlen)$/;"	f	class:Packet	signature:(int fd,const void *xv,long long xlen)
writeall	tinyssh/tinyssh/writeall.c	/^int writeall(int fd,const void *xv,long long xlen)$/;"	f	signature:(int fd,const void *xv,long long xlen)
writeall	tinyssh/tinyssh/writeall.h	/^extern int writeall(int,const void *,long long);$/;"	p	signature:(int,const void *,long long)
writesync	tinyssh/tinyssh/savesync.c	/^static int writesync(int fd,const void *x,long long xlen)$/;"	f	file:	signature:(int fd,const void *x,long long xlen)
x	tinyssh/tinyssh/channel.h	/^    int x;$/;"	m	struct:channel	access:public
xor2	tinyssh/crypto/aes.c	/^static void xor2(crypto_uint32 *r,  const crypto_uint32 *x) { *r ^= *x; }$/;"	f	file:	signature:(crypto_uint32 *r, const crypto_uint32 *x)
xorblock	tinyssh/crypto/crypto_stream_chacha20.c	40;"	d	file:
xrecover	tinyssh/crypto/ge25519.base.py	/^def xrecover(y):$/;"	f	access:public
y	tinyssh/tinyssh/channel.h	/^    int y;$/;"	m	struct:channel	access:public
zero	tinyssh/crypto/fe25519.c	/^static const unsigned char zero[32] = {0};$/;"	v	file:
zero	tinyssh/crypto/fep256.c	/^static const unsigned char zero[32] = {0};$/;"	v	file:
~DH_PubKey_Crypto	ssh_crypto.h	/^        ~DH_PubKey_Crypto();$/;"	p	class:DH_PubKey_Crypto	access:public	signature:()
~H_SessionID_Crypto	ssh_crypto.h	/^        ~H_SessionID_Crypto();$/;"	p	class:H_SessionID_Crypto	access:public	signature:()
~Packet	packet.cpp	/^Packet::~Packet()$/;"	f	class:Packet	signature:()
~Packet	packet.h	/^        ~Packet();$/;"	p	class:Packet	access:public	signature:()
~Process	process.h	/^        ~Process();$/;"	p	class:Process	access:public	signature:()
~ProcessGenerator	process.cpp	/^ProcessGenerator::~ProcessGenerator()$/;"	f	class:ProcessGenerator	signature:()
~ProcessGenerator	process.h	/^        ~ProcessGenerator();$/;"	p	class:ProcessGenerator	access:public	signature:()
~ShareSecret_Crypto	ssh_crypto.h	/^        ~ShareSecret_Crypto();$/;"	p	class:ShareSecret_Crypto	access:public	signature:()
